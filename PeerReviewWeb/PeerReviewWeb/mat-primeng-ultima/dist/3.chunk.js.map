{"version":3,"file":"3.chunk.js","sources":["webpack:///./src/app/home/pages/peerreview/services/study.service.ts","webpack:///./src/app/home/pages/peerreview/assignment.component.ts","webpack:///./src/app/home/pages/peerreview/peerreview.component.ts","webpack:///./src/app/home/pages/peerreview/reviewhistory.component.ts","webpack:///./src/app/home/pages/peerreview/loading.component.ts","webpack:///./src/app/home/pages/peerreview/models/assignment.ts","webpack:///./src/app/home/pages/peerreview/models/index.ts","webpack:///./src/app/home/pages/peerreview/models/peerreview.ts","webpack:///./src/app/home/pages/peerreview/models/prstatus.ts","webpack:///./src/app/home/pages/peerreview/models/radiologist.ts","webpack:///./src/app/home/pages/peerreview/models/reviewhistory.ts","webpack:///./src/app/home/pages/peerreview/models/subspecialty.ts","webpack:///./src/app/home/pages/peerreview/models/subspecialtylookup.ts","webpack:///./src/app/home/pages/peerreview/peerreview.module.ts","webpack:///./src/app/home/pages/peerreview/peerreview.routes.ts","webpack:///./src/app/home/pages/peerreview/assignment.template.html","webpack:///./src/app/home/pages/peerreview/peerreview.template.html","webpack:///./src/app/home/pages/peerreview/reviewhistory.template.html","webpack:///delegated ./node_modules/rxjs/add/operator/map.js from dll-reference vendor_lib"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { Study, PeerReview, ReviewHistory, Assignment } from '../models';\r\nimport { ApiService } from '../../../../services/api.service';\r\n\r\n@Injectable()\r\nexport class StudyService {\r\n\r\n    constructor(private http: Http, private api: ApiService) { }\r\n\r\n    public getGblEnv(orgId: number) {\r\n        return this.api.GET('peerreview/gblenv/' + orgId);\r\n    }\r\n\r\n    public getStudy(myId: number) {\r\n        return this.api.GET('peerreview/' + myId);\r\n    }\r\n\r\n    public getScore(assignID: string) {\r\n        return this.api.GET('peerreview/score/' + assignID);\r\n    }\r\n\r\n    public insertPeerReviewReport(prReview: PeerReview) {\r\n        return this.api.POST('peerreview/report', prReview);\r\n    }\r\n\r\n    public insertPeerReviewScore(prReview: PeerReview) {\r\n        return this.api.POST('peerreview/score', prReview);\r\n    }\r\n\r\n    public automaticAssignment(actionType: number, fromDt: string, toDt: string, createdBy: number) {\r\n        let param = { ACTION_TYPE: actionType, FROM_DT: fromDt, TO_DATE: toDt, CREATED_BY: createdBy };\r\n        return this.api.POST('peerstudy/autoassign', param);\r\n    }\r\n\r\n    public getAllSubspecialty(actionType: number) {\r\n        return this.api.GET('peerstudy/' + actionType);\r\n    }\r\n\r\n    public getAllRadiologist(actionType: number, subspecialtyId: number) {\r\n        return this.api.GET('peerstudy/radiologist/' + actionType + '/' + subspecialtyId);\r\n    }\r\n\r\n    public getAllRadAssignments(actionType: number, empId: number, subId: number) {\r\n        return this.api.GET('peerstudy/radassignment/' + actionType + '/' + empId + '/' + subId);\r\n    }\r\n\r\n    public getAllRadAssignmentsCount(actionType: number) {\r\n        return this.api.GET('peerstudy/studycount/' + actionType);\r\n    }\r\n\r\n    public getAllAssignmentsDate(actionType: number) {\r\n        return this.api.GET('peerstudy/assignmentdate/' + actionType);\r\n    }\r\n\r\n    public getAllReviewHistory(actionType: number, formdate: string, todate: string) {\r\n        let param = { ACTION_TYPE: actionType, FROM_DATE: formdate, TO_DATE: todate };\r\n        return this.api.POST('peerstudy/reviewhistory', param);\r\n    }\r\n\r\n    public getAllReviewHistoryDtl(actionType: number, formdate: string, todate: string, subid: number, empid: number) {\r\n        let param = { ACTION_TYPE: actionType, FROM_DATE: formdate, TO_DATE: todate, SUB_ID: subid, EMP_ID: empid };\r\n        return this.api.POST('peerstudy/reviewhistorydtl', param);\r\n    }\r\n\r\n    public getAlgorithm() {\r\n        return this.api.GET('peerstudy/peeralgorithm/');\r\n    }\r\n\r\n    public saveChangesAlgorithm(algorithmID: number, valPer: number, valMax: number) {\r\n        let param = { ALGORITHM_ID: algorithmID, VAL_PER: valPer, VAL_MAX: valMax };\r\n        return this.api.POST('peerstudy/changesalgorithm', param);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/services/study.service.ts","import { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subspecialty, SubspecialtyLookup, Radiologist, Study, Algorithm, PeerGblEnv } from './models';\r\nimport { StudyService } from './services/study.service';\r\nimport { LoadingComponent } from './loading.component';\r\nimport { ConfirmationService } from 'primeng/primeng';\r\n\r\n@Component({\r\n  template: require('./assignment.template.html'),\r\n  selector: 'peer-assignment'\r\n})\r\n\r\nexport class AssignmentComponent implements OnInit, OnDestroy {\r\n  public fromDate: Date;\r\n  public toDate: Date;\r\n  public msgs: any;\r\n  public subspecialty: SubspecialtyLookup[];\r\n  public selectedSub: string;\r\n  public selectedSubId: number;\r\n  public radiologists: Radiologist[];\r\n  public radiologistsCount: Radiologist[];\r\n  public selectedradiologist: Radiologist;\r\n  public studies: Study[];\r\n  public selectedstudy: Study;\r\n  public study: Study;\r\n  public radname: string;\r\n  public working: boolean;\r\n  public displayAllRadiologist: boolean;\r\n  public btnAutoStart: string;\r\n  public algorithmID: number;\r\n  public valPer: number;\r\n  public valMax: number;\r\n  public gblEnv: PeerGblEnv;\r\n\r\n  constructor(public studyService: StudyService, private confirmationService: ConfirmationService, private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.fromDate = new Date();\r\n    this.toDate = new Date();\r\n    this.btnAutoStart = 'Start Auto Assign';\r\n\r\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\r\n      this.gblEnv.USER_ID = params['userId'];\r\n      this.gblEnv.USER_NAME = params['userName'];\r\n      this.gblEnv.ORG_ID = params['orgId'];\r\n    });\r\n\r\n    this.studyService.getAllSubspecialty(1).subscribe((res: Subspecialty[]) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        let obj: Subspecialty[] = res;\r\n        this.subspecialty = [];\r\n        for (let i = 0; obj.length > i; i++) {\r\n          this.subspecialty.push({ id: obj[i].SUB_SPECIALTY_ID, label: obj[i].SUB_SPECIALTY_NAME, value: '' + obj[i].SUB_SPECIALTY_NAME });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.studyService.getAlgorithm().subscribe((res: Algorithm[]) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        let obj: Algorithm[] = res;\r\n        for (let i = 0; obj.length > i; i++) {\r\n          this.algorithmID = obj[i].PR_ALGORITHM_ID;\r\n          this.valPer = obj[i].PERCENTAGE_PER_RAD;\r\n          this.valMax = obj[i].MAX_ASSIGNMENT_PER_RAD;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public startAutoAssign() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform auto assignment action?',\r\n      accept: () => {\r\n        let param = 1;\r\n        let confirmMsg = 'Temporarily assgined studies among radiologists';\r\n        if (this.btnAutoStart === 'Confirm') {\r\n          param = 2;\r\n          confirmMsg = 'Permanently distributed studies among radiologists!';\r\n        }\r\n        this.working = true;\r\n        this.studyService.automaticAssignment(param, this.fromDate.toDateString(), this.toDate.toDateString(), this.gblEnv.USER_ID).subscribe((res) => {\r\n          if (res === null) {\r\n            this.msgs = [];\r\n            this.msgs.push({ severity: 'error', summary: 'Error :', detail: 'Failed to assign!' });\r\n            return;\r\n          } else {\r\n            this.msgs = [];\r\n            this.msgs.push({ severity: 'success', summary: 'Success :', detail: confirmMsg });\r\n            this.working = false;\r\n            if (this.btnAutoStart === 'Confirm')\r\n              this.btnAutoStart = 'Start Auto Assign';\r\n            else\r\n              this.btnAutoStart = 'Confirm';\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteAutoAssign() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to delete recent assignments?',\r\n      accept: () => {\r\n        this.working = true;\r\n        this.studyService.automaticAssignment(3, this.fromDate.toDateString(), this.toDate.toDateString(), this.gblEnv.USER_ID).subscribe((res) => {\r\n          if (res === null) {\r\n            this.msgs = [];\r\n            this.msgs.push({ severity: 'error', summary: 'Error', detail: 'Failed to delete!' });\r\n            return;\r\n          } else {\r\n            this.msgs = [];\r\n            this.msgs.push({ severity: 'warn', summary: 'Successfully', detail: 'Deleted Your Recent Assignments!' });\r\n            this.working = false;\r\n            this.btnAutoStart = 'Start Auto Assign';\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public onChangeSub(event) {\r\n    for (let i = 0; this.subspecialty.length > i; i++) {\r\n      if (this.subspecialty[i].value === this.selectedSub) {\r\n        this.selectedSubId = this.subspecialty[i].id;\r\n        this.studies = [];\r\n        this.radname = '';\r\n        this.studyService.getAllRadiologist(2, this.subspecialty[i].id).subscribe((res) => {\r\n          if (res === null) {\r\n            console.log('NOTHING FROM WEB API...');\r\n            return;\r\n          } else {\r\n            this.radiologists = res;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public onRowSelect(event) {\r\n    this.studyService.getAllRadAssignments(3, this.selectedradiologist.EMP_ID, this.selectedSubId).subscribe((res) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        this.studies = res;\r\n        this.radname = this.selectedradiologist.RAD_NAME;\r\n      }\r\n    });\r\n  }\r\n\r\n  public allRadiologists() {\r\n    this.working = true;\r\n    this.studyService.getAllRadAssignmentsCount(4).subscribe((res) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        this.radiologistsCount = res;\r\n        this.working = false;\r\n        this.displayAllRadiologist = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  public changeAlgorithm() {\r\n    this.studyService.saveChangesAlgorithm(this.algorithmID, this.valPer, this.valMax).subscribe((res) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'success', summary: 'Successfully', detail: 'Updated Algorithms!' });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    console.log('destroy');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/assignment.component.ts","import { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Study, Score, PeerReview, PeerStatus, PeerGblEnv } from './models';\r\nimport { StudyService } from './services/study.service';\r\nimport { ConfirmationService } from 'primeng/primeng';\r\n\r\n@Component({\r\n    template: require('./peerreview.template.html'),\r\n    selector: 'peer-worklist'\r\n})\r\n\r\nexport class PeerReviewComponent implements OnInit, OnDestroy {\r\n    public selectedTab = 0;\r\n    public reportTab: string = 'Write Review';\r\n    public finalizeReport: string;\r\n    public myReport: string;\r\n    public myComment: string;\r\n    public noOfStudies: string;\r\n    public noOfReviewed: string;\r\n    public noOfReviewing: string;\r\n    public scoreValue: string;\r\n    public ifFinal: boolean;\r\n    public displayDialog: boolean;\r\n    public displayScoring: boolean;\r\n    public study: Study;\r\n    public selectedStudy: Study;\r\n    public newStudy: boolean;\r\n    public studies: Study[];\r\n    public scores: Score[];\r\n    public msgs: any;\r\n    public dblclick: boolean;\r\n    public prStatus: PeerStatus[];\r\n    public selectedFilter: string;\r\n    public filterText: string;\r\n    public tabDisable: boolean = true;\r\n    public skipHide: boolean = true;\r\n    public gblEnv: PeerGblEnv[] = [];\r\n    public comment: string;\r\n    public hideComment: boolean;\r\n\r\n    public sTxtHN: string;\r\n    public sTxtPATIENTNAME: string;\r\n    public sTxtACCESSIONNO: string;\r\n    public sTxtEXAMNAME: string;\r\n    public sTxtTYPENAMEALIAS: string;\r\n    public sDateORDERDT: Date;\r\n\r\n    private queryParam: any;\r\n\r\n    constructor(\r\n        public studyService: StudyService,\r\n        private confirmationService: ConfirmationService,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.gblEnv = [];\r\n        this.filterText = 'Pending';\r\n        this.selectedFilter = 'Pending';\r\n        this.prStatus = [];\r\n        this.prStatus.push({ label: 'All', value: '' });\r\n        this.prStatus.push({ label: 'Reviewed', value: 'Reviewed' });\r\n        this.prStatus.push({ label: 'Pending', value: 'Pending' });\r\n        this.queryParam = this.activatedRoute.queryParams.subscribe((params: Params) => {\r\n            let env: PeerGblEnv = {\r\n                USER_ID: params['userId'],\r\n                USER_NAME: params['userName'],\r\n                ORG_ID: params['orgId']\r\n            };\r\n            this.gblEnv.push(env);\r\n            let unEnv = this.studyService.getGblEnv(this.gblEnv[0].ORG_ID).subscribe(\r\n                (resEnv: PeerGblEnv[]) => {\r\n                    if (!resEnv) {\r\n                        console.log('NOTHING FROM WEB API...');\r\n                        return;\r\n                    } else {\r\n                        this.gblEnv[0].ORG_NAME = resEnv[0].ORG_NAME;\r\n                        this.gblEnv[0].PACS_URL1 = resEnv[0].PACS_URL1;\r\n                    }\r\n                    let unStudy = this.studyService.getStudy(this.gblEnv[0].USER_ID).subscribe(\r\n                        (resStudy) => {\r\n                            if (!resStudy) {\r\n                                console.log('NOTHING FROM WEB API...');\r\n                                return;\r\n                            } else {\r\n                                this.studies = resStudy;\r\n                                this.study = resStudy[0];\r\n                                this.sTxtHN = this.study.HN;\r\n                                this.sTxtPATIENTNAME = this.study.PATIENT_NAME;\r\n                                this.sTxtACCESSIONNO = this.study.ACCESSION_NO;\r\n                                this.sTxtEXAMNAME = this.study.EXAM_NAME;\r\n                                this.sTxtTYPENAMEALIAS = this.study.TYPE_NAME_ALIAS;\r\n                                this.sDateORDERDT = new Date(this.study.ORDER_DT);\r\n                                let len: number = this.studies.length;\r\n                                let count: number = 0;\r\n                                this.noOfStudies = '' + len;\r\n                                for (let i = 0; len > i; i++) {\r\n                                    if (resStudy[i].STATUS === 'Pending') {\r\n                                        count++;\r\n                                    }\r\n                                }\r\n                                this.noOfReviewing = '' + count;\r\n                                this.noOfReviewed = '' + (len - count);\r\n                            }\r\n                            if (unStudy) {\r\n                                unStudy.unsubscribe();\r\n                            }\r\n                        });\r\n                    if (unEnv) {\r\n                        unEnv.unsubscribe();\r\n                    }\r\n                });\r\n            if (this.queryParam) {\r\n                this.queryParam.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    public showDialogToAdd() {\r\n        this.newStudy = true;\r\n        // this.study;\r\n        this.displayDialog = true;\r\n    }\r\n\r\n    public save() {\r\n        if (this.newStudy)\r\n            this.studies.push(this.study);\r\n        else\r\n            this.study[this.findSelectedStudyIndex()] = this.study;\r\n        this.study = null;\r\n        this.displayDialog = false;\r\n    }\r\n\r\n    public delete() {\r\n        this.studies.splice(this.findSelectedStudyIndex(), 1);\r\n        this.study = null;\r\n        this.displayDialog = false;\r\n    }\r\n\r\n    public onRowSelect(event) {\r\n        this.newStudy = false;\r\n        this.study = this.cloneStudy(event.data);\r\n        this.comment = this.selectedStudy.COMMENT;\r\n\r\n        if (this.selectedStudy.IS_COMMENTED === 'Yes')\r\n            this.hideComment = true;\r\n        else\r\n            this.hideComment = false;\r\n    }\r\n\r\n    public onRowDoubleClick(event) {\r\n        this.dblclick = true;\r\n        this.selectScore(this.study.ASSIGNMENT_ID);\r\n    }\r\n\r\n    public cloneStudy(c: Study): Study {\r\n        let study: Study;\r\n        study = c;\r\n        return study;\r\n    }\r\n    public selectStudy(study: Study) {\r\n        this.newStudy = false;\r\n        this.study = study;\r\n        this.selectScore(study.ASSIGNMENT_ID);\r\n        this.dblclick = false;\r\n    }\r\n\r\n    public selectScore(assignID: string) {\r\n        this.studyService.getScore(assignID).subscribe((res) => {\r\n            if (res === null) {\r\n                console.log('NOTHING FROM WEB API...');\r\n                return;\r\n            } else {\r\n                this.myReport = '';\r\n                this.finalizeReport = '';\r\n                this.displayScoring = true;\r\n                this.clearTabSelection();\r\n                let leftwin: number = window.screenX + 200;\r\n                let trackWindo = window.open('http://ramapacs%5Cpeerreview:1234@synapse:80/explore.asp?path=/All%20Studies./AccessionNumber=' + this.study.ACCESSION_NO, 'pacsurl', 'location=0, left=' + leftwin);\r\n                trackWindo.focus();\r\n                let obj: Score[] = res;\r\n                this.scores = obj;\r\n                this.finalizeReport = obj[0].RESULT_TEXT_HTML;\r\n                this.myReport = obj[0].REPORT_TEXT_HTML;\r\n                this.scoreValue = obj[0].REVIEW_SCORE;\r\n                this.myComment = obj[0].COMMENT;\r\n                if (obj[0].REPORT_STATUS === 'F') {\r\n                    this.ifFinal = true;\r\n                } else { this.ifFinal = false; }\r\n                if (this.myReport != null) {\r\n                    this.reportTab = 'My Review';\r\n                } else { this.reportTab = 'Write Review'; }\r\n                if (this.myReport != null) {\r\n                    this.tabDisable = false;\r\n                    this.skipHide = false;\r\n                } else {\r\n                    this.tabDisable = true;\r\n                    this.skipHide = true;\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveAsDraft(assignID: string) {\r\n        if (this.myReport != null) {\r\n            let prReview = new PeerReview();\r\n            prReview.ACTION_TYPE = 1;\r\n            prReview.ASSIGNMENT_ID = assignID;\r\n            prReview.CREATED_BY = this.gblEnv[0].USER_ID;\r\n            prReview.REPORT_STATUS = 'D';\r\n            prReview.REPORT_TEXT_HTML = this.myReport;\r\n\r\n            this.studyService.insertPeerReviewReport(prReview).subscribe((res) => {\r\n                if (res === null) {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'error', summary: 'Error', detail: 'Failed to save' });\r\n                    return;\r\n                } else {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'success', summary: 'Successfully', detail: 'Saved Your Draft' });\r\n                    this.tabDisable = false;\r\n                    this.skipHide = false;\r\n                }\r\n            });\r\n        } else {\r\n            this.confirmationService.confirm({\r\n                message: 'Your review report is empty!',\r\n                accept: () => {\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public saveAsFinal(assignID: string) {\r\n        if (this.myReport != null) {\r\n            let prReview = new PeerReview();\r\n            prReview.ACTION_TYPE = 1;\r\n            prReview.ASSIGNMENT_ID = assignID;\r\n            prReview.CREATED_BY = this.gblEnv[0].USER_ID;\r\n            prReview.REPORT_STATUS = 'F';\r\n            prReview.REPORT_TEXT_HTML = this.myReport;\r\n\r\n            this.studyService.insertPeerReviewReport(prReview).subscribe((res) => {\r\n                if (res === null) {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'error', summary: 'Error', detail: 'Failed to save' });\r\n                    return;\r\n                } else {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'success', summary: 'Successfully', detail: 'Saved Your Final Report' });\r\n                    this.tabDisable = false;\r\n                    this.skipHide = false;\r\n                }\r\n            });\r\n        } else {\r\n            this.confirmationService.confirm({\r\n                message: 'Your review report is empty!',\r\n                accept: () => {\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public saveScore(assignID: string) {\r\n        if (this.scoreValue != null) {\r\n            let prReview = new PeerReview();\r\n            prReview.ACTION_TYPE = 2;\r\n            prReview.ASSIGNMENT_ID = assignID;\r\n            prReview.CREATED_BY = this.gblEnv[0].USER_ID;\r\n            prReview.REVIEW_SCORE = this.scoreValue;\r\n            prReview.COMMENT = this.myComment;\r\n            this.studyService.insertPeerReviewScore(prReview).subscribe((res) => {\r\n                if (res === null) {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'error', summary: 'Error', detail: 'Failed to save' });\r\n                    return;\r\n                } else {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'success', summary: 'Successfully', detail: 'Saved Your Score' });\r\n                    this.study.REVIEW_SCORE = this.scoreValue;\r\n                    this.study.STATUS = 'Reviewed';\r\n                    this.studies[this.findSelectedStudyIndex()] = this.study;\r\n                    let len: number = this.studies.length;\r\n                    let count: number = 0;\r\n                    this.noOfStudies = '' + len;\r\n                    for (let i = 0; len > i; i++) {\r\n                        if (this.studies[i].STATUS === 'Pending') {\r\n                            count++;\r\n                        }\r\n                    }\r\n                    this.noOfReviewing = '' + count;\r\n                    this.noOfReviewed = '' + (len - count);\r\n                }\r\n            });\r\n        } else {\r\n            this.confirmationService.confirm({\r\n                message: 'Please select a score!',\r\n                accept: () => {\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public clearTabSelection() {\r\n        this.msgs = [];\r\n        this.selectedTab = 0;\r\n    }\r\n\r\n    public changeTab(index: number) {\r\n        this.selectedTab = index;\r\n    }\r\n\r\n    public findSelectedStudyIndex(): number {\r\n        return this.studies.indexOf(this.selectedStudy);\r\n    }\r\n\r\n    public onChangeStatus(event) {\r\n        if (this.selectedFilter === 'Pending') {\r\n            this.filterText = 'Pending';\r\n        } else {\r\n            this.filterText = this.selectedFilter;\r\n        }\r\n        this.studies = [];\r\n        this.studyService.getStudy(this.gblEnv[0].USER_ID).subscribe((res: Study[]) => {\r\n            if (res === null) {\r\n                console.log('NOTHING FROM WEB API...');\r\n                return;\r\n            } else {\r\n                let obj: Study[] = res;\r\n                this.studies = obj;\r\n                let len: number = this.studies.length;\r\n                let count: number = 0;\r\n                this.noOfStudies = '' + len;\r\n                for (let i = 0; len > i; i++) {\r\n                    if (obj[i].STATUS === 'Pending') {\r\n                        count++;\r\n                    }\r\n                }\r\n                this.noOfReviewing = '' + count;\r\n                this.noOfReviewed = '' + (len - count);\r\n            }\r\n        });\r\n    }\r\n\r\n    public skipToFinalReport() {\r\n        this.tabDisable = false;\r\n        this.selectedTab = 1;\r\n        this.skipHide = false;\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.queryParam.unsubscribe();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/peerreview.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Assignment, ReviewHistory, Study } from './models';\r\nimport { StudyService } from './services/study.service';\r\nimport { LoadingComponent } from './loading.component';\r\nimport { SelectItem } from 'primeng/primeng';\r\n\r\n@Component({\r\n  template: require('./reviewhistory.template.html'),\r\n  selector: 'review-history'\r\n})\r\n\r\nexport class ReviewHistoryComponent implements OnInit {\r\n  public assignDate: SelectItem[];\r\n  public fromDate: string;\r\n  public toDate: string;\r\n  public reviewHistory: ReviewHistory[];\r\n  public selectedHistory: ReviewHistory;\r\n  public displayHistory: boolean;\r\n  public subID: number;\r\n  public empID: number;\r\n  public radName: string;\r\n  public study: Study;\r\n  public studies: Study[];\r\n\r\n  constructor(public studyService: StudyService) {\r\n\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.studyService.getAllAssignmentsDate(1).subscribe((resAssign) => {\r\n      if (resAssign === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        let obj: Assignment[] = resAssign;\r\n        this.assignDate = [];\r\n        obj.forEach((forAss) => {\r\n          this.assignDate.push({ label: forAss.ASSIGNMENT_DATE, value: '' + forAss.ASSIGNMENT_DATE });\r\n        });\r\n\r\n        if (obj.length > 0) {\r\n          this.fromDate = obj[0].ASSIGNMENT_DATE;\r\n          this.toDate = obj[0].ASSIGNMENT_DATE;\r\n\r\n          this.studyService.getAllReviewHistory(2, this.fromDate, this.toDate).subscribe(\r\n            (resReview) => {\r\n              if (resReview === null) {\r\n                return;\r\n              } else {\r\n                this.reviewHistory = resReview;\r\n              }\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getReviewHistory() {\r\n    this.studyService.getAllReviewHistory(2, this.fromDate, this.toDate).subscribe((res: ReviewHistory[]) => {\r\n      if (res === null) {\r\n        console.log('NOTHING FROM WEB API...');\r\n        return;\r\n      } else {\r\n        console.log('result ws');\r\n        this.reviewHistory = res;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public onRowSelect(event) {\r\n    this.subID = this.selectedHistory.SUB_SPECIALTY_ID;\r\n    this.empID = this.selectedHistory.EMP_ID;\r\n    this.radName = '' + this.selectedHistory.RAD_NAME;\r\n  }\r\n\r\n  public onRowDoubleClick(event) {\r\n\r\n    this.studyService.getAllReviewHistoryDtl(3, this.fromDate, this.toDate, this.subID, this.empID).subscribe(\r\n      (res: Study[]) => {\r\n        if (res === null) {\r\n          console.log('NOTHING FROM WEB API...');\r\n          return;\r\n        } else {\r\n          console.log('result ws');\r\n          this.studies = res;\r\n          this.displayHistory = true;\r\n        }\r\n\r\n      });\r\n\r\n  }\r\n\r\n  public cloneHistory(c: ReviewHistory): ReviewHistory {\r\n    let history = this.selectedHistory;\r\n    history = c;\r\n    return history;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/reviewhistory.component.ts","import { Component, HostBinding, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  template: '',\r\n  styles: [`\r\n    @keyframes spin {\r\n      from {transform: rotate(0deg);}\r\n      to {transform: rotate(360deg);}\r\n    }\r\n    :host {\r\n      position:relative;\r\n      box-sizing: border-box;\r\n      display:inline-block;\r\n      padding:0px;\r\n      border-radius:100%;\r\n      border-style:solid;\r\n      animation: spin 0.8s linear infinite;\r\n    }\r\n    :host .margins {\r\n        margin: 0px 10px;\r\n    }\r\n  `]\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  @Input()\r\n  @HostBinding('style.width.px')\r\n  @HostBinding('style.height.px')\r\n  public size = 25;\r\n\r\n  @Input()\r\n  @HostBinding('style.borderWidth.px')\r\n  public tickness = 2;\r\n\r\n  @Input()\r\n  @HostBinding('style.borderTopColor')\r\n  public color = '#4f6aa7';\r\n\r\n  @Input()\r\n  public opacity = '.1';\r\n\r\n  @HostBinding('style.borderBottomColor')\r\n  @HostBinding('style.borderLeftColor')\r\n  @HostBinding('style.borderRightColor')\r\n  public secondColor = '';\r\n\r\n  public ngOnInit(): void {\r\n    const c = this.hexToRgb(this.color);\r\n    this.secondColor = 'rgba(' + c.r + ',' + c.g + ',' + c.b + ', ' + this.opacity + ')';\r\n  }\r\n\r\n  private hexToRgb(hex: string) {\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/loading.component.ts","export class Assignment {\r\n    public ACTION_TYPE: number;\r\n    public FROM_DATE: string;\r\n    public TO_DATE: string;\r\n    public SUBSPECIALTY_ID: number;\r\n    public EMP_ID: number;\r\n    public TOTAL_STUDY: number;\r\n    public ASSIGNMENT_DATE: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/assignment.ts","export * from './study';\r\nexport * from './score';\r\nexport * from './peerreview';\r\nexport * from './subspecialty';\r\nexport * from './subspecialtylookup';\r\nexport * from './radiologist';\r\nexport * from './prstatus';\r\nexport * from './peergblenv';\r\nexport * from './assignment';\r\nexport * from './reviewhistory';\r\nexport * from './algorithm';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/index.ts","export class PeerReview {\r\n    public ACTION_TYPE: number;\r\n    public ASSIGNMENT_ID: string;\r\n    public REPORT_TEXT_HTML: string;\r\n    public REPORT_STATUS: string;\r\n    public REVIEW_SCORE: string;\r\n    public COMMENT: string;\r\n    public CREATED_BY: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/peerreview.ts","export class PeerStatus {\r\n    public label: string;\r\n    public value: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/prstatus.ts","export class Radiologist {\r\n    public EMP_ID: number;\r\n    public RAD_NAME: string;\r\n    public GENDER?: string;\r\n    public DOB?: string;\r\n    public EMAIL?: string;\r\n    public STUDY_COUNT?: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/radiologist.ts","export class ReviewHistory {\r\n    public SUB_SPECIALTY_ID: number;\r\n    public SUB_SPECIALTY_NAME: string;\r\n    public EMP_ID: number;\r\n    public RAD_NAME: string;\r\n    public TOTAL: number;\r\n    public REVIEWED: number;\r\n    public PENDING: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/reviewhistory.ts","export class Subspecialty {\r\n    public SUB_SPECIALTY_ID: number;\r\n    public SUB_SPECIALTY_NAME: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/subspecialty.ts","export class SubspecialtyLookup {\r\n    public id: number;\r\n    public label: string;\r\n    public value: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/models/subspecialtylookup.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './peerreview.routes';\r\nimport { PeerReviewComponent } from './peerreview.component';\r\nimport { AssignmentComponent } from './assignment.component';\r\nimport { ReviewHistoryComponent } from './reviewhistory.component';\r\nimport { LoadingComponent } from './loading.component';\r\nimport { StudyService } from './services/study.service';\r\nimport {\r\n  DataTableModule, RadioButtonModule, ButtonModule,\r\n  DialogModule, PanelModule, TabViewModule,\r\n  EditorModule, SharedModule, MessagesModule,\r\n  CalendarModule, FieldsetModule, ConfirmDialogModule,\r\n  ConfirmationService, DropdownModule, SpinnerModule,\r\n  CheckboxModule, TooltipModule\r\n} from 'primeng/primeng';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Components / Directives/ Pipes\r\n    PeerReviewComponent,\r\n    AssignmentComponent,\r\n    ReviewHistoryComponent,\r\n    LoadingComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    DataTableModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    PanelModule,\r\n    TabViewModule,\r\n    EditorModule,\r\n    SharedModule,\r\n    RadioButtonModule,\r\n    MessagesModule,\r\n    CalendarModule,\r\n    FieldsetModule,\r\n    ConfirmDialogModule,\r\n    DropdownModule,\r\n    SpinnerModule,\r\n    ButtonModule,\r\n    CheckboxModule,\r\n    DataTableModule,\r\n    DialogModule,\r\n    SharedModule,\r\n    TooltipModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  providers: [ // expose our Services and Providers into Angular's dependency injection\r\n    StudyService, ConfirmationService\r\n  ]\r\n})\r\nexport class PeerReviewModule {\r\n  public static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/peerreview.module.ts","import { PeerReviewComponent } from './peerreview.component';\r\nimport { AssignmentComponent } from './assignment.component';\r\nimport { ReviewHistoryComponent } from './reviewhistory.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: PeerReviewComponent, pathMatch: 'full' },\r\n  { path: 'studyassign', component: AssignmentComponent },\r\n  { path: 'reviewhistory', component: ReviewHistoryComponent },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader?{\"configFile\":\"tslint.json\"}!./src/app/home/pages/peerreview/peerreview.routes.ts","module.exports = \"<div>\\r\\n    <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></p-confirmDialog>\\r\\n    <p-panel>\\r\\n        <p-header>\\r\\n            Automatic Study Assignment\\r\\n        </p-header>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    <p-fieldset legend=\\\"Automatic Process\\\">\\r\\n                        <font color=\\\"red\\\">Please be patient when automatic study assignment task started!</font><br><br>\\r\\n                        From Date: <p-calendar [(ngModel)]=\\\"fromDate\\\" [showIcon]=\\\"true\\\"></p-calendar>\\r\\n                        To Date :<p-calendar [(ngModel)]=\\\"toDate\\\" [showIcon]=\\\"true\\\"></p-calendar> <br><br><br>\\r\\n                        <button pButton type=\\\"button\\\" class=\\\"ui-button-warning\\\" (click)=\\\"startAutoAssign()\\\"\\r\\n                            [label]=\\\"btnAutoStart\\\" [disabled]=\\\"\\\"></button>\\r\\n                        <button pButton type=\\\"button\\\" class=\\\"ui-button-danger\\\" (click)=\\\"deleteAutoAssign()\\\"\\r\\n                            label=\\\"Delete Recent Assignments\\\"></button>\\r\\n                        <spinner *ngIf='working' [size]=\\\"50\\\" [tickness]=\\\"2\\\">surajit</spinner>\\r\\n                    </p-fieldset>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <p-fieldset legend=\\\"Algorithm\\\">\\r\\n                        <p-spinner size=\\\"3\\\" [(ngModel)]=\\\"valPer\\\" [min]=\\\"1\\\" [max]=\\\"100\\\"></p-spinner>\\r\\n                        <font color=\\\"orange\\\"><b>% From Each Radiologist's Finalized Studies</b></font> <br><br>\\r\\n                        <p-spinner size=\\\"3\\\" [(ngModel)]=\\\"valMax\\\" [min]=\\\"1\\\" [max]=\\\"100\\\"></p-spinner>\\r\\n                        <font color=\\\"orange\\\"><b>Max Assignment Quota For Each Radiologist</b></font><br><br><br>\\r\\n                        <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"changeAlgorithm()\\\"\\r\\n                            label=\\\"Save Changes\\\"></button>\\r\\n                    </p-fieldset>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <p-fieldset legend=\\\"Assignment History\\\" [toggleable]=\\\"true\\\" collapsed=\\\"true\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <p-dropdown [options]=\\\"subspecialty\\\" [(ngModel)]=\\\"selectedSub\\\" [style]=\\\"{'width':'350px'}\\\"\\r\\n                            editable=\\\"editable\\\" placeholder=\\\"Select a Subspecialty\\\" (onChange)=\\\"onChangeSub($event)\\\">\\r\\n                        </p-dropdown>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"allRadiologists()\\\"\\r\\n                            label=\\\"All Radiologists\\\"></button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <br><br>\\r\\n            <table style=\\\"height:150px;text-align:left;\\\">\\r\\n                <tr style=\\\"background-color:#3CBC3C;color:white;\\\">\\r\\n                    <th>All Radiologists From {{selectedSub}}</th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <p-dataTable [value]=\\\"radiologists\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedradiologist\\\"\\r\\n                        [rows]=\\\"10\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\" tableStyleClass=\\\"table\\\">\\r\\n                        <p-column field=\\\"EMP_ID\\\" header=\\\"EMP_ID\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                            [hidden]=\\\"true\\\"></p-column>\\r\\n                        <p-column field=\\\"RAD_NAME\\\" header=\\\"Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                            [hidden]=\\\"false\\\"></p-column>\\r\\n                        <p-column field=\\\"GENDER\\\" header=\\\"Gender\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\"></p-column>\\r\\n                        <p-column field=\\\"DOB\\\" header=\\\"Date of birth\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\" [hidden]=\\\"true\\\"></p-column>\\r\\n                        <p-column field=\\\"EMAIL\\\" header=\\\"Email\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\">\\r\\n                        </p-column>\\r\\n                    </p-dataTable>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <br><br>\\r\\n            <table style=\\\"height:150px;text-align:left;\\\">\\r\\n                <tr style=\\\"background-color:#3CBC3C;color:white;\\\">\\r\\n                    <th>Assigned Studies For {{radname}}</th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <p-dataTable [value]=\\\"studies\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedstudy\\\" [rows]=\\\"5\\\"\\r\\n                        [responsive]=\\\"true\\\" tableStyleClass=\\\"table\\\">\\r\\n                        <p-column field=\\\"HN\\\" header=\\\"HN\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                            [hidden]=\\\"false\\\"></p-column>\\r\\n                        <p-column field=\\\"PATIENT_NAME\\\" header=\\\"Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\"></p-column>\\r\\n                        <p-column field=\\\"ACCESSION_NO\\\" header=\\\"Accession No\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\" [hidden]=\\\"false\\\"></p-column>\\r\\n                        <p-column field=\\\"EXAM_NAME\\\" header=\\\"Exam Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\" [hidden]=\\\"false\\\"></p-column>\\r\\n                        <p-column field=\\\"ORDER_DT\\\" header=\\\"Study Date\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\">\\r\\n                            <template let-study=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                                <span>{{study.ORDER_DT | date:'dd/MM/yyyy'}}</span>\\r\\n                            </template>\\r\\n                        </p-column>\\r\\n                        <p-column field=\\\"TYPE_NAME_ALIAS\\\" header=\\\"Modality\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                            filterPlaceholder=\\\"\\\"></p-column>\\r\\n                    </p-dataTable>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </p-fieldset>\\r\\n    </p-panel>\\r\\n    <p-dialog header=\\\"Radiologist's Assignment Details\\\" [(visible)]=\\\"displayAllRadiologist\\\" [responsive]=\\\"true\\\"\\r\\n        showEffect=\\\"fade\\\" [modal]=\\\"true\\\" width=\\\"1024\\\" height=\\\"850\\\">\\r\\n        <p-panel>\\r\\n            <p-header>\\r\\n                Study Count :\\r\\n            </p-header>\\r\\n            <p-dataTable [value]=\\\"radiologistsCount\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n                [responsive]=\\\"true\\\" tableStyleClass=\\\"table\\\">\\r\\n                <p-column field=\\\"EMP_ID\\\" header=\\\"EMP_ID\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                    [hidden]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"RAD_NAME\\\" header=\\\"Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                    [hidden]=\\\"false\\\"></p-column>\\r\\n                <p-column field=\\\"GENDER\\\" header=\\\"Gender\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\">\\r\\n                </p-column>\\r\\n                <p-column field=\\\"DOB\\\" header=\\\"Date of birth\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                    [hidden]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"EMAIL\\\" header=\\\"Email\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\">\\r\\n                </p-column>\\r\\n                <p-column field=\\\"STUDY_COUNT\\\" header=\\\"Total\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\">\\r\\n                </p-column>\\r\\n            </p-dataTable>\\r\\n        </p-panel>\\r\\n    </p-dialog>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/pages/peerreview/assignment.template.html\n// module id = 488\n// module chunks = 3","module.exports = \"<div>\\r\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #cd>\\r\\n        <p-footer>\\r\\n            <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" label=\\\"Ok\\\" (click)=\\\"cd.accept()\\\"></button>\\r\\n        </p-footer>\\r\\n    </p-confirmDialog>\\r\\n    <p-panel>\\r\\n        <p-header>\\r\\n            Summary :\\r\\n        </p-header>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <td>\\r\\n                    <b>Total Assigned Cases :</b> {{noOfStudies}} <br>\\r\\n                    <b>Reviewed :</b> {{noOfReviewed}} <br>\\r\\n                    <b>Pending :</b> {{noOfReviewing}} <br>\\r\\n                    <p-dropdown [options]=\\\"prStatus\\\" [(ngModel)]=\\\"selectedFilter\\\" [style]=\\\"{'width':'350px'}\\\"\\r\\n                        editable=\\\"editable\\\" placeholder=\\\"Filter Status\\\" (onChange)=\\\"onChangeStatus($event)\\\">\\r\\n                    </p-dropdown>\\r\\n                    <input #gb type=\\\"text\\\" [value]=\\\"filterText\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\r\\n                        hidden=\\\"true\\\">\\r\\n                </td>\\r\\n                <td></td>\\r\\n                <td>\\r\\n                    <p-fieldset *ngIf=\\\"hideComment\\\" legend=\\\"Comments\\\" [toggleable]=\\\"true\\\" [collapsed]=\\\"true\\\">\\r\\n                        <textarea rows=\\\"10\\\" cols=\\\"60\\\" pInputTextarea [(ngModel)]=\\\"comment\\\" disabled=\\\"true\\\"></textarea>\\r\\n                    </p-fieldset>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </p-panel>\\r\\n    <p-dataTable [value]=\\\"studies\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedStudy\\\"\\r\\n        (onRowSelect)=\\\"onRowSelect($event)\\\" (onRowDblclick)=\\\"onRowDoubleClick($event)\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"\\r\\n        [responsive]=\\\"true\\\" [globalFilter]=\\\"gb\\\" tableStyleClass=\\\"table\\\">\\r\\n        <p-header>PEER REVIEW WORKLIST</p-header>\\r\\n        <p-column field=\\\"ASSIGNMENT_ID\\\" header=\\\"ASSIGNMENT_ID\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n            filterPlaceholder=\\\"Search\\\" [hidden]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"HN\\\" header=\\\"HN\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [hidden]=\\\"false\\\">\\r\\n        </p-column>\\r\\n        <p-column field=\\\"PATIENT_NAME\\\" header=\\\"Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n        </p-column>\\r\\n        <p-column field=\\\"ACCESSION_NO\\\" header=\\\"Accession No\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n            filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n        <p-column field=\\\"EXAM_NAME\\\" header=\\\"Exam Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n        </p-column>\\r\\n        <p-column field=\\\"ORDER_DT\\\" header=\\\"Study Date\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n            <template let-study=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <span>{{study.ORDER_DT | date:'dd/MM/yyyy'}}</span>\\r\\n            </template>\\r\\n        </p-column>\\r\\n        <p-column field=\\\"TYPE_NAME_ALIAS\\\" header=\\\"Modality\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n            filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n        <p-column field=\\\"REVIEW_SCORE\\\" header=\\\"Score\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n        </p-column>\\r\\n        <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n            filterMatchMode=\\\"equals\\\"></p-column>\\r\\n        <p-column field=\\\"IS_COMMENTED\\\" header=\\\"Comment\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n            filterMatchMode=\\\"equals\\\"></p-column>\\r\\n        <p-column field=\\\"COMMENT\\\" header=\\\"Comment\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n            filterMatchMode=\\\"equals\\\" [hidden]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"REVIEW_DT\\\" header=\\\"Review Date\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n            filterMatchMode=\\\"equals\\\">\\r\\n            <template let-study=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\r\\n                <span>{{study.REVIEW_DT | date:'dd/MM/yyyy'}}</span>\\r\\n            </template>\\r\\n        </p-column>\\r\\n        <p-column styleClass=\\\"col-button\\\">\\r\\n            <template let-study=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" pButton (click)=\\\"selectStudy(study)\\\" icon=\\\"ui-icon-pencil\\\"></button>\\r\\n            </template>\\r\\n        </p-column>\\r\\n\\r\\n    </p-dataTable>\\r\\n\\r\\n\\r\\n\\r\\n    <p-dialog header=\\\"Peer Review Details\\\" [(visible)]=\\\"displayScoring\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\"\\r\\n        [modal]=\\\"true\\\" [resizable]=\\\"true\\\" positionTop=\\\"5\\\" width=\\\"1024\\\" height=\\\"auto\\\">\\r\\n        <p-panel [toggleable]=\\\"true\\\">\\r\\n            <p-header>\\r\\n                Selected Study :\\r\\n            </p-header>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <b>HN</b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sTxtHN}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <b>Name </b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sTxtPATIENTNAME}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <b>Accession </b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sTxtACCESSIONNO}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <b>Exam </b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sTxtEXAMNAME}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <b>Modality </b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sTxtTYPENAMEALIAS}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <b>Study Date </b>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        :\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{sDateORDERDT | date:'MM/dd/yyyy'}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n\\r\\n        </p-panel>\\r\\n        <p-messages [value]=\\\"msgs\\\"></p-messages>\\r\\n        <p-tabView (onChange)=\\\"changeTab($event.index)\\\">\\r\\n\\r\\n            <p-tabPanel header={{reportTab}} [selected]=\\\"selectedTab === 0\\\">\\r\\n                <button pButton type=\\\"button\\\" class=\\\"ui-button-warning\\\" label=\\\"Save as draft\\\" [disabled]=\\\"ifFinal\\\"\\r\\n                    (click)=\\\"saveAsDraft(study.ASSIGNMENT_ID)\\\"></button>\\r\\n                <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" label=\\\"Save as final\\\" [disabled]=\\\"ifFinal\\\"\\r\\n                    (click)=\\\"saveAsFinal(study.ASSIGNMENT_ID)\\\"></button>\\r\\n                <p-editor [(ngModel)]=\\\"myReport\\\" [readOnly]=\\\"false\\\" [style]=\\\"{'height':'300px'}\\\">\\r\\n                    <p-header>\\r\\n                        <span class=\\\"ql-formats\\\">\\r\\n                            <button class=\\\"ql-bold\\\"></button>\\r\\n                            <button class=\\\"ql-italic\\\"></button>\\r\\n                            <button class=\\\"ql-underline\\\"></button>\\r\\n                        </span>\\r\\n                    </p-header>\\r\\n                </p-editor>\\r\\n                <table align=\\\"right\\\">\\r\\n                    <tr>\\r\\n                        <button *ngIf=\\\"skipHide\\\" pButton type=\\\"button\\\" class=\\\"ui-button-danger\\\" label=\\\"Skip >>\\\"\\r\\n                            [disabled]=\\\"ifFinal\\\" (click)=\\\"skipToFinalReport()\\\"></button>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </p-tabPanel>\\r\\n            <p-tabPanel header=\\\"Finalized Report\\\" [selected]=\\\"selectedTab === 1\\\" [disabled]=\\\"tabDisable\\\">\\r\\n                <p-editor [(ngModel)]=\\\"finalizeReport\\\" [style]=\\\"{'height':'300px'}\\\" [readOnly]=\\\"true\\\">\\r\\n                    <p-header>\\r\\n                        <span class=\\\"ql-formats\\\">\\r\\n                            <button class=\\\"ql-bold\\\"></button>\\r\\n                            <button class=\\\"ql-italic\\\"></button>\\r\\n                            <button class=\\\"ql-underline\\\"></button>\\r\\n                        </span>\\r\\n                    </p-header>\\r\\n                </p-editor>\\r\\n            </p-tabPanel>\\r\\n            <p-tabPanel header=\\\"Scoring\\\" [selected]=\\\"selectedTab === 2\\\" [disabled]=\\\"tabDisable\\\">\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p-panel [toggleable]=\\\"true\\\">\\r\\n                                <p-header>\\r\\n                                    Score:\\r\\n                                </p-header>\\r\\n                                <table width>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            1. Concur with interpretation\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            2. Discrepancy in Interpretation/not <br>\\r\\n                                            ordinarily expected to be <br>\\r\\n                                            made (understandable miss)\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            3. Discrepancy in Interpretation/ should <br>\\r\\n                                            be made most of the time\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <!-- <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            4. Discrepancy in Interpretation/ should be<br>\\r\\n                                            made almost every time – misinterpretation <br>\\r\\n                                            of finding\\r\\n                                        </td>\\r\\n                                    </tr> -->\\r\\n\\r\\n                                </table>\\r\\n                            </p-panel>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-panel [toggleable]=\\\"true\\\">\\r\\n                                <p-header>\\r\\n                                    Clinical Significance:\\r\\n                                </p-header>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"1\\\" [(ngModel)]=\\\"scoreValue\\\" label=\\\"\\\">\\r\\n                                            </p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"2a\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"2a. Unlikely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"2b\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"2b. Likely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"3a\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"3a. Unlikely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"3b\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"3b. Likely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <!-- <div>\\r\\n                                        <hr style=\\\"background: green; border: none; height: 2px;\\\" />\\r\\n                                    </div>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"4a\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"4a. Unlikely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <p-radioButton name=\\\"groupname\\\" value=\\\"4b\\\" [(ngModel)]=\\\"scoreValue\\\"\\r\\n                                                label=\\\"4b. Likely to be clinically significant\\\"></p-radioButton>\\r\\n                                        </td>\\r\\n                                    </tr> -->\\r\\n                                    <br>\\r\\n                                </table>\\r\\n\\r\\n                            </p-panel>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                <h3 class=\\\"first\\\">Comments</h3>\\r\\n                <textarea rows=\\\"10\\\" cols=\\\"90\\\" pInputTextarea [(ngModel)]=\\\"myComment\\\"></textarea>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" label=\\\"Save Changes\\\"\\r\\n                                (click)=\\\"saveScore(study.ASSIGNMENT_ID)\\\"></button>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <button pButton type=\\\"button\\\" class=\\\"ui-button-warning\\\" label=\\\"Reset\\\"></button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </p-tabPanel>\\r\\n        </p-tabView>\\r\\n    </p-dialog>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/pages/peerreview/peerreview.template.html\n// module id = 489\n// module chunks = 3","module.exports = \"<div>\\r\\n    <p-panel>\\r\\n        <p-header>\\r\\n            Review History\\r\\n        </p-header>\\r\\n        <p-fieldset>\\r\\n            <b>From Assign Date :</b>\\r\\n            <p-dropdown [options]=\\\"assignDate\\\" [(ngModel)]=\\\"fromDate\\\" [style]=\\\"{'width':'350px'}\\\" editable=\\\"editable\\\"\\r\\n                placeholder=\\\"Select a assign date\\\"></p-dropdown>\\r\\n            <b>To Assign Date :</b>\\r\\n            <p-dropdown [options]=\\\"assignDate\\\" [(ngModel)]=\\\"toDate\\\" [style]=\\\"{'width':'350px'}\\\" editable=\\\"editable\\\"\\r\\n                placeholder=\\\"Select a assign date\\\"></p-dropdown>\\r\\n            <button pButton type=\\\"button\\\" class=\\\"ui-button-success\\\" (click)=\\\"getReviewHistory()\\\"\\r\\n                label=\\\"  Find  \\\"></button>\\r\\n        </p-fieldset>\\r\\n        <hr>\\r\\n        <p-dataTable [value]=\\\"reviewHistory\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedHistory\\\" [rows]=\\\"5\\\"\\r\\n            [responsive]=\\\"true\\\" tableStyleClass=\\\"table\\\" (onRowSelect)=\\\"onRowSelect($event)\\\"\\r\\n            (onRowDblclick)=\\\"onRowDoubleClick($event)\\\">\\r\\n            <p-header></p-header>\\r\\n            <p-column field=\\\"SUB_SPECIALTY_NAME\\\" header=\\\"Subspecialty\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"\\\" [hidden]=\\\"false\\\"></p-column>\\r\\n            <p-column field=\\\"RAD_NAME\\\" header=\\\"Radiologist\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                [hidden]=\\\"false\\\"></p-column>\\r\\n            <p-column field=\\\"TOTAL\\\" header=\\\"Assigned\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                [hidden]=\\\"false\\\"></p-column>\\r\\n            <p-column field=\\\"REVIEWED\\\" header=\\\"Reviewed\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\">\\r\\n            </p-column>\\r\\n            <p-column field=\\\"PENDING\\\" header=\\\"Pending\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"\\\"\\r\\n                [hidden]=\\\"false\\\"></p-column>\\r\\n        </p-dataTable>\\r\\n    </p-panel>\\r\\n    <p-dialog header=\\\"Peer Review History Details\\\" [(visible)]=\\\"displayHistory\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\"\\r\\n        [modal]=\\\"true\\\" width=\\\"1400\\\" height=\\\"900\\\">\\r\\n        <p-panel>\\r\\n            <p-header>\\r\\n                Radiologist's NAME : {{radName}}\\r\\n            </p-header>\\r\\n        </p-panel>\\r\\n        <p-dataTable [value]=\\\"studies\\\" selectionMode=\\\"single\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [responsive]=\\\"true\\\"\\r\\n            tableStyleClass=\\\"table\\\">\\r\\n            <p-header></p-header>\\r\\n            <p-column field=\\\"HN\\\" header=\\\"HN\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n                [hidden]=\\\"false\\\"></p-column>\\r\\n            <p-column field=\\\"PATIENT_NAME\\\" header=\\\"Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n            </p-column>\\r\\n            <p-column field=\\\"ACCESSION_NO\\\" header=\\\"Accession No\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n            <p-column field=\\\"EXAM_NAME\\\" header=\\\"Exam Name\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n            <p-column field=\\\"ORDER_DT\\\" header=\\\"Study Date\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"Search\\\">\\r\\n                <template let-study=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                    <span>{{study.ORDER_DT | date:'dd/MM/yyyy'}}</span>\\r\\n                </template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"TYPE_NAME_ALIAS\\\" header=\\\"Modality\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n            <p-column field=\\\"REVIEW_SCORE\\\" header=\\\"Score\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n            </p-column>\\r\\n            <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"\\r\\n                filterMatchMode=\\\"equals\\\"></p-column>\\r\\n            <p-column field=\\\"REVIEW_DT\\\" header=\\\"Review Date\\\" [sortable]=\\\"false\\\" [filter]=\\\"true\\\"\\r\\n                filterPlaceholder=\\\"Search\\\" filterMatchMode=\\\"equals\\\">\\r\\n                <template let-study=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                    <span>{{study.REVIEW_DT | date:'dd/MM/yyyy'}}</span>\\r\\n                </template>\\r\\n            </p-column>\\r\\n        </p-dataTable>\\r\\n    </p-dialog>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/pages/peerreview/reviewhistory.template.html\n// module id = 490\n// module chunks = 3","module.exports = (__webpack_require__(9))(819);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/operator/map.js from dll-reference vendor_lib\n// module id = 491\n// module chunks = 3"],"mappings":";;;;;;;AAAA;AACA;AAEA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAnEA;AADA;AAGA;AAFA;AAAA;;;;;;;;;;;;;;;;;ACRA;AACA;AAEA;AAEA;AAOA;AAswBA;AAtBA;AAAA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAOA;AAsCA;AACA;AACA;AACA;AAxCA;AACA;AAqBA;AACA;AACA;AAiBA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAvVA;AALA;AACA;AACA;AACA;AAyCA;AACA;AACA;AAzCA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AAEA;AASA;AAaA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvFA;AALA;AACA;AACA;AACA;AAeA;AAbA;AAAA;;;;;;;;;;;;;;ACXA;AAwBA;AAtBA;AA2BA;AAIA;AAIA;AAGA;AAKA;AAeA;AAbA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA/BA;AAHA;AACA;AACA;;AACA;AAIA;AAFA;AACA;;AACA;AAIA;AAFA;AACA;;AACA;AAGA;AADA;;AACA;AAKA;AAHA;AACA;AACA;;AACA;AArBA;AAtBA;AACA;AACA;AACA;AAkBA;AACA;AAAA;;;;;;;;;;;;ACxBA;AAAA;AAQA;AAAA;AAAA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAQA;AAAA;AAAA;;;;;;;;;;;ACRA;AAAA;AAGA;AAAA;AAAA;;;;;;;;;;;ACHA;AAAA;AAOA;AAAA;AAAA;;;;;;;;;;;ACPA;AAAA;AAQA;AAAA;AAAA;;;;;;;;;;;ACRA;AAAA;AAGA;AAAA;AAAA;;;;;;;;;;;ACHA;AAAA;AAIA;AAAA;AAAA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8CA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AArCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}