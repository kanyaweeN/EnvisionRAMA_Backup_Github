//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9148
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Envision.Plugin.XtraFile.xtraData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsScheduleReportAIMC")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsScheduleReportAIMC : global::System.Data.DataSet {
        
        private Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC;
        
        private Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable tablePrc_RIS_Rpt_RadiologistWorkload_AIMC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsScheduleReportAIMC() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsScheduleReportAIMC(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Prc_RIS_SCHEDULE_XRPTREPORT_AIMC"] != null)) {
                    base.Tables.Add(new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable(ds.Tables["Prc_RIS_SCHEDULE_XRPTREPORT_AIMC"]));
                }
                if ((ds.Tables["Prc_RIS_Rpt_RadiologistWorkload_AIMC"] != null)) {
                    base.Tables.Add(new Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable(ds.Tables["Prc_RIS_Rpt_RadiologistWorkload_AIMC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable Prc_RIS_SCHEDULE_XRPTREPORT_AIMC {
            get {
                return this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable Prc_RIS_Rpt_RadiologistWorkload_AIMC {
            get {
                return this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsScheduleReportAIMC cln = ((dsScheduleReportAIMC)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Prc_RIS_SCHEDULE_XRPTREPORT_AIMC"] != null)) {
                    base.Tables.Add(new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable(ds.Tables["Prc_RIS_SCHEDULE_XRPTREPORT_AIMC"]));
                }
                if ((ds.Tables["Prc_RIS_Rpt_RadiologistWorkload_AIMC"] != null)) {
                    base.Tables.Add(new Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable(ds.Tables["Prc_RIS_Rpt_RadiologistWorkload_AIMC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC = ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable)(base.Tables["Prc_RIS_SCHEDULE_XRPTREPORT_AIMC"]));
            if ((initTable == true)) {
                if ((this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC != null)) {
                    this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.InitVars();
                }
            }
            this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC = ((Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable)(base.Tables["Prc_RIS_Rpt_RadiologistWorkload_AIMC"]));
            if ((initTable == true)) {
                if ((this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC != null)) {
                    this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsScheduleReportAIMC";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsScheduleReportAIMC.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC = new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable();
            base.Tables.Add(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC);
            this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC = new Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable();
            base.Tables.Add(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrc_RIS_SCHEDULE_XRPTREPORT_AIMC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrc_RIS_Rpt_RadiologistWorkload_AIMC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsScheduleReportAIMC ds = new dsScheduleReportAIMC();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEventHandler(object sender, Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent e);
        
        public delegate void Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEventHandler(object sender, Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable : global::System.Data.TypedTableBase<Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow> {
            
            private global::System.Data.DataColumn columnORG_ID;
            
            private global::System.Data.DataColumn columnHN;
            
            private global::System.Data.DataColumn columnPAT_THAI_NAME;
            
            private global::System.Data.DataColumn columnPAT_ENG_NAME;
            
            private global::System.Data.DataColumn columnPHONE1;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnEXAM_UID;
            
            private global::System.Data.DataColumn columnEXAM_NAME;
            
            private global::System.Data.DataColumn columnAPPOINT_DT;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnCLINIC_TYPE_TEXT;
            
            private global::System.Data.DataColumn columnMODALITY_NAME;
            
            private global::System.Data.DataColumn columnCREATED_BY;
            
            private global::System.Data.DataColumn columnCREATED_ON;
            
            private global::System.Data.DataColumn columnMODALITY_ID;
            
            private global::System.Data.DataColumn columnINS_TEXT;
            
            private global::System.Data.DataColumn columnEXAM_TYPE_INS;
            
            private global::System.Data.DataColumn columnHR_UNIT_INS;
            
            private global::System.Data.DataColumn columnUNIT_TITLE;
            
            private global::System.Data.DataColumn columnUNIT_NAME;
            
            private global::System.Data.DataColumn columnAGE;
            
            private global::System.Data.DataColumn columnGENDER;
            
            private global::System.Data.DataColumn columnCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnNONCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnROOM_UID;
            
            private global::System.Data.DataColumn columnINSURANCE_TYPE_DESC;
            
            private global::System.Data.DataColumn columnPATIENT_ID_LABEL;
            
            private global::System.Data.DataColumn columnPREPARATION_DESC;
            
            private global::System.Data.DataColumn columnINS_1;
            
            private global::System.Data.DataColumn columnINS_2;
            
            private global::System.Data.DataColumn columnINS_3;
            
            private global::System.Data.DataColumn columnINS_4;
            
            private global::System.Data.DataColumn columnINS_5;
            
            private global::System.Data.DataColumn columnHEADER_CONTACT;
            
            private global::System.Data.DataColumn columnFOOTER_CONTACT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable() {
                this.TableName = "Prc_RIS_SCHEDULE_XRPTREPORT_AIMC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORG_IDColumn {
                get {
                    return this.columnORG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HNColumn {
                get {
                    return this.columnHN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAT_THAI_NAMEColumn {
                get {
                    return this.columnPAT_THAI_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAT_ENG_NAMEColumn {
                get {
                    return this.columnPAT_ENG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHONE1Column {
                get {
                    return this.columnPHONE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXAM_UIDColumn {
                get {
                    return this.columnEXAM_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXAM_NAMEColumn {
                get {
                    return this.columnEXAM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPOINT_DTColumn {
                get {
                    return this.columnAPPOINT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLINIC_TYPE_TEXTColumn {
                get {
                    return this.columnCLINIC_TYPE_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODALITY_NAMEColumn {
                get {
                    return this.columnMODALITY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATED_ONColumn {
                get {
                    return this.columnCREATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODALITY_IDColumn {
                get {
                    return this.columnMODALITY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_TEXTColumn {
                get {
                    return this.columnINS_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXAM_TYPE_INSColumn {
                get {
                    return this.columnEXAM_TYPE_INS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_UNIT_INSColumn {
                get {
                    return this.columnHR_UNIT_INS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_TITLEColumn {
                get {
                    return this.columnUNIT_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIT_NAMEColumn {
                get {
                    return this.columnUNIT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GENDERColumn {
                get {
                    return this.columnGENDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLAIMABLE_AMTColumn {
                get {
                    return this.columnCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NONCLAIMABLE_AMTColumn {
                get {
                    return this.columnNONCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROOM_UIDColumn {
                get {
                    return this.columnROOM_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSURANCE_TYPE_DESCColumn {
                get {
                    return this.columnINSURANCE_TYPE_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATIENT_ID_LABELColumn {
                get {
                    return this.columnPATIENT_ID_LABEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPARATION_DESCColumn {
                get {
                    return this.columnPREPARATION_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_1Column {
                get {
                    return this.columnINS_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_2Column {
                get {
                    return this.columnINS_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_3Column {
                get {
                    return this.columnINS_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_4Column {
                get {
                    return this.columnINS_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INS_5Column {
                get {
                    return this.columnINS_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEADER_CONTACTColumn {
                get {
                    return this.columnHEADER_CONTACT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOOTER_CONTACTColumn {
                get {
                    return this.columnFOOTER_CONTACT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow this[int index] {
                get {
                    return ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(this.Rows[index]));
                }
            }
            
            public event Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEventHandler Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanging;
            
            public event Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEventHandler Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanged;
            
            public event Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEventHandler Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleting;
            
            public event Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEventHandler Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow(Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow AddPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow(
                        string ORG_ID, 
                        string HN, 
                        string PAT_THAI_NAME, 
                        string PAT_ENG_NAME, 
                        string PHONE1, 
                        string DOB, 
                        string EXAM_UID, 
                        string EXAM_NAME, 
                        string APPOINT_DT, 
                        string RATE, 
                        string CLINIC_TYPE_TEXT, 
                        string MODALITY_NAME, 
                        string CREATED_BY, 
                        string CREATED_ON, 
                        string MODALITY_ID, 
                        string INS_TEXT, 
                        string EXAM_TYPE_INS, 
                        string HR_UNIT_INS, 
                        string UNIT_TITLE, 
                        string UNIT_NAME, 
                        string AGE, 
                        string GENDER, 
                        string CLAIMABLE_AMT, 
                        string NONCLAIMABLE_AMT, 
                        string ROOM_UID, 
                        string INSURANCE_TYPE_DESC, 
                        string PATIENT_ID_LABEL, 
                        string PREPARATION_DESC, 
                        string INS_1, 
                        string INS_2, 
                        string INS_3, 
                        string INS_4, 
                        string INS_5, 
                        string HEADER_CONTACT, 
                        string FOOTER_CONTACT) {
                Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow rowPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow = ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORG_ID,
                        HN,
                        PAT_THAI_NAME,
                        PAT_ENG_NAME,
                        PHONE1,
                        DOB,
                        EXAM_UID,
                        EXAM_NAME,
                        APPOINT_DT,
                        RATE,
                        CLINIC_TYPE_TEXT,
                        MODALITY_NAME,
                        CREATED_BY,
                        CREATED_ON,
                        MODALITY_ID,
                        INS_TEXT,
                        EXAM_TYPE_INS,
                        HR_UNIT_INS,
                        UNIT_TITLE,
                        UNIT_NAME,
                        AGE,
                        GENDER,
                        CLAIMABLE_AMT,
                        NONCLAIMABLE_AMT,
                        ROOM_UID,
                        INSURANCE_TYPE_DESC,
                        PATIENT_ID_LABEL,
                        PREPARATION_DESC,
                        INS_1,
                        INS_2,
                        INS_3,
                        INS_4,
                        INS_5,
                        HEADER_CONTACT,
                        FOOTER_CONTACT};
                rowPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow);
                return rowPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable cln = ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnORG_ID = base.Columns["ORG_ID"];
                this.columnHN = base.Columns["HN"];
                this.columnPAT_THAI_NAME = base.Columns["PAT_THAI_NAME"];
                this.columnPAT_ENG_NAME = base.Columns["PAT_ENG_NAME"];
                this.columnPHONE1 = base.Columns["PHONE1"];
                this.columnDOB = base.Columns["DOB"];
                this.columnEXAM_UID = base.Columns["EXAM_UID"];
                this.columnEXAM_NAME = base.Columns["EXAM_NAME"];
                this.columnAPPOINT_DT = base.Columns["APPOINT_DT"];
                this.columnRATE = base.Columns["RATE"];
                this.columnCLINIC_TYPE_TEXT = base.Columns["CLINIC_TYPE_TEXT"];
                this.columnMODALITY_NAME = base.Columns["MODALITY_NAME"];
                this.columnCREATED_BY = base.Columns["CREATED_BY"];
                this.columnCREATED_ON = base.Columns["CREATED_ON"];
                this.columnMODALITY_ID = base.Columns["MODALITY_ID"];
                this.columnINS_TEXT = base.Columns["INS_TEXT"];
                this.columnEXAM_TYPE_INS = base.Columns["EXAM_TYPE_INS"];
                this.columnHR_UNIT_INS = base.Columns["HR_UNIT_INS"];
                this.columnUNIT_TITLE = base.Columns["UNIT_TITLE"];
                this.columnUNIT_NAME = base.Columns["UNIT_NAME"];
                this.columnAGE = base.Columns["AGE"];
                this.columnGENDER = base.Columns["GENDER"];
                this.columnCLAIMABLE_AMT = base.Columns["CLAIMABLE_AMT"];
                this.columnNONCLAIMABLE_AMT = base.Columns["NONCLAIMABLE_AMT"];
                this.columnROOM_UID = base.Columns["ROOM_UID"];
                this.columnINSURANCE_TYPE_DESC = base.Columns["INSURANCE_TYPE_DESC"];
                this.columnPATIENT_ID_LABEL = base.Columns["PATIENT_ID_LABEL"];
                this.columnPREPARATION_DESC = base.Columns["PREPARATION_DESC"];
                this.columnINS_1 = base.Columns["INS_1"];
                this.columnINS_2 = base.Columns["INS_2"];
                this.columnINS_3 = base.Columns["INS_3"];
                this.columnINS_4 = base.Columns["INS_4"];
                this.columnINS_5 = base.Columns["INS_5"];
                this.columnHEADER_CONTACT = base.Columns["HEADER_CONTACT"];
                this.columnFOOTER_CONTACT = base.Columns["FOOTER_CONTACT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnORG_ID = new global::System.Data.DataColumn("ORG_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_ID);
                this.columnHN = new global::System.Data.DataColumn("HN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHN);
                this.columnPAT_THAI_NAME = new global::System.Data.DataColumn("PAT_THAI_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_THAI_NAME);
                this.columnPAT_ENG_NAME = new global::System.Data.DataColumn("PAT_ENG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_ENG_NAME);
                this.columnPHONE1 = new global::System.Data.DataColumn("PHONE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE1);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnEXAM_UID = new global::System.Data.DataColumn("EXAM_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_UID);
                this.columnEXAM_NAME = new global::System.Data.DataColumn("EXAM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_NAME);
                this.columnAPPOINT_DT = new global::System.Data.DataColumn("APPOINT_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPOINT_DT);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnCLINIC_TYPE_TEXT = new global::System.Data.DataColumn("CLINIC_TYPE_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLINIC_TYPE_TEXT);
                this.columnMODALITY_NAME = new global::System.Data.DataColumn("MODALITY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODALITY_NAME);
                this.columnCREATED_BY = new global::System.Data.DataColumn("CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_BY);
                this.columnCREATED_ON = new global::System.Data.DataColumn("CREATED_ON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_ON);
                this.columnMODALITY_ID = new global::System.Data.DataColumn("MODALITY_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODALITY_ID);
                this.columnINS_TEXT = new global::System.Data.DataColumn("INS_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_TEXT);
                this.columnEXAM_TYPE_INS = new global::System.Data.DataColumn("EXAM_TYPE_INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_TYPE_INS);
                this.columnHR_UNIT_INS = new global::System.Data.DataColumn("HR_UNIT_INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_UNIT_INS);
                this.columnUNIT_TITLE = new global::System.Data.DataColumn("UNIT_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_TITLE);
                this.columnUNIT_NAME = new global::System.Data.DataColumn("UNIT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_NAME);
                this.columnAGE = new global::System.Data.DataColumn("AGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE);
                this.columnGENDER = new global::System.Data.DataColumn("GENDER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENDER);
                this.columnCLAIMABLE_AMT = new global::System.Data.DataColumn("CLAIMABLE_AMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAIMABLE_AMT);
                this.columnNONCLAIMABLE_AMT = new global::System.Data.DataColumn("NONCLAIMABLE_AMT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONCLAIMABLE_AMT);
                this.columnROOM_UID = new global::System.Data.DataColumn("ROOM_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_UID);
                this.columnINSURANCE_TYPE_DESC = new global::System.Data.DataColumn("INSURANCE_TYPE_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSURANCE_TYPE_DESC);
                this.columnPATIENT_ID_LABEL = new global::System.Data.DataColumn("PATIENT_ID_LABEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_ID_LABEL);
                this.columnPREPARATION_DESC = new global::System.Data.DataColumn("PREPARATION_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPARATION_DESC);
                this.columnINS_1 = new global::System.Data.DataColumn("INS_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_1);
                this.columnINS_2 = new global::System.Data.DataColumn("INS_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_2);
                this.columnINS_3 = new global::System.Data.DataColumn("INS_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_3);
                this.columnINS_4 = new global::System.Data.DataColumn("INS_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_4);
                this.columnINS_5 = new global::System.Data.DataColumn("INS_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_5);
                this.columnHEADER_CONTACT = new global::System.Data.DataColumn("HEADER_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEADER_CONTACT);
                this.columnFOOTER_CONTACT = new global::System.Data.DataColumn("FOOTER_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOOTER_CONTACT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow NewPrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow() {
                return ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanged != null)) {
                    this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanged(this, new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent(((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanging != null)) {
                    this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChanging(this, new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent(((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleted != null)) {
                    this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleted(this, new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent(((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleting != null)) {
                    this.Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowDeleting(this, new Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent(((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrc_RIS_SCHEDULE_XRPTREPORT_AIMCRow(Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsScheduleReportAIMC ds = new dsScheduleReportAIMC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable : global::System.Data.TypedTableBase<Prc_RIS_Rpt_RadiologistWorkload_AIMCRow> {
            
            private global::System.Data.DataColumn columnHN;
            
            private global::System.Data.DataColumn _columnชื่อ_นามสกุล;
            
            private global::System.Data.DataColumn columnรหัสส่วนตรวจ;
            
            private global::System.Data.DataColumn columnชื่อส่วนตรวจ;
            
            private global::System.Data.DataColumn columnPriority;
            
            private global::System.Data.DataColumn _columnวัน_เวลาที่ตรวจ;
            
            private global::System.Data.DataColumn _columnวัน_เวลาที่นัดหมาย;
            
            private global::System.Data.DataColumn _columnวัน_เวลาที่_request;
            
            private global::System.Data.DataColumn columnการเตรียมตัวตรวจ;
            
            private global::System.Data.DataColumn columnสิทธิการรักษา;
            
            private global::System.Data.DataColumn columnราคา;
            
            private global::System.Data.DataColumn columnเครื่องที่ลงทะเบียน;
            
            private global::System.Data.DataColumn columnแพทย์อ่านผล_1;
            
            private global::System.Data.DataColumn columnแพทย์อ่านผล_2;
            
            private global::System.Data.DataColumn columnแพทย์ที่ถูก_Assign;
            
            private global::System.Data.DataColumn columnAssign_By;
            
            private global::System.Data.DataColumn columnวันที่รับผล;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable() {
                this.TableName = "Prc_RIS_Rpt_RadiologistWorkload_AIMC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HNColumn {
                get {
                    return this.columnHN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _ชื่อ_นามสกุลColumn {
                get {
                    return this._columnชื่อ_นามสกุล;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn รหัสส่วนตรวจColumn {
                get {
                    return this.columnรหัสส่วนตรวจ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ชื่อส่วนตรวจColumn {
                get {
                    return this.columnชื่อส่วนตรวจ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _วัน_เวลาที่ตรวจColumn {
                get {
                    return this._columnวัน_เวลาที่ตรวจ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _วัน_เวลาที่นัดหมายColumn {
                get {
                    return this._columnวัน_เวลาที่นัดหมาย;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _วัน_เวลาที่_requestColumn {
                get {
                    return this._columnวัน_เวลาที่_request;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn การเตรียมตัวตรวจColumn {
                get {
                    return this.columnการเตรียมตัวตรวจ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn สิทธิการรักษาColumn {
                get {
                    return this.columnสิทธิการรักษา;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ราคาColumn {
                get {
                    return this.columnราคา;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn เครื่องที่ลงทะเบียนColumn {
                get {
                    return this.columnเครื่องที่ลงทะเบียน;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn แพทย์อ่านผล_1Column {
                get {
                    return this.columnแพทย์อ่านผล_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn แพทย์อ่านผล_2Column {
                get {
                    return this.columnแพทย์อ่านผล_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn แพทย์ที่ถูก_AssignColumn {
                get {
                    return this.columnแพทย์ที่ถูก_Assign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Assign_ByColumn {
                get {
                    return this.columnAssign_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn วันที่รับผลColumn {
                get {
                    return this.columnวันที่รับผล;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCRow this[int index] {
                get {
                    return ((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(this.Rows[index]));
                }
            }
            
            public event Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEventHandler Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanging;
            
            public event Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEventHandler Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanged;
            
            public event Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEventHandler Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleting;
            
            public event Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEventHandler Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrc_RIS_Rpt_RadiologistWorkload_AIMCRow(Prc_RIS_Rpt_RadiologistWorkload_AIMCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCRow AddPrc_RIS_Rpt_RadiologistWorkload_AIMCRow(
                        string HN, 
                        string _ชื่อ_นามสกุล, 
                        string รหัสส่วนตรวจ, 
                        string ชื่อส่วนตรวจ, 
                        string Priority, 
                        string _วัน_เวลาที่ตรวจ, 
                        string _วัน_เวลาที่นัดหมาย, 
                        string _วัน_เวลาที่_request, 
                        string การเตรียมตัวตรวจ, 
                        string สิทธิการรักษา, 
                        string ราคา, 
                        string เครื่องที่ลงทะเบียน, 
                        string แพทย์อ่านผล_1, 
                        string แพทย์อ่านผล_2, 
                        string แพทย์ที่ถูก_Assign, 
                        string Assign_By, 
                        string วันที่รับผล) {
                Prc_RIS_Rpt_RadiologistWorkload_AIMCRow rowPrc_RIS_Rpt_RadiologistWorkload_AIMCRow = ((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HN,
                        _ชื่อ_นามสกุล,
                        รหัสส่วนตรวจ,
                        ชื่อส่วนตรวจ,
                        Priority,
                        _วัน_เวลาที่ตรวจ,
                        _วัน_เวลาที่นัดหมาย,
                        _วัน_เวลาที่_request,
                        การเตรียมตัวตรวจ,
                        สิทธิการรักษา,
                        ราคา,
                        เครื่องที่ลงทะเบียน,
                        แพทย์อ่านผล_1,
                        แพทย์อ่านผล_2,
                        แพทย์ที่ถูก_Assign,
                        Assign_By,
                        วันที่รับผล};
                rowPrc_RIS_Rpt_RadiologistWorkload_AIMCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrc_RIS_Rpt_RadiologistWorkload_AIMCRow);
                return rowPrc_RIS_Rpt_RadiologistWorkload_AIMCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable cln = ((Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHN = base.Columns["HN"];
                this._columnชื่อ_นามสกุล = base.Columns["ชื่อ-นามสกุล"];
                this.columnรหัสส่วนตรวจ = base.Columns["รหัสส่วนตรวจ"];
                this.columnชื่อส่วนตรวจ = base.Columns["ชื่อส่วนตรวจ"];
                this.columnPriority = base.Columns["Priority"];
                this._columnวัน_เวลาที่ตรวจ = base.Columns["วัน-เวลาที่ตรวจ"];
                this._columnวัน_เวลาที่นัดหมาย = base.Columns["วัน-เวลาที่นัดหมาย"];
                this._columnวัน_เวลาที่_request = base.Columns["วัน-เวลาที่ request"];
                this.columnการเตรียมตัวตรวจ = base.Columns["การเตรียมตัวตรวจ"];
                this.columnสิทธิการรักษา = base.Columns["สิทธิการรักษา"];
                this.columnราคา = base.Columns["ราคา"];
                this.columnเครื่องที่ลงทะเบียน = base.Columns["เครื่องที่ลงทะเบียน"];
                this.columnแพทย์อ่านผล_1 = base.Columns["แพทย์อ่านผล 1"];
                this.columnแพทย์อ่านผล_2 = base.Columns["แพทย์อ่านผล 2"];
                this.columnแพทย์ที่ถูก_Assign = base.Columns["แพทย์ที่ถูก Assign"];
                this.columnAssign_By = base.Columns["Assign By"];
                this.columnวันที่รับผล = base.Columns["วันที่รับผล"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHN = new global::System.Data.DataColumn("HN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHN);
                this._columnชื่อ_นามสกุล = new global::System.Data.DataColumn("ชื่อ-นามสกุล", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnชื่อ_นามสกุล.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnชื่อ_นามสกุล");
                this._columnชื่อ_นามสกุล.ExtendedProperties.Add("Generator_UserColumnName", "ชื่อ-นามสกุล");
                base.Columns.Add(this._columnชื่อ_นามสกุล);
                this.columnรหัสส่วนตรวจ = new global::System.Data.DataColumn("รหัสส่วนตรวจ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnรหัสส่วนตรวจ);
                this.columnชื่อส่วนตรวจ = new global::System.Data.DataColumn("ชื่อส่วนตรวจ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnชื่อส่วนตรวจ);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this._columnวัน_เวลาที่ตรวจ = new global::System.Data.DataColumn("วัน-เวลาที่ตรวจ", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnวัน_เวลาที่ตรวจ.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnวัน_เวลาที่ตรวจ");
                this._columnวัน_เวลาที่ตรวจ.ExtendedProperties.Add("Generator_UserColumnName", "วัน-เวลาที่ตรวจ");
                base.Columns.Add(this._columnวัน_เวลาที่ตรวจ);
                this._columnวัน_เวลาที่นัดหมาย = new global::System.Data.DataColumn("วัน-เวลาที่นัดหมาย", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnวัน_เวลาที่นัดหมาย.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnวัน_เวลาที่นัดหมาย");
                this._columnวัน_เวลาที่นัดหมาย.ExtendedProperties.Add("Generator_UserColumnName", "วัน-เวลาที่นัดหมาย");
                base.Columns.Add(this._columnวัน_เวลาที่นัดหมาย);
                this._columnวัน_เวลาที่_request = new global::System.Data.DataColumn("วัน-เวลาที่ request", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnวัน_เวลาที่_request.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnวัน_เวลาที่_request");
                this._columnวัน_เวลาที่_request.ExtendedProperties.Add("Generator_UserColumnName", "วัน-เวลาที่ request");
                base.Columns.Add(this._columnวัน_เวลาที่_request);
                this.columnการเตรียมตัวตรวจ = new global::System.Data.DataColumn("การเตรียมตัวตรวจ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnการเตรียมตัวตรวจ);
                this.columnสิทธิการรักษา = new global::System.Data.DataColumn("สิทธิการรักษา", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnสิทธิการรักษา);
                this.columnราคา = new global::System.Data.DataColumn("ราคา", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnราคา);
                this.columnเครื่องที่ลงทะเบียน = new global::System.Data.DataColumn("เครื่องที่ลงทะเบียน", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnเครื่องที่ลงทะเบียน);
                this.columnแพทย์อ่านผล_1 = new global::System.Data.DataColumn("แพทย์อ่านผล 1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnแพทย์อ่านผล_1);
                this.columnแพทย์อ่านผล_2 = new global::System.Data.DataColumn("แพทย์อ่านผล 2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnแพทย์อ่านผล_2);
                this.columnแพทย์ที่ถูก_Assign = new global::System.Data.DataColumn("แพทย์ที่ถูก Assign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnแพทย์ที่ถูก_Assign);
                this.columnAssign_By = new global::System.Data.DataColumn("Assign By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssign_By);
                this.columnวันที่รับผล = new global::System.Data.DataColumn("วันที่รับผล", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnวันที่รับผล);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCRow NewPrc_RIS_Rpt_RadiologistWorkload_AIMCRow() {
                return ((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Prc_RIS_Rpt_RadiologistWorkload_AIMCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Prc_RIS_Rpt_RadiologistWorkload_AIMCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanged != null)) {
                    this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanged(this, new Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent(((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanging != null)) {
                    this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChanging(this, new Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent(((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleted != null)) {
                    this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleted(this, new Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent(((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleting != null)) {
                    this.Prc_RIS_Rpt_RadiologistWorkload_AIMCRowDeleting(this, new Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent(((Prc_RIS_Rpt_RadiologistWorkload_AIMCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrc_RIS_Rpt_RadiologistWorkload_AIMCRow(Prc_RIS_Rpt_RadiologistWorkload_AIMCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsScheduleReportAIMC ds = new dsScheduleReportAIMC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow : global::System.Data.DataRow {
            
            private Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC = ((Prc_RIS_SCHEDULE_XRPTREPORT_AIMCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORG_ID {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ORG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORG_ID\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ORG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HN {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HN\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAT_THAI_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_THAI_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAT_THAI_NAME\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_THAI_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAT_ENG_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_ENG_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAT_ENG_NAME\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_ENG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHONE1 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PHONE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHONE1\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PHONE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXAM_UID {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_UID\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXAM_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_NAME\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPOINT_DT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.APPOINT_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPOINT_DT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.APPOINT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATE {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLINIC_TYPE_TEXT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLINIC_TYPE_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLINIC_TYPE_TEXT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLINIC_TYPE_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODALITY_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODALITY_NAME\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_BY\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATED_ON {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_ON\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODALITY_ID {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODALITY_ID\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_TEXT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_TEXT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXAM_TYPE_INS {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_TYPE_INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_TYPE_INS\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_TYPE_INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_UNIT_INS {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HR_UNIT_INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_UNIT_INS\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HR_UNIT_INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_TITLE {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_TITLE\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_NAME\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGE {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.AGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGE\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.AGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GENDER {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.GENDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GENDER\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.GENDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLAIMABLE_AMT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLAIMABLE_AMT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NONCLAIMABLE_AMT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.NONCLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NONCLAIMABLE_AMT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.NONCLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROOM_UID {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ROOM_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROOM_UID\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ROOM_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSURANCE_TYPE_DESC {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INSURANCE_TYPE_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSURANCE_TYPE_DESC\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_" +
                                "AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INSURANCE_TYPE_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATIENT_ID_LABEL {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PATIENT_ID_LABELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PATIENT_ID_LABEL\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PATIENT_ID_LABELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREPARATION_DESC {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PREPARATION_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPARATION_DESC\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PREPARATION_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_1 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_1\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_2 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_2\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_3 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_3\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_4 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_4\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS_5 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_5\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HEADER_CONTACT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HEADER_CONTACTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEADER_CONTACT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HEADER_CONTACTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOOTER_CONTACT {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.FOOTER_CONTACTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOOTER_CONTACT\' in table \'Prc_RIS_SCHEDULE_XRPTREPORT_AIMC\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.FOOTER_CONTACTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_IDNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ORG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_IDNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ORG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAT_THAI_NAMENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_THAI_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAT_THAI_NAMENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_THAI_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAT_ENG_NAMENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_ENG_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAT_ENG_NAMENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PAT_ENG_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHONE1Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PHONE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHONE1Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PHONE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXAM_UIDNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXAM_UIDNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXAM_NAMENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXAM_NAMENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPOINT_DTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.APPOINT_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPOINT_DTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.APPOINT_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLINIC_TYPE_TEXTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLINIC_TYPE_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLINIC_TYPE_TEXTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLINIC_TYPE_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODALITY_NAMENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODALITY_NAMENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATED_BYNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATED_BYNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATED_ONNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATED_ONNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CREATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODALITY_IDNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODALITY_IDNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.MODALITY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_TEXTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_TEXTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXAM_TYPE_INSNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_TYPE_INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXAM_TYPE_INSNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.EXAM_TYPE_INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_UNIT_INSNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HR_UNIT_INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_UNIT_INSNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HR_UNIT_INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_TITLENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_TITLENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_NAMENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_NAMENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.UNIT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGENull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.AGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGENull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.AGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGENDERNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.GENDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGENDERNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.GENDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLAIMABLE_AMTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLAIMABLE_AMTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.CLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNONCLAIMABLE_AMTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.NONCLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNONCLAIMABLE_AMTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.NONCLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROOM_UIDNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ROOM_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROOM_UIDNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.ROOM_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSURANCE_TYPE_DESCNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INSURANCE_TYPE_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSURANCE_TYPE_DESCNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INSURANCE_TYPE_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATIENT_ID_LABELNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PATIENT_ID_LABELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATIENT_ID_LABELNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PATIENT_ID_LABELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPARATION_DESCNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PREPARATION_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPARATION_DESCNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.PREPARATION_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_1Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_1Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_2Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_2Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_3Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_3Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_4Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_4Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINS_5Null() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINS_5Null() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.INS_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEADER_CONTACTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HEADER_CONTACTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEADER_CONTACTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.HEADER_CONTACTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOOTER_CONTACTNull() {
                return this.IsNull(this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.FOOTER_CONTACTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOOTER_CONTACTNull() {
                this[this.tablePrc_RIS_SCHEDULE_XRPTREPORT_AIMC.FOOTER_CONTACTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Prc_RIS_Rpt_RadiologistWorkload_AIMCRow : global::System.Data.DataRow {
            
            private Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable tablePrc_RIS_Rpt_RadiologistWorkload_AIMC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Prc_RIS_Rpt_RadiologistWorkload_AIMCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC = ((Prc_RIS_Rpt_RadiologistWorkload_AIMCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HN {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.HNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HN\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIMC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.HNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _ชื่อ_นามสกุล {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._ชื่อ_นามสกุลColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ชื่อ-นามสกุล\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._ชื่อ_นามสกุลColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string รหัสส่วนตรวจ {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.รหัสส่วนตรวจColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'รหัสส่วนตรวจ\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.รหัสส่วนตรวจColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ชื่อส่วนตรวจ {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ชื่อส่วนตรวจColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ชื่อส่วนตรวจ\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIM" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ชื่อส่วนตรวจColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Priority {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIMC\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _วัน_เวลาที่ตรวจ {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่ตรวจColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'วัน-เวลาที่ตรวจ\' in table \'Prc_RIS_Rpt_RadiologistWorkload_" +
                                "AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่ตรวจColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _วัน_เวลาที่นัดหมาย {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่นัดหมายColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'วัน-เวลาที่นัดหมาย\' in table \'Prc_RIS_Rpt_RadiologistWorklo" +
                                "ad_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่นัดหมายColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _วัน_เวลาที่_request {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่_requestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'วัน-เวลาที่ request\' in table \'Prc_RIS_Rpt_RadiologistWorkl" +
                                "oad_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่_requestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string การเตรียมตัวตรวจ {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.การเตรียมตัวตรวจColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'การเตรียมตัวตรวจ\' in table \'Prc_RIS_Rpt_RadiologistWorkload" +
                                "_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.การเตรียมตัวตรวจColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string สิทธิการรักษา {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.สิทธิการรักษาColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'สิทธิการรักษา\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AI" +
                                "MC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.สิทธิการรักษาColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ราคา {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ราคาColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ราคา\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIMC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ราคาColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string เครื่องที่ลงทะเบียน {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.เครื่องที่ลงทะเบียนColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'เครื่องที่ลงทะเบียน\' in table \'Prc_RIS_Rpt_RadiologistWorkl" +
                                "oad_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.เครื่องที่ลงทะเบียนColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string แพทย์อ่านผล_1 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'แพทย์อ่านผล 1\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AI" +
                                "MC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string แพทย์อ่านผล_2 {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'แพทย์อ่านผล 2\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AI" +
                                "MC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string แพทย์ที่ถูก_Assign {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์ที่ถูก_AssignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'แพทย์ที่ถูก Assign\' in table \'Prc_RIS_Rpt_RadiologistWorklo" +
                                "ad_AIMC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์ที่ถูก_AssignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assign_By {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.Assign_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Assign By\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIMC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.Assign_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string วันที่รับผล {
                get {
                    try {
                        return ((string)(this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.วันที่รับผลColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'วันที่รับผล\' in table \'Prc_RIS_Rpt_RadiologistWorkload_AIMC" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.วันที่รับผลColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.HNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.HNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_ชื่อ_นามสกุลNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._ชื่อ_นามสกุลColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_ชื่อ_นามสกุลNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._ชื่อ_นามสกุลColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isรหัสส่วนตรวจNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.รหัสส่วนตรวจColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setรหัสส่วนตรวจNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.รหัสส่วนตรวจColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isชื่อส่วนตรวจNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ชื่อส่วนตรวจColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setชื่อส่วนตรวจNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ชื่อส่วนตรวจColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.PriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_วัน_เวลาที่ตรวจNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่ตรวจColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_วัน_เวลาที่ตรวจNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่ตรวจColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_วัน_เวลาที่นัดหมายNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่นัดหมายColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_วัน_เวลาที่นัดหมายNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่นัดหมายColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_วัน_เวลาที่_requestNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่_requestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_วัน_เวลาที่_requestNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC._วัน_เวลาที่_requestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsการเตรียมตัวตรวจNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.การเตรียมตัวตรวจColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetการเตรียมตัวตรวจNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.การเตรียมตัวตรวจColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsสิทธิการรักษาNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.สิทธิการรักษาColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetสิทธิการรักษาNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.สิทธิการรักษาColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsราคาNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ราคาColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetราคาNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.ราคาColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isเครื่องที่ลงทะเบียนNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.เครื่องที่ลงทะเบียนColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setเครื่องที่ลงทะเบียนNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.เครื่องที่ลงทะเบียนColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isแพทย์อ่านผล_1Null() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setแพทย์อ่านผล_1Null() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isแพทย์อ่านผล_2Null() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setแพทย์อ่านผล_2Null() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์อ่านผล_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isแพทย์ที่ถูก_AssignNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์ที่ถูก_AssignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setแพทย์ที่ถูก_AssignNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.แพทย์ที่ถูก_AssignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssign_ByNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.Assign_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssign_ByNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.Assign_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isวันที่รับผลNull() {
                return this.IsNull(this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.วันที่รับผลColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setวันที่รับผลNull() {
                this[this.tablePrc_RIS_Rpt_RadiologistWorkload_AIMC.วันที่รับผลColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent : global::System.EventArgs {
            
            private Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRowChangeEvent(Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_SCHEDULE_XRPTREPORT_AIMCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent : global::System.EventArgs {
            
            private Prc_RIS_Rpt_RadiologistWorkload_AIMCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCRowChangeEvent(Prc_RIS_Rpt_RadiologistWorkload_AIMCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Prc_RIS_Rpt_RadiologistWorkload_AIMCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591