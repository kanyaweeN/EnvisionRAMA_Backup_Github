<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADNAJ4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3EH1NKc0g6UpHFMQfhXO6znM7ZGAw7/SuhweKwNVI3XQ5BIHz
        D1wMVMtio7mlprqdMRl6YPX61aiYmJSR2qpYssWnK8jKirkMzHAH4mqkV8+ortsLqKNSxUMqeYxCnBPX
        C+3Bz1oTFbU21GenJ9qDwcGvPbvWfNjnJa11FYGLGC8yWbHQqu4qDt/2R+BrS0jxbp76fLK0f2VYgrmF
        H3KFJALrwPl5GeARzxRzD5WdduGSM80ya4hto/MmlSNM4y5xzWFLrkfn/ZY5jDI0iLGfK353Ak8dOADm
        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
        xgUARSNtUgde1KiBRz1NOID4BHPrUbnKigD/2Q==
</value>
  </data>
</root>