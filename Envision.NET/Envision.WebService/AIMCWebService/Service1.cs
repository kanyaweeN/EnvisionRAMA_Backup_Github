//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace EnvisionAIMCService
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "Service1Soap", Namespace = "http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback SendHL7AIMCOperationCompleted;

        /// <remarks/>
        public Service1()
        {
            this.Url = "http://miracle99/EnvisionAIMCService/Service1.asmx";
        }

        /// <remarks/>
        public event SendHL7AIMCCompletedEventHandler SendHL7AIMCCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendHL7AIMC", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendHL7AIMC(int OrderID)
        {
            this.Invoke("SendHL7AIMC", new object[] {
                    OrderID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendHL7AIMC(int OrderID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendHL7AIMC", new object[] {
                    OrderID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndSendHL7AIMC(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void SendHL7AIMCAsync(int OrderID)
        {
            this.SendHL7AIMCAsync(OrderID, null);
        }

        /// <remarks/>
        public void SendHL7AIMCAsync(int OrderID, object userState)
        {
            if ((this.SendHL7AIMCOperationCompleted == null))
            {
                this.SendHL7AIMCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendHL7AIMCOperationCompleted);
            }
            this.InvokeAsync("SendHL7AIMC", new object[] {
                    OrderID}, this.SendHL7AIMCOperationCompleted, userState);
        }

        private void OnSendHL7AIMCOperationCompleted(object arg)
        {
            if ((this.SendHL7AIMCCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendHL7AIMCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendHL7AIMCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

}