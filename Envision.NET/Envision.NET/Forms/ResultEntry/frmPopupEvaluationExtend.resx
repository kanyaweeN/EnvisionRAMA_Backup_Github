<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v9.1" name="DevExpress.Utils.v9.1, Version=9.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v9.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFhEZXZFeHByZXNzLlV0aWxzLnY5LjEsIFZlcnNpb249OS4xLjMu
        MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iODhkMTc1NGQ3MDBlNDlhDAMAAABRU3lz
        dGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAoRGV2RXhwcmVzcy5VdGlscy5JbWFnZUNvbGxlY3Rpb25TdHJl
        YW1lcgIAAAAJSW1hZ2VTaXplBERhdGEEBxNTeXN0ZW0uRHJhd2luZy5TaXplAwAAAAICAAAABfz///8T
        U3lzdGVtLkRyYXdpbmcuU2l6ZQIAAAAFd2lkdGgGaGVpZ2h0AAAICAMAAAAgAAAAIAAAAAkFAAAADwUA
        AABtHQAAAusIAACJUE5HDQoaCgAAAA1JSERSAAAAIAAAACAIBgAAAHN6evQAAAABc1JHQgCuzhzpAAAA
        BGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAI
        aUlEQVRYR8VXeWwU1xn/Zt6bmb0vX5jDYC6DK6hV6rioRTRpKpkogapSmpAoqSjQ0qRCJRB84Gt94Nvr
        28bYjiFtWlKulpIaSJByGOP6wAfIuOIyRwR1oJQYjO3d/fo9462ArglJ/2Cln2b2zez7/b77rYSI8EQ/
        VfMioGTaVF4bFVXUmhh/feC9nXeb1qwa2BY+o6AsMMhUERgImYxBhU6FZFkGp8wglzPIUxgUE3IUDjV0
        rSSkcRlc9Cyf3suVJHrOoVSn0VWBAkmaV2W1FO+NielvXvnS8M7QkMFyzo6Da3LonD/86Jkj5xvq0f3p
        UfQcOoCju3bgubjf4p+jF3W7LJalTtrwmwhwcQ4FjE2pNhor9y/6zvW++LexPz8HP1yxYrTcYv4sj0lp
        0JKUePtWSxPiyQ70Hj6A3t3vondHBWJNAY5mb8bOZUvdpWZTXRHjj+WBYuEdsj4LQC5TlcoPoqLuXHxr
        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
</value>
  </data>
</root>