//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnvisionWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.miracleadvance.com/", ConfigurationName="EnvisionWebService.ServiceSoap")]
    public interface ServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/Welcome", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WelcomeAsync(string how);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/SaveFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EnvisionWebService.SaveFileResponse> SaveFileAsync(EnvisionWebService.SaveFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/MoveFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> MoveFileAsync(string sourceFileName, string destFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/DeleteFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> DeleteFileAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/SavePicture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EnvisionWebService.SavePictureResponse> SavePictureAsync(EnvisionWebService.SavePictureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/GetClientPort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetClientPortAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/KillClientSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task KillClientSessionAsync(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/ThaiToEng", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ThaiToEngAsync(string textThai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/ThaiToEngSalutation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ThaiToEngSalutationAsync(string textThai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/SaveClientLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SaveClientLogAsync(string caption, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/GetColumnsGrid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetColumnsGridAsync(string sectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/GetColumnsGridOrderUtitly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetColumnsGridOrderUtitlyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.miracleadvance.com/GetTitleSplitExamResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetTitleSplitExamResultAsync(string value);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveFile", WrapperNamespace="http://www.miracleadvance.com/", IsWrapped=true)]
    public partial class SaveFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileIn;
        
        public SaveFileRequest()
        {
        }
        
        public SaveFileRequest(string fileName, byte[] fileIn)
        {
            this.fileName = fileName;
            this.fileIn = fileIn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveFileResponse", WrapperNamespace="http://www.miracleadvance.com/", IsWrapped=true)]
    public partial class SaveFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=0)]
        public bool SaveFileResult;
        
        public SaveFileResponse()
        {
        }
        
        public SaveFileResponse(bool SaveFileResult)
        {
            this.SaveFileResult = SaveFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SavePicture", WrapperNamespace="http://www.miracleadvance.com/", IsWrapped=true)]
    public partial class SavePictureRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileIn;
        
        public SavePictureRequest()
        {
        }
        
        public SavePictureRequest(string fileName, byte[] fileIn)
        {
            this.fileName = fileName;
            this.fileIn = fileIn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SavePictureResponse", WrapperNamespace="http://www.miracleadvance.com/", IsWrapped=true)]
    public partial class SavePictureResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.miracleadvance.com/", Order=0)]
        public bool SavePictureResult;
        
        public SavePictureResponse()
        {
        }
        
        public SavePictureResponse(bool SavePictureResult)
        {
            this.SavePictureResult = SavePictureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ServiceSoapChannel : EnvisionWebService.ServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<EnvisionWebService.ServiceSoap>, EnvisionWebService.ServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), ServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> WelcomeAsync(string how)
        {
            return base.Channel.WelcomeAsync(how);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EnvisionWebService.SaveFileResponse> EnvisionWebService.ServiceSoap.SaveFileAsync(EnvisionWebService.SaveFileRequest request)
        {
            return base.Channel.SaveFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<EnvisionWebService.SaveFileResponse> SaveFileAsync(string fileName, byte[] fileIn)
        {
            EnvisionWebService.SaveFileRequest inValue = new EnvisionWebService.SaveFileRequest();
            inValue.fileName = fileName;
            inValue.fileIn = fileIn;
            return ((EnvisionWebService.ServiceSoap)(this)).SaveFileAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bool> MoveFileAsync(string sourceFileName, string destFileName)
        {
            return base.Channel.MoveFileAsync(sourceFileName, destFileName);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFileAsync(string fileName)
        {
            return base.Channel.DeleteFileAsync(fileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EnvisionWebService.SavePictureResponse> EnvisionWebService.ServiceSoap.SavePictureAsync(EnvisionWebService.SavePictureRequest request)
        {
            return base.Channel.SavePictureAsync(request);
        }
        
        public System.Threading.Tasks.Task<EnvisionWebService.SavePictureResponse> SavePictureAsync(string fileName, byte[] fileIn)
        {
            EnvisionWebService.SavePictureRequest inValue = new EnvisionWebService.SavePictureRequest();
            inValue.fileName = fileName;
            inValue.fileIn = fileIn;
            return ((EnvisionWebService.ServiceSoap)(this)).SavePictureAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> GetClientPortAsync()
        {
            return base.Channel.GetClientPortAsync();
        }
        
        public System.Threading.Tasks.Task KillClientSessionAsync(string hostName)
        {
            return base.Channel.KillClientSessionAsync(hostName);
        }
        
        public System.Threading.Tasks.Task<string> ThaiToEngAsync(string textThai)
        {
            return base.Channel.ThaiToEngAsync(textThai);
        }
        
        public System.Threading.Tasks.Task<string> ThaiToEngSalutationAsync(string textThai)
        {
            return base.Channel.ThaiToEngSalutationAsync(textThai);
        }
        
        public System.Threading.Tasks.Task<bool> SaveClientLogAsync(string caption, string message)
        {
            return base.Channel.SaveClientLogAsync(caption, message);
        }
        
        public System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetColumnsGridAsync(string sectionName)
        {
            return base.Channel.GetColumnsGridAsync(sectionName);
        }
        
        public System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetColumnsGridOrderUtitlyAsync()
        {
            return base.Channel.GetColumnsGridOrderUtitlyAsync();
        }
        
        public System.Threading.Tasks.Task<EnvisionWebService.ArrayOfXElement> GetTitleSplitExamResultAsync(string value)
        {
            return base.Channel.GetTitleSplitExamResultAsync(value);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://envappcnmitest/EnvisionWebService/Service.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://envappcnmitest/EnvisionWebService/Service.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ServiceSoap,
            
            ServiceSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.2")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
