//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace RAMA.WSDLService
{

    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://schemas.microsoft.com/soap-toolkit/wsdl-extension' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "patientserviceSoapBinding", Namespace = "http://tempuri.org/patientservice/wsdl/")]
    public partial class patientservice : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetClinicTypeAndPriceTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncounterDetailByMRNDATEandSDLOCOperationCompleted;

        private System.Threading.SendOrPostCallback CheckClinicTypeBySDLOCOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncouterDetailByEncIdAndTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncounterDetailClinicTypePriceTypeOperationCompleted;

        private System.Threading.SendOrPostCallback get_drug_IPD_statusOperationCompleted;

        private System.Threading.SendOrPostCallback get_drug_IPDOperationCompleted;

        private System.Threading.SendOrPostCallback searchCytoResultByMRNDateOperationCompleted;

        private System.Threading.SendOrPostCallback searchPathoResultByMRNDateOperationCompleted;

        private System.Threading.SendOrPostCallback chkADRbyDrugCodeOperationCompleted;

        private System.Threading.SendOrPostCallback chkADRbyDrugOperationCompleted;

        private System.Threading.SendOrPostCallback getParentDetailByMRNOperationCompleted;

        private System.Threading.SendOrPostCallback searchORApppointmentByPlaceAndAppointmentDateOperationCompleted;

        private System.Threading.SendOrPostCallback or_3F3OperationCompleted;

        private System.Threading.SendOrPostCallback or_3F2OperationCompleted;

        private System.Threading.SendOrPostCallback or_3F1OperationCompleted;

        private System.Threading.SendOrPostCallback CheckPlacePremiumOperationCompleted;

        private System.Threading.SendOrPostCallback SetXrayEventOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderXRAYRQOByInvoiceIdOperationCompleted;

        private System.Threading.SendOrPostCallback SetChangeOrderOperationCompleted;

        private System.Threading.SendOrPostCallback SetLabEventPerformDateTimeOperationCompleted;

        private System.Threading.SendOrPostCallback getCurrentDrugOperationCompleted;

        private System.Threading.SendOrPostCallback SearchAllPriceTypeOperationCompleted;

        private System.Threading.SendOrPostCallback SearchAllClinicTypeOperationCompleted;

        private System.Threading.SendOrPostCallback Get_demographic_shortbyANOperationCompleted;

        private System.Threading.SendOrPostCallback GetProductLocationByBagIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetPatientBloodGrpByMRNOperationCompleted;

        private System.Threading.SendOrPostCallback SetBBTrackingByORDOperationCompleted;

        private System.Threading.SendOrPostCallback SetBBTrackingOperationCompleted;

        private System.Threading.SendOrPostCallback SetLabResultOperationCompleted;

        private System.Threading.SendOrPostCallback SearchProductDetailByProductIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderLabStatusOperationCompleted;

        private System.Threading.SendOrPostCallback CancelPaymentOperationCompleted;

        private System.Threading.SendOrPostCallback SetPaymentOperationCompleted;

        private System.Threading.SendOrPostCallback SetLabRQOOperationCompleted;

        private System.Threading.SendOrPostCallback SetLabEventOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderRQOByMRNOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderRQOByInvoiceIdOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderRQOByRqIdOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Version_LabServiceOperationCompleted;

        private System.Threading.SendOrPostCallback getPatientinSurgicalOperationCompleted;

        private System.Threading.SendOrPostCallback RxOverSupplyOperationCompleted;

        private System.Threading.SendOrPostCallback getPatientinOrOperationCompleted;

        private System.Threading.SendOrPostCallback Or_valid_datetimeOperationCompleted;

        private System.Threading.SendOrPostCallback Or_get_pop_seqOperationCompleted;

        private System.Threading.SendOrPostCallback Or_get_an_ipdOperationCompleted;

        private System.Threading.SendOrPostCallback Or_closefile_hisOperationCompleted;

        private System.Threading.SendOrPostCallback Or_openfile_hisOperationCompleted;

        private System.Threading.SendOrPostCallback Or_cancel_opdiagOperationCompleted;

        private System.Threading.SendOrPostCallback Or_save_op_diagOperationCompleted;

        private System.Threading.SendOrPostCallback med_lookout_finOperationCompleted;

        private System.Threading.SendOrPostCallback get_Order_Supply_Status_byPk_order_cisOperationCompleted;

        private System.Threading.SendOrPostCallback set_order_supplyOperationCompleted;

        private System.Threading.SendOrPostCallback validation_order_supplyOperationCompleted;

        private System.Threading.SendOrPostCallback Get_AdrNaranjoOperationCompleted;

        private System.Threading.SendOrPostCallback GetDrRepmedOperationCompleted;

        private System.Threading.SendOrPostCallback getrxseq_prmOperationCompleted;

        private System.Threading.SendOrPostCallback GetClaimFromRefundOperationCompleted;

        private System.Threading.SendOrPostCallback Ws_AllDrugGroupOperationCompleted;

        private System.Threading.SendOrPostCallback Ws_DrugGroupOperationCompleted;

        private System.Threading.SendOrPostCallback GetRxSeqOperationCompleted;

        private System.Threading.SendOrPostCallback GetRepeateMedByHNOperationCompleted;

        private System.Threading.SendOrPostCallback get_PriceSupply_byProduct_idOperationCompleted;

        private System.Threading.SendOrPostCallback get_ReimburseSupply_byProduct_idOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_data_researchbydate4batchOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_data_researchall4batchOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_data_researchbydateOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_data_researchallOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_data_outsideOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrganizationInfoByParentIdOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Org_detailOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Place_detailOperationCompleted;

        private System.Threading.SendOrPostCallback Get_sdloc_allOperationCompleted;

        private System.Threading.SendOrPostCallback Get_sdloc_detailOperationCompleted;

        private System.Threading.SendOrPostCallback Get_staff_fulldetailOperationCompleted;

        private System.Threading.SendOrPostCallback Set_ConfirmTubeOperationCompleted;

        private System.Threading.SendOrPostCallback Set_LabOrderRegisterOperationCompleted;

        private System.Threading.SendOrPostCallback Get_TubeIDOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Lab_OrderRegistedOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Lab_OrderFullOperationCompleted;

        private System.Threading.SendOrPostCallback Set_StaffPayrollOperationCompleted;

        private System.Threading.SendOrPostCallback Set_OrderReceiveOperationCompleted;

        private System.Threading.SendOrPostCallback Set_Ward2XrayOperationCompleted;

        private System.Threading.SendOrPostCallback Set_WorkStaffOperationCompleted;

        private System.Threading.SendOrPostCallback Get_ForeignXrayOrderOperationCompleted;

        private System.Threading.SendOrPostCallback Get_ForeignDemographicOperationCompleted;

        private System.Threading.SendOrPostCallback Get_XrayOrderOperationCompleted;

        private System.Threading.SendOrPostCallback Get_demographic_long_outsidepatientOperationCompleted;

        private System.Threading.SendOrPostCallback Get_MedPatientOperationCompleted;

        private System.Threading.SendOrPostCallback Set_OROperationCompleted;

        private System.Threading.SendOrPostCallback Set_PAEOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Lab_orderOperationCompleted;

        private System.Threading.SendOrPostCallback Set_Demographic_Long_OutsidePatientOperationCompleted;

        private System.Threading.SendOrPostCallback Get_staff_detailOperationCompleted;

        private System.Threading.SendOrPostCallback Get_AdrOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Claim_AmtOperationCompleted;

        private System.Threading.SendOrPostCallback Get_lab_dataOperationCompleted;

        private System.Threading.SendOrPostCallback Cancel_BillingOperationCompleted;

        private System.Threading.SendOrPostCallback Set_BillingOperationCompleted;

        private System.Threading.SendOrPostCallback Get_all_examOperationCompleted;

        private System.Threading.SendOrPostCallback Get_Payment_StatusOperationCompleted;

        private System.Threading.SendOrPostCallback Get_ipd_detailOperationCompleted;

        private System.Threading.SendOrPostCallback GetEligibilityInsuranceDetailOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncounterDetailByMRNENCTYPEOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncounterDetailByMRNDATEOperationCompleted;

        private System.Threading.SendOrPostCallback GetEncounterDetailByMRNForTodayOperationCompleted;

        private System.Threading.SendOrPostCallback Get_appointment_detailByDateSdlocOperationCompleted;

        private System.Threading.SendOrPostCallback Get_appointment_detailOperationCompleted;

        private System.Threading.SendOrPostCallback GetHNByIdCardOperationCompleted;

        private System.Threading.SendOrPostCallback Get_demographic_shortByNameOperationCompleted;

        private System.Threading.SendOrPostCallback Get_demographic_longOperationCompleted;

        private System.Threading.SendOrPostCallback Get_demographic_shortOperationCompleted;

        private System.Threading.SendOrPostCallback Get_VersionOperationCompleted;

        /// <remarks/>
        public patientservice()
        {
            this.Url = "http://APP_WS/webservice/patientservice.WSDL";
        }

        /// <remarks/>
        public event GetClinicTypeAndPriceTypeCompletedEventHandler GetClinicTypeAndPriceTypeCompleted;

        /// <remarks/>
        public event GetEncounterDetailByMRNDATEandSDLOCCompletedEventHandler GetEncounterDetailByMRNDATEandSDLOCCompleted;

        /// <remarks/>
        public event CheckClinicTypeBySDLOCCompletedEventHandler CheckClinicTypeBySDLOCCompleted;

        /// <remarks/>
        public event GetEncouterDetailByEncIdAndTypeCompletedEventHandler GetEncouterDetailByEncIdAndTypeCompleted;

        /// <remarks/>
        public event GetEncounterDetailClinicTypePriceTypeCompletedEventHandler GetEncounterDetailClinicTypePriceTypeCompleted;

        /// <remarks/>
        public event get_drug_IPD_statusCompletedEventHandler get_drug_IPD_statusCompleted;

        /// <remarks/>
        public event get_drug_IPDCompletedEventHandler get_drug_IPDCompleted;

        /// <remarks/>
        public event searchCytoResultByMRNDateCompletedEventHandler searchCytoResultByMRNDateCompleted;

        /// <remarks/>
        public event searchPathoResultByMRNDateCompletedEventHandler searchPathoResultByMRNDateCompleted;

        /// <remarks/>
        public event chkADRbyDrugCodeCompletedEventHandler chkADRbyDrugCodeCompleted;

        /// <remarks/>
        public event chkADRbyDrugCompletedEventHandler chkADRbyDrugCompleted;

        /// <remarks/>
        public event getParentDetailByMRNCompletedEventHandler getParentDetailByMRNCompleted;

        /// <remarks/>
        public event searchORApppointmentByPlaceAndAppointmentDateCompletedEventHandler searchORApppointmentByPlaceAndAppointmentDateCompleted;

        /// <remarks/>
        public event or_3F3CompletedEventHandler or_3F3Completed;

        /// <remarks/>
        public event or_3F2CompletedEventHandler or_3F2Completed;

        /// <remarks/>
        public event or_3F1CompletedEventHandler or_3F1Completed;

        /// <remarks/>
        public event CheckPlacePremiumCompletedEventHandler CheckPlacePremiumCompleted;

        /// <remarks/>
        public event SetXrayEventCompletedEventHandler SetXrayEventCompleted;

        /// <remarks/>
        public event GetOrderXRAYRQOByInvoiceIdCompletedEventHandler GetOrderXRAYRQOByInvoiceIdCompleted;

        /// <remarks/>
        public event SetChangeOrderCompletedEventHandler SetChangeOrderCompleted;

        /// <remarks/>
        public event SetLabEventPerformDateTimeCompletedEventHandler SetLabEventPerformDateTimeCompleted;

        /// <remarks/>
        public event getCurrentDrugCompletedEventHandler getCurrentDrugCompleted;

        /// <remarks/>
        public event SearchAllPriceTypeCompletedEventHandler SearchAllPriceTypeCompleted;

        /// <remarks/>
        public event SearchAllClinicTypeCompletedEventHandler SearchAllClinicTypeCompleted;

        /// <remarks/>
        public event Get_demographic_shortbyANCompletedEventHandler Get_demographic_shortbyANCompleted;

        /// <remarks/>
        public event GetProductLocationByBagIDCompletedEventHandler GetProductLocationByBagIDCompleted;

        /// <remarks/>
        public event GetPatientBloodGrpByMRNCompletedEventHandler GetPatientBloodGrpByMRNCompleted;

        /// <remarks/>
        public event SetBBTrackingByORDCompletedEventHandler SetBBTrackingByORDCompleted;

        /// <remarks/>
        public event SetBBTrackingCompletedEventHandler SetBBTrackingCompleted;

        /// <remarks/>
        public event SetLabResultCompletedEventHandler SetLabResultCompleted;

        /// <remarks/>
        public event SearchProductDetailByProductIDCompletedEventHandler SearchProductDetailByProductIDCompleted;

        /// <remarks/>
        public event GetOrderLabStatusCompletedEventHandler GetOrderLabStatusCompleted;

        /// <remarks/>
        public event CancelPaymentCompletedEventHandler CancelPaymentCompleted;

        /// <remarks/>
        public event SetPaymentCompletedEventHandler SetPaymentCompleted;

        /// <remarks/>
        public event SetLabRQOCompletedEventHandler SetLabRQOCompleted;

        /// <remarks/>
        public event SetLabEventCompletedEventHandler SetLabEventCompleted;

        /// <remarks/>
        public event GetOrderRQOByMRNCompletedEventHandler GetOrderRQOByMRNCompleted;

        /// <remarks/>
        public event GetOrderRQOByInvoiceIdCompletedEventHandler GetOrderRQOByInvoiceIdCompleted;

        /// <remarks/>
        public event GetOrderRQOByRqIdCompletedEventHandler GetOrderRQOByRqIdCompleted;

        /// <remarks/>
        public event Get_Version_LabServiceCompletedEventHandler Get_Version_LabServiceCompleted;

        /// <remarks/>
        public event getPatientinSurgicalCompletedEventHandler getPatientinSurgicalCompleted;

        /// <remarks/>
        public event RxOverSupplyCompletedEventHandler RxOverSupplyCompleted;

        /// <remarks/>
        public event getPatientinOrCompletedEventHandler getPatientinOrCompleted;

        /// <remarks/>
        public event Or_valid_datetimeCompletedEventHandler Or_valid_datetimeCompleted;

        /// <remarks/>
        public event Or_get_pop_seqCompletedEventHandler Or_get_pop_seqCompleted;

        /// <remarks/>
        public event Or_get_an_ipdCompletedEventHandler Or_get_an_ipdCompleted;

        /// <remarks/>
        public event Or_closefile_hisCompletedEventHandler Or_closefile_hisCompleted;

        /// <remarks/>
        public event Or_openfile_hisCompletedEventHandler Or_openfile_hisCompleted;

        /// <remarks/>
        public event Or_cancel_opdiagCompletedEventHandler Or_cancel_opdiagCompleted;

        /// <remarks/>
        public event Or_save_op_diagCompletedEventHandler Or_save_op_diagCompleted;

        /// <remarks/>
        public event med_lookout_finCompletedEventHandler med_lookout_finCompleted;

        /// <remarks/>
        public event get_Order_Supply_Status_byPk_order_cisCompletedEventHandler get_Order_Supply_Status_byPk_order_cisCompleted;

        /// <remarks/>
        public event set_order_supplyCompletedEventHandler set_order_supplyCompleted;

        /// <remarks/>
        public event validation_order_supplyCompletedEventHandler validation_order_supplyCompleted;

        /// <remarks/>
        public event Get_AdrNaranjoCompletedEventHandler Get_AdrNaranjoCompleted;

        /// <remarks/>
        public event GetDrRepmedCompletedEventHandler GetDrRepmedCompleted;

        /// <remarks/>
        public event getrxseq_prmCompletedEventHandler getrxseq_prmCompleted;

        /// <remarks/>
        public event GetClaimFromRefundCompletedEventHandler GetClaimFromRefundCompleted;

        /// <remarks/>
        public event Ws_AllDrugGroupCompletedEventHandler Ws_AllDrugGroupCompleted;

        /// <remarks/>
        public event Ws_DrugGroupCompletedEventHandler Ws_DrugGroupCompleted;

        /// <remarks/>
        public event GetRxSeqCompletedEventHandler GetRxSeqCompleted;

        /// <remarks/>
        public event GetRepeateMedByHNCompletedEventHandler GetRepeateMedByHNCompleted;

        /// <remarks/>
        public event get_PriceSupply_byProduct_idCompletedEventHandler get_PriceSupply_byProduct_idCompleted;

        /// <remarks/>
        public event get_ReimburseSupply_byProduct_idCompletedEventHandler get_ReimburseSupply_byProduct_idCompleted;

        /// <remarks/>
        public event Get_lab_data_researchbydate4batchCompletedEventHandler Get_lab_data_researchbydate4batchCompleted;

        /// <remarks/>
        public event Get_lab_data_researchall4batchCompletedEventHandler Get_lab_data_researchall4batchCompleted;

        /// <remarks/>
        public event Get_lab_data_researchbydateCompletedEventHandler Get_lab_data_researchbydateCompleted;

        /// <remarks/>
        public event Get_lab_data_researchallCompletedEventHandler Get_lab_data_researchallCompleted;

        /// <remarks/>
        public event Get_lab_data_outsideCompletedEventHandler Get_lab_data_outsideCompleted;

        /// <remarks/>
        public event GetOrganizationInfoByParentIdCompletedEventHandler GetOrganizationInfoByParentIdCompleted;

        /// <remarks/>
        public event Get_Org_detailCompletedEventHandler Get_Org_detailCompleted;

        /// <remarks/>
        public event Get_Place_detailCompletedEventHandler Get_Place_detailCompleted;

        /// <remarks/>
        public event Get_sdloc_allCompletedEventHandler Get_sdloc_allCompleted;

        /// <remarks/>
        public event Get_sdloc_detailCompletedEventHandler Get_sdloc_detailCompleted;

        /// <remarks/>
        public event Get_staff_fulldetailCompletedEventHandler Get_staff_fulldetailCompleted;

        /// <remarks/>
        public event Set_ConfirmTubeCompletedEventHandler Set_ConfirmTubeCompleted;

        /// <remarks/>
        public event Set_LabOrderRegisterCompletedEventHandler Set_LabOrderRegisterCompleted;

        /// <remarks/>
        public event Get_TubeIDCompletedEventHandler Get_TubeIDCompleted;

        /// <remarks/>
        public event Get_Lab_OrderRegistedCompletedEventHandler Get_Lab_OrderRegistedCompleted;

        /// <remarks/>
        public event Get_Lab_OrderFullCompletedEventHandler Get_Lab_OrderFullCompleted;

        /// <remarks/>
        public event Set_StaffPayrollCompletedEventHandler Set_StaffPayrollCompleted;

        /// <remarks/>
        public event Set_OrderReceiveCompletedEventHandler Set_OrderReceiveCompleted;

        /// <remarks/>
        public event Set_Ward2XrayCompletedEventHandler Set_Ward2XrayCompleted;

        /// <remarks/>
        public event Set_WorkStaffCompletedEventHandler Set_WorkStaffCompleted;

        /// <remarks/>
        public event Get_ForeignXrayOrderCompletedEventHandler Get_ForeignXrayOrderCompleted;

        /// <remarks/>
        public event Get_ForeignDemographicCompletedEventHandler Get_ForeignDemographicCompleted;

        /// <remarks/>
        public event Get_XrayOrderCompletedEventHandler Get_XrayOrderCompleted;

        /// <remarks/>
        public event Get_demographic_long_outsidepatientCompletedEventHandler Get_demographic_long_outsidepatientCompleted;

        /// <remarks/>
        public event Get_MedPatientCompletedEventHandler Get_MedPatientCompleted;

        /// <remarks/>
        public event Set_ORCompletedEventHandler Set_ORCompleted;

        /// <remarks/>
        public event Set_PAECompletedEventHandler Set_PAECompleted;

        /// <remarks/>
        public event Get_Lab_orderCompletedEventHandler Get_Lab_orderCompleted;

        /// <remarks/>
        public event Set_Demographic_Long_OutsidePatientCompletedEventHandler Set_Demographic_Long_OutsidePatientCompleted;

        /// <remarks/>
        public event Get_staff_detailCompletedEventHandler Get_staff_detailCompleted;

        /// <remarks/>
        public event Get_AdrCompletedEventHandler Get_AdrCompleted;

        /// <remarks/>
        public event Get_Claim_AmtCompletedEventHandler Get_Claim_AmtCompleted;

        /// <remarks/>
        public event Get_lab_dataCompletedEventHandler Get_lab_dataCompleted;

        /// <remarks/>
        public event Cancel_BillingCompletedEventHandler Cancel_BillingCompleted;

        /// <remarks/>
        public event Set_BillingCompletedEventHandler Set_BillingCompleted;

        /// <remarks/>
        public event Get_all_examCompletedEventHandler Get_all_examCompleted;

        /// <remarks/>
        public event Get_Payment_StatusCompletedEventHandler Get_Payment_StatusCompleted;

        /// <remarks/>
        public event Get_ipd_detailCompletedEventHandler Get_ipd_detailCompleted;

        /// <remarks/>
        public event GetEligibilityInsuranceDetailCompletedEventHandler GetEligibilityInsuranceDetailCompleted;

        /// <remarks/>
        public event GetEncounterDetailByMRNENCTYPECompletedEventHandler GetEncounterDetailByMRNENCTYPECompleted;

        /// <remarks/>
        public event GetEncounterDetailByMRNDATECompletedEventHandler GetEncounterDetailByMRNDATECompleted;

        /// <remarks/>
        public event GetEncounterDetailByMRNForTodayCompletedEventHandler GetEncounterDetailByMRNForTodayCompleted;

        /// <remarks/>
        public event Get_appointment_detailByDateSdlocCompletedEventHandler Get_appointment_detailByDateSdlocCompleted;

        /// <remarks/>
        public event Get_appointment_detailCompletedEventHandler Get_appointment_detailCompleted;

        /// <remarks/>
        public event GetHNByIdCardCompletedEventHandler GetHNByIdCardCompleted;

        /// <remarks/>
        public event Get_demographic_shortByNameCompletedEventHandler Get_demographic_shortByNameCompleted;

        /// <remarks/>
        public event Get_demographic_longCompletedEventHandler Get_demographic_longCompleted;

        /// <remarks/>
        public event Get_demographic_shortCompletedEventHandler Get_demographic_shortCompleted;

        /// <remarks/>
        public event Get_VersionCompletedEventHandler Get_VersionCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetClinicTypeAndPriceType" +
            "", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetClinicTypeAndPriceType(string pMrn, string pEncType, string pEncID, string pSDLOC, string pActiveDate, string pNonresident, string pStrProductCode)
        {
            object[] results = this.Invoke("GetClinicTypeAndPriceType", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pActiveDate,
                    pNonresident,
                    pStrProductCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetClinicTypeAndPriceType(string pMrn, string pEncType, string pEncID, string pSDLOC, string pActiveDate, string pNonresident, string pStrProductCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetClinicTypeAndPriceType", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pActiveDate,
                    pNonresident,
                    pStrProductCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetClinicTypeAndPriceType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetClinicTypeAndPriceTypeAsync(string pMrn, string pEncType, string pEncID, string pSDLOC, string pActiveDate, string pNonresident, string pStrProductCode)
        {
            this.GetClinicTypeAndPriceTypeAsync(pMrn, pEncType, pEncID, pSDLOC, pActiveDate, pNonresident, pStrProductCode, null);
        }

        /// <remarks/>
        public void GetClinicTypeAndPriceTypeAsync(string pMrn, string pEncType, string pEncID, string pSDLOC, string pActiveDate, string pNonresident, string pStrProductCode, object userState)
        {
            if ((this.GetClinicTypeAndPriceTypeOperationCompleted == null))
            {
                this.GetClinicTypeAndPriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicTypeAndPriceTypeOperationCompleted);
            }
            this.InvokeAsync("GetClinicTypeAndPriceType", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pActiveDate,
                    pNonresident,
                    pStrProductCode}, this.GetClinicTypeAndPriceTypeOperationCompleted, userState);
        }

        private void OnGetClinicTypeAndPriceTypeOperationCompleted(object arg)
        {
            if ((this.GetClinicTypeAndPriceTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicTypeAndPriceTypeCompleted(this, new GetClinicTypeAndPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNDA" +
            "TEandSDLOC", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEncounterDetailByMRNDATEandSDLOC(string pMrn, string pCDate, string pSDLOC)
        {
            object[] results = this.Invoke("GetEncounterDetailByMRNDATEandSDLOC", new object[] {
                    pMrn,
                    pCDate,
                    pSDLOC});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncounterDetailByMRNDATEandSDLOC(string pMrn, string pCDate, string pSDLOC, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncounterDetailByMRNDATEandSDLOC", new object[] {
                    pMrn,
                    pCDate,
                    pSDLOC}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEncounterDetailByMRNDATEandSDLOC(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNDATEandSDLOCAsync(string pMrn, string pCDate, string pSDLOC)
        {
            this.GetEncounterDetailByMRNDATEandSDLOCAsync(pMrn, pCDate, pSDLOC, null);
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNDATEandSDLOCAsync(string pMrn, string pCDate, string pSDLOC, object userState)
        {
            if ((this.GetEncounterDetailByMRNDATEandSDLOCOperationCompleted == null))
            {
                this.GetEncounterDetailByMRNDATEandSDLOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncounterDetailByMRNDATEandSDLOCOperationCompleted);
            }
            this.InvokeAsync("GetEncounterDetailByMRNDATEandSDLOC", new object[] {
                    pMrn,
                    pCDate,
                    pSDLOC}, this.GetEncounterDetailByMRNDATEandSDLOCOperationCompleted, userState);
        }

        private void OnGetEncounterDetailByMRNDATEandSDLOCOperationCompleted(object arg)
        {
            if ((this.GetEncounterDetailByMRNDATEandSDLOCCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncounterDetailByMRNDATEandSDLOCCompleted(this, new GetEncounterDetailByMRNDATEandSDLOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CheckClinicTypeBySDLOC", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string CheckClinicTypeBySDLOC(string pCurrentSDLOC)
        {
            object[] results = this.Invoke("CheckClinicTypeBySDLOC", new object[] {
                    pCurrentSDLOC});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckClinicTypeBySDLOC(string pCurrentSDLOC, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckClinicTypeBySDLOC", new object[] {
                    pCurrentSDLOC}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCheckClinicTypeBySDLOC(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CheckClinicTypeBySDLOCAsync(string pCurrentSDLOC)
        {
            this.CheckClinicTypeBySDLOCAsync(pCurrentSDLOC, null);
        }

        /// <remarks/>
        public void CheckClinicTypeBySDLOCAsync(string pCurrentSDLOC, object userState)
        {
            if ((this.CheckClinicTypeBySDLOCOperationCompleted == null))
            {
                this.CheckClinicTypeBySDLOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckClinicTypeBySDLOCOperationCompleted);
            }
            this.InvokeAsync("CheckClinicTypeBySDLOC", new object[] {
                    pCurrentSDLOC}, this.CheckClinicTypeBySDLOCOperationCompleted, userState);
        }

        private void OnCheckClinicTypeBySDLOCOperationCompleted(object arg)
        {
            if ((this.CheckClinicTypeBySDLOCCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckClinicTypeBySDLOCCompleted(this, new CheckClinicTypeBySDLOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncouterDetailByEncIdA" +
            "ndType", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEncouterDetailByEncIdAndType(string penc_id, string penc_type)
        {
            object[] results = this.Invoke("GetEncouterDetailByEncIdAndType", new object[] {
                    penc_id,
                    penc_type});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncouterDetailByEncIdAndType(string penc_id, string penc_type, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncouterDetailByEncIdAndType", new object[] {
                    penc_id,
                    penc_type}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEncouterDetailByEncIdAndType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEncouterDetailByEncIdAndTypeAsync(string penc_id, string penc_type)
        {
            this.GetEncouterDetailByEncIdAndTypeAsync(penc_id, penc_type, null);
        }

        /// <remarks/>
        public void GetEncouterDetailByEncIdAndTypeAsync(string penc_id, string penc_type, object userState)
        {
            if ((this.GetEncouterDetailByEncIdAndTypeOperationCompleted == null))
            {
                this.GetEncouterDetailByEncIdAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncouterDetailByEncIdAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetEncouterDetailByEncIdAndType", new object[] {
                    penc_id,
                    penc_type}, this.GetEncouterDetailByEncIdAndTypeOperationCompleted, userState);
        }

        private void OnGetEncouterDetailByEncIdAndTypeOperationCompleted(object arg)
        {
            if ((this.GetEncouterDetailByEncIdAndTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncouterDetailByEncIdAndTypeCompleted(this, new GetEncouterDetailByEncIdAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailClinicT" +
            "ypePriceType", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public object GetEncounterDetailClinicTypePriceType(string pMrn, string pStrProductCode, string pActiveDate, string pNonresident)
        {
            object[] results = this.Invoke("GetEncounterDetailClinicTypePriceType", new object[] {
                    pMrn,
                    pStrProductCode,
                    pActiveDate,
                    pNonresident});
            return ((object)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncounterDetailClinicTypePriceType(string pMrn, string pStrProductCode, string pActiveDate, string pNonresident, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncounterDetailClinicTypePriceType", new object[] {
                    pMrn,
                    pStrProductCode,
                    pActiveDate,
                    pNonresident}, callback, asyncState);
        }

        /// <remarks/>
        public object EndGetEncounterDetailClinicTypePriceType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }

        /// <remarks/>
        public void GetEncounterDetailClinicTypePriceTypeAsync(string pMrn, string pStrProductCode, string pActiveDate, string pNonresident)
        {
            this.GetEncounterDetailClinicTypePriceTypeAsync(pMrn, pStrProductCode, pActiveDate, pNonresident, null);
        }

        /// <remarks/>
        public void GetEncounterDetailClinicTypePriceTypeAsync(string pMrn, string pStrProductCode, string pActiveDate, string pNonresident, object userState)
        {
            if ((this.GetEncounterDetailClinicTypePriceTypeOperationCompleted == null))
            {
                this.GetEncounterDetailClinicTypePriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncounterDetailClinicTypePriceTypeOperationCompleted);
            }
            this.InvokeAsync("GetEncounterDetailClinicTypePriceType", new object[] {
                    pMrn,
                    pStrProductCode,
                    pActiveDate,
                    pNonresident}, this.GetEncounterDetailClinicTypePriceTypeOperationCompleted, userState);
        }

        private void OnGetEncounterDetailClinicTypePriceTypeOperationCompleted(object arg)
        {
            if ((this.GetEncounterDetailClinicTypePriceTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncounterDetailClinicTypePriceTypeCompleted(this, new GetEncounterDetailClinicTypePriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_drug_IPD_status", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string get_drug_IPD_status(string hn, string cOrderId, string drugcode)
        {
            object[] results = this.Invoke("get_drug_IPD_status", new object[] {
                    hn,
                    cOrderId,
                    drugcode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_drug_IPD_status(string hn, string cOrderId, string drugcode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_drug_IPD_status", new object[] {
                    hn,
                    cOrderId,
                    drugcode}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_drug_IPD_status(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_drug_IPD_statusAsync(string hn, string cOrderId, string drugcode)
        {
            this.get_drug_IPD_statusAsync(hn, cOrderId, drugcode, null);
        }

        /// <remarks/>
        public void get_drug_IPD_statusAsync(string hn, string cOrderId, string drugcode, object userState)
        {
            if ((this.get_drug_IPD_statusOperationCompleted == null))
            {
                this.get_drug_IPD_statusOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_drug_IPD_statusOperationCompleted);
            }
            this.InvokeAsync("get_drug_IPD_status", new object[] {
                    hn,
                    cOrderId,
                    drugcode}, this.get_drug_IPD_statusOperationCompleted, userState);
        }

        private void Onget_drug_IPD_statusOperationCompleted(object arg)
        {
            if ((this.get_drug_IPD_statusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_drug_IPD_statusCompleted(this, new get_drug_IPD_statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_drug_IPD", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string get_drug_IPD(string hn)
        {
            object[] results = this.Invoke("get_drug_IPD", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_drug_IPD(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_drug_IPD", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_drug_IPD(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_drug_IPDAsync(string hn)
        {
            this.get_drug_IPDAsync(hn, null);
        }

        /// <remarks/>
        public void get_drug_IPDAsync(string hn, object userState)
        {
            if ((this.get_drug_IPDOperationCompleted == null))
            {
                this.get_drug_IPDOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_drug_IPDOperationCompleted);
            }
            this.InvokeAsync("get_drug_IPD", new object[] {
                    hn}, this.get_drug_IPDOperationCompleted, userState);
        }

        private void Onget_drug_IPDOperationCompleted(object arg)
        {
            if ((this.get_drug_IPDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_drug_IPDCompleted(this, new get_drug_IPDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchCytoResultByMRNDate" +
            "", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string searchCytoResultByMRNDate(string pHn, string pStartDate, string pEndDate)
        {
            object[] results = this.Invoke("searchCytoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchCytoResultByMRNDate(string pHn, string pStartDate, string pEndDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchCytoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndsearchCytoResultByMRNDate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void searchCytoResultByMRNDateAsync(string pHn, string pStartDate, string pEndDate)
        {
            this.searchCytoResultByMRNDateAsync(pHn, pStartDate, pEndDate, null);
        }

        /// <remarks/>
        public void searchCytoResultByMRNDateAsync(string pHn, string pStartDate, string pEndDate, object userState)
        {
            if ((this.searchCytoResultByMRNDateOperationCompleted == null))
            {
                this.searchCytoResultByMRNDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCytoResultByMRNDateOperationCompleted);
            }
            this.InvokeAsync("searchCytoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, this.searchCytoResultByMRNDateOperationCompleted, userState);
        }

        private void OnsearchCytoResultByMRNDateOperationCompleted(object arg)
        {
            if ((this.searchCytoResultByMRNDateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCytoResultByMRNDateCompleted(this, new searchCytoResultByMRNDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchPathoResultByMRNDat" +
            "e", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string searchPathoResultByMRNDate(string pHn, string pStartDate, string pEndDate)
        {
            object[] results = this.Invoke("searchPathoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchPathoResultByMRNDate(string pHn, string pStartDate, string pEndDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchPathoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndsearchPathoResultByMRNDate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void searchPathoResultByMRNDateAsync(string pHn, string pStartDate, string pEndDate)
        {
            this.searchPathoResultByMRNDateAsync(pHn, pStartDate, pEndDate, null);
        }

        /// <remarks/>
        public void searchPathoResultByMRNDateAsync(string pHn, string pStartDate, string pEndDate, object userState)
        {
            if ((this.searchPathoResultByMRNDateOperationCompleted == null))
            {
                this.searchPathoResultByMRNDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchPathoResultByMRNDateOperationCompleted);
            }
            this.InvokeAsync("searchPathoResultByMRNDate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, this.searchPathoResultByMRNDateOperationCompleted, userState);
        }

        private void OnsearchPathoResultByMRNDateOperationCompleted(object arg)
        {
            if ((this.searchPathoResultByMRNDateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchPathoResultByMRNDateCompleted(this, new searchPathoResultByMRNDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.chkADRbyDrugCode", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string chkADRbyDrugCode(string mHn, string mValue)
        {
            object[] results = this.Invoke("chkADRbyDrugCode", new object[] {
                    mHn,
                    mValue});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginchkADRbyDrugCode(string mHn, string mValue, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("chkADRbyDrugCode", new object[] {
                    mHn,
                    mValue}, callback, asyncState);
        }

        /// <remarks/>
        public string EndchkADRbyDrugCode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void chkADRbyDrugCodeAsync(string mHn, string mValue)
        {
            this.chkADRbyDrugCodeAsync(mHn, mValue, null);
        }

        /// <remarks/>
        public void chkADRbyDrugCodeAsync(string mHn, string mValue, object userState)
        {
            if ((this.chkADRbyDrugCodeOperationCompleted == null))
            {
                this.chkADRbyDrugCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkADRbyDrugCodeOperationCompleted);
            }
            this.InvokeAsync("chkADRbyDrugCode", new object[] {
                    mHn,
                    mValue}, this.chkADRbyDrugCodeOperationCompleted, userState);
        }

        private void OnchkADRbyDrugCodeOperationCompleted(object arg)
        {
            if ((this.chkADRbyDrugCodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkADRbyDrugCodeCompleted(this, new chkADRbyDrugCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.chkADRbyDrug", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string chkADRbyDrug(string cXMLlist)
        {
            object[] results = this.Invoke("chkADRbyDrug", new object[] {
                    cXMLlist});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginchkADRbyDrug(string cXMLlist, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("chkADRbyDrug", new object[] {
                    cXMLlist}, callback, asyncState);
        }

        /// <remarks/>
        public string EndchkADRbyDrug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void chkADRbyDrugAsync(string cXMLlist)
        {
            this.chkADRbyDrugAsync(cXMLlist, null);
        }

        /// <remarks/>
        public void chkADRbyDrugAsync(string cXMLlist, object userState)
        {
            if ((this.chkADRbyDrugOperationCompleted == null))
            {
                this.chkADRbyDrugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkADRbyDrugOperationCompleted);
            }
            this.InvokeAsync("chkADRbyDrug", new object[] {
                    cXMLlist}, this.chkADRbyDrugOperationCompleted, userState);
        }

        private void OnchkADRbyDrugOperationCompleted(object arg)
        {
            if ((this.chkADRbyDrugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkADRbyDrugCompleted(this, new chkADRbyDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getParentDetailByMRN", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string getParentDetailByMRN(string pcHN_baby)
        {
            object[] results = this.Invoke("getParentDetailByMRN", new object[] {
                    pcHN_baby});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetParentDetailByMRN(string pcHN_baby, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getParentDetailByMRN", new object[] {
                    pcHN_baby}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetParentDetailByMRN(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getParentDetailByMRNAsync(string pcHN_baby)
        {
            this.getParentDetailByMRNAsync(pcHN_baby, null);
        }

        /// <remarks/>
        public void getParentDetailByMRNAsync(string pcHN_baby, object userState)
        {
            if ((this.getParentDetailByMRNOperationCompleted == null))
            {
                this.getParentDetailByMRNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentDetailByMRNOperationCompleted);
            }
            this.InvokeAsync("getParentDetailByMRN", new object[] {
                    pcHN_baby}, this.getParentDetailByMRNOperationCompleted, userState);
        }

        private void OngetParentDetailByMRNOperationCompleted(object arg)
        {
            if ((this.getParentDetailByMRNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParentDetailByMRNCompleted(this, new getParentDetailByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.searchORApppointmentByPla" +
            "ceAndAppointmentDate", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string searchORApppointmentByPlaceAndAppointmentDate(string pcPlace_id, string pcAppointmentDate)
        {
            object[] results = this.Invoke("searchORApppointmentByPlaceAndAppointmentDate", new object[] {
                    pcPlace_id,
                    pcAppointmentDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchORApppointmentByPlaceAndAppointmentDate(string pcPlace_id, string pcAppointmentDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchORApppointmentByPlaceAndAppointmentDate", new object[] {
                    pcPlace_id,
                    pcAppointmentDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndsearchORApppointmentByPlaceAndAppointmentDate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void searchORApppointmentByPlaceAndAppointmentDateAsync(string pcPlace_id, string pcAppointmentDate)
        {
            this.searchORApppointmentByPlaceAndAppointmentDateAsync(pcPlace_id, pcAppointmentDate, null);
        }

        /// <remarks/>
        public void searchORApppointmentByPlaceAndAppointmentDateAsync(string pcPlace_id, string pcAppointmentDate, object userState)
        {
            if ((this.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted == null))
            {
                this.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchORApppointmentByPlaceAndAppointmentDateOperationCompleted);
            }
            this.InvokeAsync("searchORApppointmentByPlaceAndAppointmentDate", new object[] {
                    pcPlace_id,
                    pcAppointmentDate}, this.searchORApppointmentByPlaceAndAppointmentDateOperationCompleted, userState);
        }

        private void OnsearchORApppointmentByPlaceAndAppointmentDateOperationCompleted(object arg)
        {
            if ((this.searchORApppointmentByPlaceAndAppointmentDateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchORApppointmentByPlaceAndAppointmentDateCompleted(this, new searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.or_3F3", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string or_3F3(string pHn, string pSD, string pST, string pSite)
        {
            object[] results = this.Invoke("or_3F3", new object[] {
                    pHn,
                    pSD,
                    pST,
                    pSite});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginor_3F3(string pHn, string pSD, string pST, string pSite, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("or_3F3", new object[] {
                    pHn,
                    pSD,
                    pST,
                    pSite}, callback, asyncState);
        }

        /// <remarks/>
        public string Endor_3F3(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void or_3F3Async(string pHn, string pSD, string pST, string pSite)
        {
            this.or_3F3Async(pHn, pSD, pST, pSite, null);
        }

        /// <remarks/>
        public void or_3F3Async(string pHn, string pSD, string pST, string pSite, object userState)
        {
            if ((this.or_3F3OperationCompleted == null))
            {
                this.or_3F3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onor_3F3OperationCompleted);
            }
            this.InvokeAsync("or_3F3", new object[] {
                    pHn,
                    pSD,
                    pST,
                    pSite}, this.or_3F3OperationCompleted, userState);
        }

        private void Onor_3F3OperationCompleted(object arg)
        {
            if ((this.or_3F3Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.or_3F3Completed(this, new or_3F3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.or_3F2", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string or_3F2(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite)
        {
            object[] results = this.Invoke("or_3F2", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginor_3F2(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("or_3F2", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite}, callback, asyncState);
        }

        /// <remarks/>
        public string Endor_3F2(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void or_3F2Async(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite)
        {
            this.or_3F2Async(pRoomNo, pSD, pST, pED, pET, pSite, null);
        }

        /// <remarks/>
        public void or_3F2Async(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite, object userState)
        {
            if ((this.or_3F2OperationCompleted == null))
            {
                this.or_3F2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onor_3F2OperationCompleted);
            }
            this.InvokeAsync("or_3F2", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite}, this.or_3F2OperationCompleted, userState);
        }

        private void Onor_3F2OperationCompleted(object arg)
        {
            if ((this.or_3F2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.or_3F2Completed(this, new or_3F2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.or_3F1", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string or_3F1(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite)
        {
            object[] results = this.Invoke("or_3F1", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginor_3F1(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("or_3F1", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite}, callback, asyncState);
        }

        /// <remarks/>
        public string Endor_3F1(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void or_3F1Async(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite)
        {
            this.or_3F1Async(pRoomNo, pSD, pST, pED, pET, pSite, null);
        }

        /// <remarks/>
        public void or_3F1Async(string pRoomNo, string pSD, string pST, string pED, string pET, string pSite, object userState)
        {
            if ((this.or_3F1OperationCompleted == null))
            {
                this.or_3F1OperationCompleted = new System.Threading.SendOrPostCallback(this.Onor_3F1OperationCompleted);
            }
            this.InvokeAsync("or_3F1", new object[] {
                    pRoomNo,
                    pSD,
                    pST,
                    pED,
                    pET,
                    pSite}, this.or_3F1OperationCompleted, userState);
        }

        private void Onor_3F1OperationCompleted(object arg)
        {
            if ((this.or_3F1Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.or_3F1Completed(this, new or_3F1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CheckPlacePremium", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public bool CheckPlacePremium(string pCurrentWard)
        {
            object[] results = this.Invoke("CheckPlacePremium", new object[] {
                    pCurrentWard});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckPlacePremium(string pCurrentWard, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckPlacePremium", new object[] {
                    pCurrentWard}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCheckPlacePremium(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void CheckPlacePremiumAsync(string pCurrentWard)
        {
            this.CheckPlacePremiumAsync(pCurrentWard, null);
        }

        /// <remarks/>
        public void CheckPlacePremiumAsync(string pCurrentWard, object userState)
        {
            if ((this.CheckPlacePremiumOperationCompleted == null))
            {
                this.CheckPlacePremiumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPlacePremiumOperationCompleted);
            }
            this.InvokeAsync("CheckPlacePremium", new object[] {
                    pCurrentWard}, this.CheckPlacePremiumOperationCompleted, userState);
        }

        private void OnCheckPlacePremiumOperationCompleted(object arg)
        {
            if ((this.CheckPlacePremiumCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPlacePremiumCompleted(this, new CheckPlacePremiumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetXrayEvent", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetXrayEvent(string pStrEvn)
        {
            object[] results = this.Invoke("SetXrayEvent", new object[] {
                    pStrEvn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetXrayEvent(string pStrEvn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetXrayEvent", new object[] {
                    pStrEvn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetXrayEvent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetXrayEventAsync(string pStrEvn)
        {
            this.SetXrayEventAsync(pStrEvn, null);
        }

        /// <remarks/>
        public void SetXrayEventAsync(string pStrEvn, object userState)
        {
            if ((this.SetXrayEventOperationCompleted == null))
            {
                this.SetXrayEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetXrayEventOperationCompleted);
            }
            this.InvokeAsync("SetXrayEvent", new object[] {
                    pStrEvn}, this.SetXrayEventOperationCompleted, userState);
        }

        private void OnSetXrayEventOperationCompleted(object arg)
        {
            if ((this.SetXrayEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetXrayEventCompleted(this, new SetXrayEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderXRAYRQOByInvoiceI" +
            "d", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrderXRAYRQOByInvoiceId(double pInvoice_id)
        {
            object[] results = this.Invoke("GetOrderXRAYRQOByInvoiceId", new object[] {
                    pInvoice_id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderXRAYRQOByInvoiceId(double pInvoice_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderXRAYRQOByInvoiceId", new object[] {
                    pInvoice_id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderXRAYRQOByInvoiceId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderXRAYRQOByInvoiceIdAsync(double pInvoice_id)
        {
            this.GetOrderXRAYRQOByInvoiceIdAsync(pInvoice_id, null);
        }

        /// <remarks/>
        public void GetOrderXRAYRQOByInvoiceIdAsync(double pInvoice_id, object userState)
        {
            if ((this.GetOrderXRAYRQOByInvoiceIdOperationCompleted == null))
            {
                this.GetOrderXRAYRQOByInvoiceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderXRAYRQOByInvoiceIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderXRAYRQOByInvoiceId", new object[] {
                    pInvoice_id}, this.GetOrderXRAYRQOByInvoiceIdOperationCompleted, userState);
        }

        private void OnGetOrderXRAYRQOByInvoiceIdOperationCompleted(object arg)
        {
            if ((this.GetOrderXRAYRQOByInvoiceIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderXRAYRQOByInvoiceIdCompleted(this, new GetOrderXRAYRQOByInvoiceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetChangeOrder", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetChangeOrder(string pcHL7StrORD)
        {
            object[] results = this.Invoke("SetChangeOrder", new object[] {
                    pcHL7StrORD});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetChangeOrder(string pcHL7StrORD, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetChangeOrder", new object[] {
                    pcHL7StrORD}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetChangeOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetChangeOrderAsync(string pcHL7StrORD)
        {
            this.SetChangeOrderAsync(pcHL7StrORD, null);
        }

        /// <remarks/>
        public void SetChangeOrderAsync(string pcHL7StrORD, object userState)
        {
            if ((this.SetChangeOrderOperationCompleted == null))
            {
                this.SetChangeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetChangeOrderOperationCompleted);
            }
            this.InvokeAsync("SetChangeOrder", new object[] {
                    pcHL7StrORD}, this.SetChangeOrderOperationCompleted, userState);
        }

        private void OnSetChangeOrderOperationCompleted(object arg)
        {
            if ((this.SetChangeOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetChangeOrderCompleted(this, new SetChangeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabEventPerformDateTim" +
            "e", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetLabEventPerformDateTime(string pStrEvn)
        {
            object[] results = this.Invoke("SetLabEventPerformDateTime", new object[] {
                    pStrEvn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetLabEventPerformDateTime(string pStrEvn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetLabEventPerformDateTime", new object[] {
                    pStrEvn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetLabEventPerformDateTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetLabEventPerformDateTimeAsync(string pStrEvn)
        {
            this.SetLabEventPerformDateTimeAsync(pStrEvn, null);
        }

        /// <remarks/>
        public void SetLabEventPerformDateTimeAsync(string pStrEvn, object userState)
        {
            if ((this.SetLabEventPerformDateTimeOperationCompleted == null))
            {
                this.SetLabEventPerformDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLabEventPerformDateTimeOperationCompleted);
            }
            this.InvokeAsync("SetLabEventPerformDateTime", new object[] {
                    pStrEvn}, this.SetLabEventPerformDateTimeOperationCompleted, userState);
        }

        private void OnSetLabEventPerformDateTimeOperationCompleted(object arg)
        {
            if ((this.SetLabEventPerformDateTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLabEventPerformDateTimeCompleted(this, new SetLabEventPerformDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getCurrentDrug", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public object getCurrentDrug(string cHn, System.DateTime dDate)
        {
            object[] results = this.Invoke("getCurrentDrug", new object[] {
                    cHn,
                    dDate});
            return ((object)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCurrentDrug(string cHn, System.DateTime dDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCurrentDrug", new object[] {
                    cHn,
                    dDate}, callback, asyncState);
        }

        /// <remarks/>
        public object EndgetCurrentDrug(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }

        /// <remarks/>
        public void getCurrentDrugAsync(string cHn, System.DateTime dDate)
        {
            this.getCurrentDrugAsync(cHn, dDate, null);
        }

        /// <remarks/>
        public void getCurrentDrugAsync(string cHn, System.DateTime dDate, object userState)
        {
            if ((this.getCurrentDrugOperationCompleted == null))
            {
                this.getCurrentDrugOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentDrugOperationCompleted);
            }
            this.InvokeAsync("getCurrentDrug", new object[] {
                    cHn,
                    dDate}, this.getCurrentDrugOperationCompleted, userState);
        }

        private void OngetCurrentDrugOperationCompleted(object arg)
        {
            if ((this.getCurrentDrugCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentDrugCompleted(this, new getCurrentDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchAllPriceType", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SearchAllPriceType()
        {
            object[] results = this.Invoke("SearchAllPriceType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSearchAllPriceType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SearchAllPriceType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndSearchAllPriceType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SearchAllPriceTypeAsync()
        {
            this.SearchAllPriceTypeAsync(null);
        }

        /// <remarks/>
        public void SearchAllPriceTypeAsync(object userState)
        {
            if ((this.SearchAllPriceTypeOperationCompleted == null))
            {
                this.SearchAllPriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAllPriceTypeOperationCompleted);
            }
            this.InvokeAsync("SearchAllPriceType", new object[0], this.SearchAllPriceTypeOperationCompleted, userState);
        }

        private void OnSearchAllPriceTypeOperationCompleted(object arg)
        {
            if ((this.SearchAllPriceTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAllPriceTypeCompleted(this, new SearchAllPriceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchAllClinicType", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SearchAllClinicType()
        {
            object[] results = this.Invoke("SearchAllClinicType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSearchAllClinicType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SearchAllClinicType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndSearchAllClinicType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SearchAllClinicTypeAsync()
        {
            this.SearchAllClinicTypeAsync(null);
        }

        /// <remarks/>
        public void SearchAllClinicTypeAsync(object userState)
        {
            if ((this.SearchAllClinicTypeOperationCompleted == null))
            {
                this.SearchAllClinicTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAllClinicTypeOperationCompleted);
            }
            this.InvokeAsync("SearchAllClinicType", new object[0], this.SearchAllClinicTypeOperationCompleted, userState);
        }

        private void OnSearchAllClinicTypeOperationCompleted(object arg)
        {
            if ((this.SearchAllClinicTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAllClinicTypeCompleted(this, new SearchAllClinicTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_shortbyAN" +
            "", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_demographic_shortbyAN(string pAn)
        {
            object[] results = this.Invoke("Get_demographic_shortbyAN", new object[] {
                    pAn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_demographic_shortbyAN(string pAn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_demographic_shortbyAN", new object[] {
                    pAn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_demographic_shortbyAN(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_demographic_shortbyANAsync(string pAn)
        {
            this.Get_demographic_shortbyANAsync(pAn, null);
        }

        /// <remarks/>
        public void Get_demographic_shortbyANAsync(string pAn, object userState)
        {
            if ((this.Get_demographic_shortbyANOperationCompleted == null))
            {
                this.Get_demographic_shortbyANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_demographic_shortbyANOperationCompleted);
            }
            this.InvokeAsync("Get_demographic_shortbyAN", new object[] {
                    pAn}, this.Get_demographic_shortbyANOperationCompleted, userState);
        }

        private void OnGet_demographic_shortbyANOperationCompleted(object arg)
        {
            if ((this.Get_demographic_shortbyANCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_demographic_shortbyANCompleted(this, new Get_demographic_shortbyANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetProductLocationByBagID" +
            "", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetProductLocationByBagID(string pBagID)
        {
            object[] results = this.Invoke("GetProductLocationByBagID", new object[] {
                    pBagID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetProductLocationByBagID(string pBagID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetProductLocationByBagID", new object[] {
                    pBagID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetProductLocationByBagID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetProductLocationByBagIDAsync(string pBagID)
        {
            this.GetProductLocationByBagIDAsync(pBagID, null);
        }

        /// <remarks/>
        public void GetProductLocationByBagIDAsync(string pBagID, object userState)
        {
            if ((this.GetProductLocationByBagIDOperationCompleted == null))
            {
                this.GetProductLocationByBagIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductLocationByBagIDOperationCompleted);
            }
            this.InvokeAsync("GetProductLocationByBagID", new object[] {
                    pBagID}, this.GetProductLocationByBagIDOperationCompleted, userState);
        }

        private void OnGetProductLocationByBagIDOperationCompleted(object arg)
        {
            if ((this.GetProductLocationByBagIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductLocationByBagIDCompleted(this, new GetProductLocationByBagIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetPatientBloodGrpByMRN", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetPatientBloodGrpByMRN(string pMrn)
        {
            object[] results = this.Invoke("GetPatientBloodGrpByMRN", new object[] {
                    pMrn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPatientBloodGrpByMRN(string pMrn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPatientBloodGrpByMRN", new object[] {
                    pMrn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetPatientBloodGrpByMRN(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPatientBloodGrpByMRNAsync(string pMrn)
        {
            this.GetPatientBloodGrpByMRNAsync(pMrn, null);
        }

        /// <remarks/>
        public void GetPatientBloodGrpByMRNAsync(string pMrn, object userState)
        {
            if ((this.GetPatientBloodGrpByMRNOperationCompleted == null))
            {
                this.GetPatientBloodGrpByMRNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientBloodGrpByMRNOperationCompleted);
            }
            this.InvokeAsync("GetPatientBloodGrpByMRN", new object[] {
                    pMrn}, this.GetPatientBloodGrpByMRNOperationCompleted, userState);
        }

        private void OnGetPatientBloodGrpByMRNOperationCompleted(object arg)
        {
            if ((this.GetPatientBloodGrpByMRNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientBloodGrpByMRNCompleted(this, new GetPatientBloodGrpByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetBBTrackingByORD", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetBBTrackingByORD(int pnOrderID, string pcHL7HeaderMsg, string pcStrObsIDPutMsg, string pcMode, string pcStrBPO, string pcStrBPX)
        {
            object[] results = this.Invoke("SetBBTrackingByORD", new object[] {
                    pnOrderID,
                    pcHL7HeaderMsg,
                    pcStrObsIDPutMsg,
                    pcMode,
                    pcStrBPO,
                    pcStrBPX});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetBBTrackingByORD(int pnOrderID, string pcHL7HeaderMsg, string pcStrObsIDPutMsg, string pcMode, string pcStrBPO, string pcStrBPX, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetBBTrackingByORD", new object[] {
                    pnOrderID,
                    pcHL7HeaderMsg,
                    pcStrObsIDPutMsg,
                    pcMode,
                    pcStrBPO,
                    pcStrBPX}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetBBTrackingByORD(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetBBTrackingByORDAsync(int pnOrderID, string pcHL7HeaderMsg, string pcStrObsIDPutMsg, string pcMode, string pcStrBPO, string pcStrBPX)
        {
            this.SetBBTrackingByORDAsync(pnOrderID, pcHL7HeaderMsg, pcStrObsIDPutMsg, pcMode, pcStrBPO, pcStrBPX, null);
        }

        /// <remarks/>
        public void SetBBTrackingByORDAsync(int pnOrderID, string pcHL7HeaderMsg, string pcStrObsIDPutMsg, string pcMode, string pcStrBPO, string pcStrBPX, object userState)
        {
            if ((this.SetBBTrackingByORDOperationCompleted == null))
            {
                this.SetBBTrackingByORDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBBTrackingByORDOperationCompleted);
            }
            this.InvokeAsync("SetBBTrackingByORD", new object[] {
                    pnOrderID,
                    pcHL7HeaderMsg,
                    pcStrObsIDPutMsg,
                    pcMode,
                    pcStrBPO,
                    pcStrBPX}, this.SetBBTrackingByORDOperationCompleted, userState);
        }

        private void OnSetBBTrackingByORDOperationCompleted(object arg)
        {
            if ((this.SetBBTrackingByORDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBBTrackingByORDCompleted(this, new SetBBTrackingByORDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetBBTracking", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetBBTracking(string pHL7Msg)
        {
            object[] results = this.Invoke("SetBBTracking", new object[] {
                    pHL7Msg});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetBBTracking(string pHL7Msg, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetBBTracking", new object[] {
                    pHL7Msg}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetBBTracking(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetBBTrackingAsync(string pHL7Msg)
        {
            this.SetBBTrackingAsync(pHL7Msg, null);
        }

        /// <remarks/>
        public void SetBBTrackingAsync(string pHL7Msg, object userState)
        {
            if ((this.SetBBTrackingOperationCompleted == null))
            {
                this.SetBBTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBBTrackingOperationCompleted);
            }
            this.InvokeAsync("SetBBTracking", new object[] {
                    pHL7Msg}, this.SetBBTrackingOperationCompleted, userState);
        }

        private void OnSetBBTrackingOperationCompleted(object arg)
        {
            if ((this.SetBBTrackingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBBTrackingCompleted(this, new SetBBTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabResult", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetLabResult(string pLabRes)
        {
            object[] results = this.Invoke("SetLabResult", new object[] {
                    pLabRes});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetLabResult(string pLabRes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetLabResult", new object[] {
                    pLabRes}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetLabResult(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetLabResultAsync(string pLabRes)
        {
            this.SetLabResultAsync(pLabRes, null);
        }

        /// <remarks/>
        public void SetLabResultAsync(string pLabRes, object userState)
        {
            if ((this.SetLabResultOperationCompleted == null))
            {
                this.SetLabResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLabResultOperationCompleted);
            }
            this.InvokeAsync("SetLabResult", new object[] {
                    pLabRes}, this.SetLabResultOperationCompleted, userState);
        }

        private void OnSetLabResultOperationCompleted(object arg)
        {
            if ((this.SetLabResultCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLabResultCompleted(this, new SetLabResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SearchProductDetailByProd" +
            "uctID", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SearchProductDetailByProductID(string pProductID)
        {
            object[] results = this.Invoke("SearchProductDetailByProductID", new object[] {
                    pProductID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSearchProductDetailByProductID(string pProductID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SearchProductDetailByProductID", new object[] {
                    pProductID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSearchProductDetailByProductID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SearchProductDetailByProductIDAsync(string pProductID)
        {
            this.SearchProductDetailByProductIDAsync(pProductID, null);
        }

        /// <remarks/>
        public void SearchProductDetailByProductIDAsync(string pProductID, object userState)
        {
            if ((this.SearchProductDetailByProductIDOperationCompleted == null))
            {
                this.SearchProductDetailByProductIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchProductDetailByProductIDOperationCompleted);
            }
            this.InvokeAsync("SearchProductDetailByProductID", new object[] {
                    pProductID}, this.SearchProductDetailByProductIDOperationCompleted, userState);
        }

        private void OnSearchProductDetailByProductIDOperationCompleted(object arg)
        {
            if ((this.SearchProductDetailByProductIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchProductDetailByProductIDCompleted(this, new SearchProductDetailByProductIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderLabStatus", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrderLabStatus(double pnOrderID)
        {
            object[] results = this.Invoke("GetOrderLabStatus", new object[] {
                    pnOrderID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderLabStatus(double pnOrderID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderLabStatus", new object[] {
                    pnOrderID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderLabStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderLabStatusAsync(double pnOrderID)
        {
            this.GetOrderLabStatusAsync(pnOrderID, null);
        }

        /// <remarks/>
        public void GetOrderLabStatusAsync(double pnOrderID, object userState)
        {
            if ((this.GetOrderLabStatusOperationCompleted == null))
            {
                this.GetOrderLabStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderLabStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrderLabStatus", new object[] {
                    pnOrderID}, this.GetOrderLabStatusOperationCompleted, userState);
        }

        private void OnGetOrderLabStatusOperationCompleted(object arg)
        {
            if ((this.GetOrderLabStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderLabStatusCompleted(this, new GetOrderLabStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.CancelPayment", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string CancelPayment(string cOrderId)
        {
            object[] results = this.Invoke("CancelPayment", new object[] {
                    cOrderId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancelPayment(string cOrderId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CancelPayment", new object[] {
                    cOrderId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCancelPayment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CancelPaymentAsync(string cOrderId)
        {
            this.CancelPaymentAsync(cOrderId, null);
        }

        /// <remarks/>
        public void CancelPaymentAsync(string cOrderId, object userState)
        {
            if ((this.CancelPaymentOperationCompleted == null))
            {
                this.CancelPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPaymentOperationCompleted);
            }
            this.InvokeAsync("CancelPayment", new object[] {
                    cOrderId}, this.CancelPaymentOperationCompleted, userState);
        }

        private void OnCancelPaymentOperationCompleted(object arg)
        {
            if ((this.CancelPaymentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPaymentCompleted(this, new CancelPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetPayment", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetPayment(string cPayload)
        {
            object[] results = this.Invoke("SetPayment", new object[] {
                    cPayload});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetPayment(string cPayload, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetPayment", new object[] {
                    cPayload}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetPayment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetPaymentAsync(string cPayload)
        {
            this.SetPaymentAsync(cPayload, null);
        }

        /// <remarks/>
        public void SetPaymentAsync(string cPayload, object userState)
        {
            if ((this.SetPaymentOperationCompleted == null))
            {
                this.SetPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPaymentOperationCompleted);
            }
            this.InvokeAsync("SetPayment", new object[] {
                    cPayload}, this.SetPaymentOperationCompleted, userState);
        }

        private void OnSetPaymentOperationCompleted(object arg)
        {
            if ((this.SetPaymentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPaymentCompleted(this, new SetPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabRQO", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetLabRQO(string pStrRQO)
        {
            object[] results = this.Invoke("SetLabRQO", new object[] {
                    pStrRQO});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetLabRQO(string pStrRQO, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetLabRQO", new object[] {
                    pStrRQO}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetLabRQO(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetLabRQOAsync(string pStrRQO)
        {
            this.SetLabRQOAsync(pStrRQO, null);
        }

        /// <remarks/>
        public void SetLabRQOAsync(string pStrRQO, object userState)
        {
            if ((this.SetLabRQOOperationCompleted == null))
            {
                this.SetLabRQOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLabRQOOperationCompleted);
            }
            this.InvokeAsync("SetLabRQO", new object[] {
                    pStrRQO}, this.SetLabRQOOperationCompleted, userState);
        }

        private void OnSetLabRQOOperationCompleted(object arg)
        {
            if ((this.SetLabRQOCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLabRQOCompleted(this, new SetLabRQOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.SetLabEvent", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string SetLabEvent(string pStrEvn)
        {
            object[] results = this.Invoke("SetLabEvent", new object[] {
                    pStrEvn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetLabEvent(string pStrEvn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetLabEvent", new object[] {
                    pStrEvn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSetLabEvent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SetLabEventAsync(string pStrEvn)
        {
            this.SetLabEventAsync(pStrEvn, null);
        }

        /// <remarks/>
        public void SetLabEventAsync(string pStrEvn, object userState)
        {
            if ((this.SetLabEventOperationCompleted == null))
            {
                this.SetLabEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLabEventOperationCompleted);
            }
            this.InvokeAsync("SetLabEvent", new object[] {
                    pStrEvn}, this.SetLabEventOperationCompleted, userState);
        }

        private void OnSetLabEventOperationCompleted(object arg)
        {
            if ((this.SetLabEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLabEventCompleted(this, new SetLabEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByMRN", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrderRQOByMRN(string pMrn)
        {
            object[] results = this.Invoke("GetOrderRQOByMRN", new object[] {
                    pMrn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderRQOByMRN(string pMrn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderRQOByMRN", new object[] {
                    pMrn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderRQOByMRN(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderRQOByMRNAsync(string pMrn)
        {
            this.GetOrderRQOByMRNAsync(pMrn, null);
        }

        /// <remarks/>
        public void GetOrderRQOByMRNAsync(string pMrn, object userState)
        {
            if ((this.GetOrderRQOByMRNOperationCompleted == null))
            {
                this.GetOrderRQOByMRNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderRQOByMRNOperationCompleted);
            }
            this.InvokeAsync("GetOrderRQOByMRN", new object[] {
                    pMrn}, this.GetOrderRQOByMRNOperationCompleted, userState);
        }

        private void OnGetOrderRQOByMRNOperationCompleted(object arg)
        {
            if ((this.GetOrderRQOByMRNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderRQOByMRNCompleted(this, new GetOrderRQOByMRNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByInvoiceId", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrderRQOByInvoiceId(double pInvoice_id)
        {
            object[] results = this.Invoke("GetOrderRQOByInvoiceId", new object[] {
                    pInvoice_id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderRQOByInvoiceId(double pInvoice_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderRQOByInvoiceId", new object[] {
                    pInvoice_id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderRQOByInvoiceId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderRQOByInvoiceIdAsync(double pInvoice_id)
        {
            this.GetOrderRQOByInvoiceIdAsync(pInvoice_id, null);
        }

        /// <remarks/>
        public void GetOrderRQOByInvoiceIdAsync(double pInvoice_id, object userState)
        {
            if ((this.GetOrderRQOByInvoiceIdOperationCompleted == null))
            {
                this.GetOrderRQOByInvoiceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderRQOByInvoiceIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderRQOByInvoiceId", new object[] {
                    pInvoice_id}, this.GetOrderRQOByInvoiceIdOperationCompleted, userState);
        }

        private void OnGetOrderRQOByInvoiceIdOperationCompleted(object arg)
        {
            if ((this.GetOrderRQOByInvoiceIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderRQOByInvoiceIdCompleted(this, new GetOrderRQOByInvoiceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrderRQOByRqId", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrderRQOByRqId(string pRq_type, double pRq_id)
        {
            object[] results = this.Invoke("GetOrderRQOByRqId", new object[] {
                    pRq_type,
                    pRq_id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderRQOByRqId(string pRq_type, double pRq_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderRQOByRqId", new object[] {
                    pRq_type,
                    pRq_id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderRQOByRqId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderRQOByRqIdAsync(string pRq_type, double pRq_id)
        {
            this.GetOrderRQOByRqIdAsync(pRq_type, pRq_id, null);
        }

        /// <remarks/>
        public void GetOrderRQOByRqIdAsync(string pRq_type, double pRq_id, object userState)
        {
            if ((this.GetOrderRQOByRqIdOperationCompleted == null))
            {
                this.GetOrderRQOByRqIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderRQOByRqIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderRQOByRqId", new object[] {
                    pRq_type,
                    pRq_id}, this.GetOrderRQOByRqIdOperationCompleted, userState);
        }

        private void OnGetOrderRQOByRqIdOperationCompleted(object arg)
        {
            if ((this.GetOrderRQOByRqIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderRQOByRqIdCompleted(this, new GetOrderRQOByRqIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Version_LabService", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Version_LabService()
        {
            object[] results = this.Invoke("Get_Version_LabService", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Version_LabService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Version_LabService", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Version_LabService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Version_LabServiceAsync()
        {
            this.Get_Version_LabServiceAsync(null);
        }

        /// <remarks/>
        public void Get_Version_LabServiceAsync(object userState)
        {
            if ((this.Get_Version_LabServiceOperationCompleted == null))
            {
                this.Get_Version_LabServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Version_LabServiceOperationCompleted);
            }
            this.InvokeAsync("Get_Version_LabService", new object[0], this.Get_Version_LabServiceOperationCompleted, userState);
        }

        private void OnGet_Version_LabServiceOperationCompleted(object arg)
        {
            if ((this.Get_Version_LabServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Version_LabServiceCompleted(this, new Get_Version_LabServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getPatientinSurgical", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string getPatientinSurgical(string pMrn)
        {
            object[] results = this.Invoke("getPatientinSurgical", new object[] {
                    pMrn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPatientinSurgical(string pMrn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPatientinSurgical", new object[] {
                    pMrn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetPatientinSurgical(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getPatientinSurgicalAsync(string pMrn)
        {
            this.getPatientinSurgicalAsync(pMrn, null);
        }

        /// <remarks/>
        public void getPatientinSurgicalAsync(string pMrn, object userState)
        {
            if ((this.getPatientinSurgicalOperationCompleted == null))
            {
                this.getPatientinSurgicalOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientinSurgicalOperationCompleted);
            }
            this.InvokeAsync("getPatientinSurgical", new object[] {
                    pMrn}, this.getPatientinSurgicalOperationCompleted, userState);
        }

        private void OngetPatientinSurgicalOperationCompleted(object arg)
        {
            if ((this.getPatientinSurgicalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientinSurgicalCompleted(this, new getPatientinSurgicalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.RxOverSupply", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string RxOverSupply(string mHn)
        {
            object[] results = this.Invoke("RxOverSupply", new object[] {
                    mHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRxOverSupply(string mHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RxOverSupply", new object[] {
                    mHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndRxOverSupply(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void RxOverSupplyAsync(string mHn)
        {
            this.RxOverSupplyAsync(mHn, null);
        }

        /// <remarks/>
        public void RxOverSupplyAsync(string mHn, object userState)
        {
            if ((this.RxOverSupplyOperationCompleted == null))
            {
                this.RxOverSupplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRxOverSupplyOperationCompleted);
            }
            this.InvokeAsync("RxOverSupply", new object[] {
                    mHn}, this.RxOverSupplyOperationCompleted, userState);
        }

        private void OnRxOverSupplyOperationCompleted(object arg)
        {
            if ((this.RxOverSupplyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RxOverSupplyCompleted(this, new RxOverSupplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getPatientinOr", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string getPatientinOr(string pSrc)
        {
            object[] results = this.Invoke("getPatientinOr", new object[] {
                    pSrc});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPatientinOr(string pSrc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPatientinOr", new object[] {
                    pSrc}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetPatientinOr(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getPatientinOrAsync(string pSrc)
        {
            this.getPatientinOrAsync(pSrc, null);
        }

        /// <remarks/>
        public void getPatientinOrAsync(string pSrc, object userState)
        {
            if ((this.getPatientinOrOperationCompleted == null))
            {
                this.getPatientinOrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientinOrOperationCompleted);
            }
            this.InvokeAsync("getPatientinOr", new object[] {
                    pSrc}, this.getPatientinOrOperationCompleted, userState);
        }

        private void OngetPatientinOrOperationCompleted(object arg)
        {
            if ((this.getPatientinOrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientinOrCompleted(this, new getPatientinOrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_valid_datetime", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public object Or_valid_datetime(string xx)
        {
            object[] results = this.Invoke("Or_valid_datetime", new object[] {
                    xx});
            return ((object)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_valid_datetime(string xx, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_valid_datetime", new object[] {
                    xx}, callback, asyncState);
        }

        /// <remarks/>
        public object EndOr_valid_datetime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }

        /// <remarks/>
        public void Or_valid_datetimeAsync(string xx)
        {
            this.Or_valid_datetimeAsync(xx, null);
        }

        /// <remarks/>
        public void Or_valid_datetimeAsync(string xx, object userState)
        {
            if ((this.Or_valid_datetimeOperationCompleted == null))
            {
                this.Or_valid_datetimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_valid_datetimeOperationCompleted);
            }
            this.InvokeAsync("Or_valid_datetime", new object[] {
                    xx}, this.Or_valid_datetimeOperationCompleted, userState);
        }

        private void OnOr_valid_datetimeOperationCompleted(object arg)
        {
            if ((this.Or_valid_datetimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_valid_datetimeCompleted(this, new Or_valid_datetimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_get_pop_seq", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Or_get_pop_seq()
        {
            object[] results = this.Invoke("Or_get_pop_seq", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_get_pop_seq(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_get_pop_seq", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndOr_get_pop_seq(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Or_get_pop_seqAsync()
        {
            this.Or_get_pop_seqAsync(null);
        }

        /// <remarks/>
        public void Or_get_pop_seqAsync(object userState)
        {
            if ((this.Or_get_pop_seqOperationCompleted == null))
            {
                this.Or_get_pop_seqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_get_pop_seqOperationCompleted);
            }
            this.InvokeAsync("Or_get_pop_seq", new object[0], this.Or_get_pop_seqOperationCompleted, userState);
        }

        private void OnOr_get_pop_seqOperationCompleted(object arg)
        {
            if ((this.Or_get_pop_seqCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_get_pop_seqCompleted(this, new Or_get_pop_seqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_get_an_ipd", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public int Or_get_an_ipd(string pcMrn, string pcPop_seq)
        {
            object[] results = this.Invoke("Or_get_an_ipd", new object[] {
                    pcMrn,
                    pcPop_seq});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_get_an_ipd(string pcMrn, string pcPop_seq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_get_an_ipd", new object[] {
                    pcMrn,
                    pcPop_seq}, callback, asyncState);
        }

        /// <remarks/>
        public int EndOr_get_an_ipd(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void Or_get_an_ipdAsync(string pcMrn, string pcPop_seq)
        {
            this.Or_get_an_ipdAsync(pcMrn, pcPop_seq, null);
        }

        /// <remarks/>
        public void Or_get_an_ipdAsync(string pcMrn, string pcPop_seq, object userState)
        {
            if ((this.Or_get_an_ipdOperationCompleted == null))
            {
                this.Or_get_an_ipdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_get_an_ipdOperationCompleted);
            }
            this.InvokeAsync("Or_get_an_ipd", new object[] {
                    pcMrn,
                    pcPop_seq}, this.Or_get_an_ipdOperationCompleted, userState);
        }

        private void OnOr_get_an_ipdOperationCompleted(object arg)
        {
            if ((this.Or_get_an_ipdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_get_an_ipdCompleted(this, new Or_get_an_ipdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_closefile_his", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        public void Or_closefile_his()
        {
            this.Invoke("Or_closefile_his", new object[0]);
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_closefile_his(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_closefile_his", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndOr_closefile_his(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void Or_closefile_hisAsync()
        {
            this.Or_closefile_hisAsync(null);
        }

        /// <remarks/>
        public void Or_closefile_hisAsync(object userState)
        {
            if ((this.Or_closefile_hisOperationCompleted == null))
            {
                this.Or_closefile_hisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_closefile_hisOperationCompleted);
            }
            this.InvokeAsync("Or_closefile_his", new object[0], this.Or_closefile_hisOperationCompleted, userState);
        }

        private void OnOr_closefile_hisOperationCompleted(object arg)
        {
            if ((this.Or_closefile_hisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_closefile_hisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_openfile_his", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        public void Or_openfile_his()
        {
            this.Invoke("Or_openfile_his", new object[0]);
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_openfile_his(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_openfile_his", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndOr_openfile_his(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void Or_openfile_hisAsync()
        {
            this.Or_openfile_hisAsync(null);
        }

        /// <remarks/>
        public void Or_openfile_hisAsync(object userState)
        {
            if ((this.Or_openfile_hisOperationCompleted == null))
            {
                this.Or_openfile_hisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_openfile_hisOperationCompleted);
            }
            this.InvokeAsync("Or_openfile_his", new object[0], this.Or_openfile_hisOperationCompleted, userState);
        }

        private void OnOr_openfile_hisOperationCompleted(object arg)
        {
            if ((this.Or_openfile_hisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_openfile_hisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_cancel_opdiag", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Or_cancel_opdiag(string pcPop_seq)
        {
            object[] results = this.Invoke("Or_cancel_opdiag", new object[] {
                    pcPop_seq});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_cancel_opdiag(string pcPop_seq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_cancel_opdiag", new object[] {
                    pcPop_seq}, callback, asyncState);
        }

        /// <remarks/>
        public string EndOr_cancel_opdiag(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Or_cancel_opdiagAsync(string pcPop_seq)
        {
            this.Or_cancel_opdiagAsync(pcPop_seq, null);
        }

        /// <remarks/>
        public void Or_cancel_opdiagAsync(string pcPop_seq, object userState)
        {
            if ((this.Or_cancel_opdiagOperationCompleted == null))
            {
                this.Or_cancel_opdiagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_cancel_opdiagOperationCompleted);
            }
            this.InvokeAsync("Or_cancel_opdiag", new object[] {
                    pcPop_seq}, this.Or_cancel_opdiagOperationCompleted, userState);
        }

        private void OnOr_cancel_opdiagOperationCompleted(object arg)
        {
            if ((this.Or_cancel_opdiagCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_cancel_opdiagCompleted(this, new Or_cancel_opdiagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Or_save_op_diag", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Or_save_op_diag(string XML_opdiag)
        {
            object[] results = this.Invoke("Or_save_op_diag", new object[] {
                    XML_opdiag});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOr_save_op_diag(string XML_opdiag, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Or_save_op_diag", new object[] {
                    XML_opdiag}, callback, asyncState);
        }

        /// <remarks/>
        public string EndOr_save_op_diag(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Or_save_op_diagAsync(string XML_opdiag)
        {
            this.Or_save_op_diagAsync(XML_opdiag, null);
        }

        /// <remarks/>
        public void Or_save_op_diagAsync(string XML_opdiag, object userState)
        {
            if ((this.Or_save_op_diagOperationCompleted == null))
            {
                this.Or_save_op_diagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOr_save_op_diagOperationCompleted);
            }
            this.InvokeAsync("Or_save_op_diag", new object[] {
                    XML_opdiag}, this.Or_save_op_diagOperationCompleted, userState);
        }

        private void OnOr_save_op_diagOperationCompleted(object arg)
        {
            if ((this.Or_save_op_diagCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Or_save_op_diagCompleted(this, new Or_save_op_diagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.med_lookout_fin", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string med_lookout_fin(int pnPk_order_cis)
        {
            object[] results = this.Invoke("med_lookout_fin", new object[] {
                    pnPk_order_cis});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginmed_lookout_fin(int pnPk_order_cis, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("med_lookout_fin", new object[] {
                    pnPk_order_cis}, callback, asyncState);
        }

        /// <remarks/>
        public string Endmed_lookout_fin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void med_lookout_finAsync(int pnPk_order_cis)
        {
            this.med_lookout_finAsync(pnPk_order_cis, null);
        }

        /// <remarks/>
        public void med_lookout_finAsync(int pnPk_order_cis, object userState)
        {
            if ((this.med_lookout_finOperationCompleted == null))
            {
                this.med_lookout_finOperationCompleted = new System.Threading.SendOrPostCallback(this.Onmed_lookout_finOperationCompleted);
            }
            this.InvokeAsync("med_lookout_fin", new object[] {
                    pnPk_order_cis}, this.med_lookout_finOperationCompleted, userState);
        }

        private void Onmed_lookout_finOperationCompleted(object arg)
        {
            if ((this.med_lookout_finCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.med_lookout_finCompleted(this, new med_lookout_finCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_Order_Supply_Status_b" +
            "yPk_order_cis", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string get_Order_Supply_Status_byPk_order_cis(int pnPk_order_cis)
        {
            object[] results = this.Invoke("get_Order_Supply_Status_byPk_order_cis", new object[] {
                    pnPk_order_cis});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_Order_Supply_Status_byPk_order_cis(int pnPk_order_cis, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_Order_Supply_Status_byPk_order_cis", new object[] {
                    pnPk_order_cis}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_Order_Supply_Status_byPk_order_cis(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_Order_Supply_Status_byPk_order_cisAsync(int pnPk_order_cis)
        {
            this.get_Order_Supply_Status_byPk_order_cisAsync(pnPk_order_cis, null);
        }

        /// <remarks/>
        public void get_Order_Supply_Status_byPk_order_cisAsync(int pnPk_order_cis, object userState)
        {
            if ((this.get_Order_Supply_Status_byPk_order_cisOperationCompleted == null))
            {
                this.get_Order_Supply_Status_byPk_order_cisOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_Order_Supply_Status_byPk_order_cisOperationCompleted);
            }
            this.InvokeAsync("get_Order_Supply_Status_byPk_order_cis", new object[] {
                    pnPk_order_cis}, this.get_Order_Supply_Status_byPk_order_cisOperationCompleted, userState);
        }

        private void Onget_Order_Supply_Status_byPk_order_cisOperationCompleted(object arg)
        {
            if ((this.get_Order_Supply_Status_byPk_order_cisCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_Order_Supply_Status_byPk_order_cisCompleted(this, new get_Order_Supply_Status_byPk_order_cisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.set_order_supply", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        public void set_order_supply(string pcMyXML)
        {
            this.Invoke("set_order_supply", new object[] {
                    pcMyXML});
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_order_supply(string pcMyXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("set_order_supply", new object[] {
                    pcMyXML}, callback, asyncState);
        }

        /// <remarks/>
        public void Endset_order_supply(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void set_order_supplyAsync(string pcMyXML)
        {
            this.set_order_supplyAsync(pcMyXML, null);
        }

        /// <remarks/>
        public void set_order_supplyAsync(string pcMyXML, object userState)
        {
            if ((this.set_order_supplyOperationCompleted == null))
            {
                this.set_order_supplyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_order_supplyOperationCompleted);
            }
            this.InvokeAsync("set_order_supply", new object[] {
                    pcMyXML}, this.set_order_supplyOperationCompleted, userState);
        }

        private void Onset_order_supplyOperationCompleted(object arg)
        {
            if ((this.set_order_supplyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_order_supplyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.validation_order_supply", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string validation_order_supply(string pcXML)
        {
            object[] results = this.Invoke("validation_order_supply", new object[] {
                    pcXML});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginvalidation_order_supply(string pcXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("validation_order_supply", new object[] {
                    pcXML}, callback, asyncState);
        }

        /// <remarks/>
        public string Endvalidation_order_supply(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void validation_order_supplyAsync(string pcXML)
        {
            this.validation_order_supplyAsync(pcXML, null);
        }

        /// <remarks/>
        public void validation_order_supplyAsync(string pcXML, object userState)
        {
            if ((this.validation_order_supplyOperationCompleted == null))
            {
                this.validation_order_supplyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvalidation_order_supplyOperationCompleted);
            }
            this.InvokeAsync("validation_order_supply", new object[] {
                    pcXML}, this.validation_order_supplyOperationCompleted, userState);
        }

        private void Onvalidation_order_supplyOperationCompleted(object arg)
        {
            if ((this.validation_order_supplyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validation_order_supplyCompleted(this, new validation_order_supplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_AdrNaranjo", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_AdrNaranjo(string hn)
        {
            object[] results = this.Invoke("Get_AdrNaranjo", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_AdrNaranjo(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_AdrNaranjo", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_AdrNaranjo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_AdrNaranjoAsync(string hn)
        {
            this.Get_AdrNaranjoAsync(hn, null);
        }

        /// <remarks/>
        public void Get_AdrNaranjoAsync(string hn, object userState)
        {
            if ((this.Get_AdrNaranjoOperationCompleted == null))
            {
                this.Get_AdrNaranjoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_AdrNaranjoOperationCompleted);
            }
            this.InvokeAsync("Get_AdrNaranjo", new object[] {
                    hn}, this.Get_AdrNaranjoOperationCompleted, userState);
        }

        private void OnGet_AdrNaranjoOperationCompleted(object arg)
        {
            if ((this.Get_AdrNaranjoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_AdrNaranjoCompleted(this, new Get_AdrNaranjoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetDrRepmed", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetDrRepmed(string pHn, string pSrc)
        {
            object[] results = this.Invoke("GetDrRepmed", new object[] {
                    pHn,
                    pSrc});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDrRepmed(string pHn, string pSrc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDrRepmed", new object[] {
                    pHn,
                    pSrc}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetDrRepmed(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetDrRepmedAsync(string pHn, string pSrc)
        {
            this.GetDrRepmedAsync(pHn, pSrc, null);
        }

        /// <remarks/>
        public void GetDrRepmedAsync(string pHn, string pSrc, object userState)
        {
            if ((this.GetDrRepmedOperationCompleted == null))
            {
                this.GetDrRepmedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrRepmedOperationCompleted);
            }
            this.InvokeAsync("GetDrRepmed", new object[] {
                    pHn,
                    pSrc}, this.GetDrRepmedOperationCompleted, userState);
        }

        private void OnGetDrRepmedOperationCompleted(object arg)
        {
            if ((this.GetDrRepmedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrRepmedCompleted(this, new GetDrRepmedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.getrxseq_prm", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string getrxseq_prm(string pHn, string pSrc, string pdate, string mDr)
        {
            object[] results = this.Invoke("getrxseq_prm", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Begingetrxseq_prm(string pHn, string pSrc, string pdate, string mDr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getrxseq_prm", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr}, callback, asyncState);
        }

        /// <remarks/>
        public string Endgetrxseq_prm(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getrxseq_prmAsync(string pHn, string pSrc, string pdate, string mDr)
        {
            this.getrxseq_prmAsync(pHn, pSrc, pdate, mDr, null);
        }

        /// <remarks/>
        public void getrxseq_prmAsync(string pHn, string pSrc, string pdate, string mDr, object userState)
        {
            if ((this.getrxseq_prmOperationCompleted == null))
            {
                this.getrxseq_prmOperationCompleted = new System.Threading.SendOrPostCallback(this.Ongetrxseq_prmOperationCompleted);
            }
            this.InvokeAsync("getrxseq_prm", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr}, this.getrxseq_prmOperationCompleted, userState);
        }

        private void Ongetrxseq_prmOperationCompleted(object arg)
        {
            if ((this.getrxseq_prmCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getrxseq_prmCompleted(this, new getrxseq_prmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetClaimFromRefund", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetClaimFromRefund(string pRq_type, double pRq_id, string pRq_seq)
        {
            object[] results = this.Invoke("GetClaimFromRefund", new object[] {
                    pRq_type,
                    pRq_id,
                    pRq_seq});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetClaimFromRefund(string pRq_type, double pRq_id, string pRq_seq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetClaimFromRefund", new object[] {
                    pRq_type,
                    pRq_id,
                    pRq_seq}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetClaimFromRefund(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetClaimFromRefundAsync(string pRq_type, double pRq_id, string pRq_seq)
        {
            this.GetClaimFromRefundAsync(pRq_type, pRq_id, pRq_seq, null);
        }

        /// <remarks/>
        public void GetClaimFromRefundAsync(string pRq_type, double pRq_id, string pRq_seq, object userState)
        {
            if ((this.GetClaimFromRefundOperationCompleted == null))
            {
                this.GetClaimFromRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimFromRefundOperationCompleted);
            }
            this.InvokeAsync("GetClaimFromRefund", new object[] {
                    pRq_type,
                    pRq_id,
                    pRq_seq}, this.GetClaimFromRefundOperationCompleted, userState);
        }

        private void OnGetClaimFromRefundOperationCompleted(object arg)
        {
            if ((this.GetClaimFromRefundCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimFromRefundCompleted(this, new GetClaimFromRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Ws_AllDrugGroup", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Ws_AllDrugGroup()
        {
            object[] results = this.Invoke("Ws_AllDrugGroup", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginWs_AllDrugGroup(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Ws_AllDrugGroup", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndWs_AllDrugGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Ws_AllDrugGroupAsync()
        {
            this.Ws_AllDrugGroupAsync(null);
        }

        /// <remarks/>
        public void Ws_AllDrugGroupAsync(object userState)
        {
            if ((this.Ws_AllDrugGroupOperationCompleted == null))
            {
                this.Ws_AllDrugGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWs_AllDrugGroupOperationCompleted);
            }
            this.InvokeAsync("Ws_AllDrugGroup", new object[0], this.Ws_AllDrugGroupOperationCompleted, userState);
        }

        private void OnWs_AllDrugGroupOperationCompleted(object arg)
        {
            if ((this.Ws_AllDrugGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ws_AllDrugGroupCompleted(this, new Ws_AllDrugGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Ws_DrugGroup", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Ws_DrugGroup(string pSrc)
        {
            object[] results = this.Invoke("Ws_DrugGroup", new object[] {
                    pSrc});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginWs_DrugGroup(string pSrc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Ws_DrugGroup", new object[] {
                    pSrc}, callback, asyncState);
        }

        /// <remarks/>
        public string EndWs_DrugGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Ws_DrugGroupAsync(string pSrc)
        {
            this.Ws_DrugGroupAsync(pSrc, null);
        }

        /// <remarks/>
        public void Ws_DrugGroupAsync(string pSrc, object userState)
        {
            if ((this.Ws_DrugGroupOperationCompleted == null))
            {
                this.Ws_DrugGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWs_DrugGroupOperationCompleted);
            }
            this.InvokeAsync("Ws_DrugGroup", new object[] {
                    pSrc}, this.Ws_DrugGroupOperationCompleted, userState);
        }

        private void OnWs_DrugGroupOperationCompleted(object arg)
        {
            if ((this.Ws_DrugGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ws_DrugGroupCompleted(this, new Ws_DrugGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetRxSeq", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetRxSeq(string pHn, string pSrc, string pdate, string mDr)
        {
            object[] results = this.Invoke("GetRxSeq", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRxSeq(string pHn, string pSrc, string pdate, string mDr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRxSeq", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetRxSeq(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetRxSeqAsync(string pHn, string pSrc, string pdate, string mDr)
        {
            this.GetRxSeqAsync(pHn, pSrc, pdate, mDr, null);
        }

        /// <remarks/>
        public void GetRxSeqAsync(string pHn, string pSrc, string pdate, string mDr, object userState)
        {
            if ((this.GetRxSeqOperationCompleted == null))
            {
                this.GetRxSeqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxSeqOperationCompleted);
            }
            this.InvokeAsync("GetRxSeq", new object[] {
                    pHn,
                    pSrc,
                    pdate,
                    mDr}, this.GetRxSeqOperationCompleted, userState);
        }

        private void OnGetRxSeqOperationCompleted(object arg)
        {
            if ((this.GetRxSeqCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxSeqCompleted(this, new GetRxSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetRepeateMedByHN", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetRepeateMedByHN(string tcHn, string tcDr)
        {
            object[] results = this.Invoke("GetRepeateMedByHN", new object[] {
                    tcHn,
                    tcDr});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRepeateMedByHN(string tcHn, string tcDr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRepeateMedByHN", new object[] {
                    tcHn,
                    tcDr}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetRepeateMedByHN(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetRepeateMedByHNAsync(string tcHn, string tcDr)
        {
            this.GetRepeateMedByHNAsync(tcHn, tcDr, null);
        }

        /// <remarks/>
        public void GetRepeateMedByHNAsync(string tcHn, string tcDr, object userState)
        {
            if ((this.GetRepeateMedByHNOperationCompleted == null))
            {
                this.GetRepeateMedByHNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepeateMedByHNOperationCompleted);
            }
            this.InvokeAsync("GetRepeateMedByHN", new object[] {
                    tcHn,
                    tcDr}, this.GetRepeateMedByHNOperationCompleted, userState);
        }

        private void OnGetRepeateMedByHNOperationCompleted(object arg)
        {
            if ((this.GetRepeateMedByHNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepeateMedByHNCompleted(this, new GetRepeateMedByHNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_PriceSupply_byProduct" +
            "_id", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string get_PriceSupply_byProduct_id(string pcProduct_id)
        {
            object[] results = this.Invoke("get_PriceSupply_byProduct_id", new object[] {
                    pcProduct_id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_PriceSupply_byProduct_id(string pcProduct_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_PriceSupply_byProduct_id", new object[] {
                    pcProduct_id}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_PriceSupply_byProduct_id(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_PriceSupply_byProduct_idAsync(string pcProduct_id)
        {
            this.get_PriceSupply_byProduct_idAsync(pcProduct_id, null);
        }

        /// <remarks/>
        public void get_PriceSupply_byProduct_idAsync(string pcProduct_id, object userState)
        {
            if ((this.get_PriceSupply_byProduct_idOperationCompleted == null))
            {
                this.get_PriceSupply_byProduct_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_PriceSupply_byProduct_idOperationCompleted);
            }
            this.InvokeAsync("get_PriceSupply_byProduct_id", new object[] {
                    pcProduct_id}, this.get_PriceSupply_byProduct_idOperationCompleted, userState);
        }

        private void Onget_PriceSupply_byProduct_idOperationCompleted(object arg)
        {
            if ((this.get_PriceSupply_byProduct_idCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_PriceSupply_byProduct_idCompleted(this, new get_PriceSupply_byProduct_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.get_ReimburseSupply_byPro" +
            "duct_id", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string get_ReimburseSupply_byProduct_id(string pcProduct_id, string pcPolicy_no, string pcPrice_type, string pcEligible, string pcIO, int pnLevel, int pnDiscount)
        {
            object[] results = this.Invoke("get_ReimburseSupply_byProduct_id", new object[] {
                    pcProduct_id,
                    pcPolicy_no,
                    pcPrice_type,
                    pcEligible,
                    pcIO,
                    pnLevel,
                    pnDiscount});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_ReimburseSupply_byProduct_id(string pcProduct_id, string pcPolicy_no, string pcPrice_type, string pcEligible, string pcIO, int pnLevel, int pnDiscount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_ReimburseSupply_byProduct_id", new object[] {
                    pcProduct_id,
                    pcPolicy_no,
                    pcPrice_type,
                    pcEligible,
                    pcIO,
                    pnLevel,
                    pnDiscount}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_ReimburseSupply_byProduct_id(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_ReimburseSupply_byProduct_idAsync(string pcProduct_id, string pcPolicy_no, string pcPrice_type, string pcEligible, string pcIO, int pnLevel, int pnDiscount)
        {
            this.get_ReimburseSupply_byProduct_idAsync(pcProduct_id, pcPolicy_no, pcPrice_type, pcEligible, pcIO, pnLevel, pnDiscount, null);
        }

        /// <remarks/>
        public void get_ReimburseSupply_byProduct_idAsync(string pcProduct_id, string pcPolicy_no, string pcPrice_type, string pcEligible, string pcIO, int pnLevel, int pnDiscount, object userState)
        {
            if ((this.get_ReimburseSupply_byProduct_idOperationCompleted == null))
            {
                this.get_ReimburseSupply_byProduct_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_ReimburseSupply_byProduct_idOperationCompleted);
            }
            this.InvokeAsync("get_ReimburseSupply_byProduct_id", new object[] {
                    pcProduct_id,
                    pcPolicy_no,
                    pcPrice_type,
                    pcEligible,
                    pcIO,
                    pnLevel,
                    pnDiscount}, this.get_ReimburseSupply_byProduct_idOperationCompleted, userState);
        }

        private void Onget_ReimburseSupply_byProduct_idOperationCompleted(object arg)
        {
            if ((this.get_ReimburseSupply_byProduct_idCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_ReimburseSupply_byProduct_idCompleted(this, new get_ReimburseSupply_byProduct_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchbyda" +
            "te4batch", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data_researchbydate4batch(string pBatchHN, string pStartDate, string pEndDate)
        {
            object[] results = this.Invoke("Get_lab_data_researchbydate4batch", new object[] {
                    pBatchHN,
                    pStartDate,
                    pEndDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data_researchbydate4batch(string pBatchHN, string pStartDate, string pEndDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data_researchbydate4batch", new object[] {
                    pBatchHN,
                    pStartDate,
                    pEndDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data_researchbydate4batch(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_data_researchbydate4batchAsync(string pBatchHN, string pStartDate, string pEndDate)
        {
            this.Get_lab_data_researchbydate4batchAsync(pBatchHN, pStartDate, pEndDate, null);
        }

        /// <remarks/>
        public void Get_lab_data_researchbydate4batchAsync(string pBatchHN, string pStartDate, string pEndDate, object userState)
        {
            if ((this.Get_lab_data_researchbydate4batchOperationCompleted == null))
            {
                this.Get_lab_data_researchbydate4batchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_data_researchbydate4batchOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data_researchbydate4batch", new object[] {
                    pBatchHN,
                    pStartDate,
                    pEndDate}, this.Get_lab_data_researchbydate4batchOperationCompleted, userState);
        }

        private void OnGet_lab_data_researchbydate4batchOperationCompleted(object arg)
        {
            if ((this.Get_lab_data_researchbydate4batchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_data_researchbydate4batchCompleted(this, new Get_lab_data_researchbydate4batchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchall4" +
            "batch", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data_researchall4batch(string pBatchHN)
        {
            object[] results = this.Invoke("Get_lab_data_researchall4batch", new object[] {
                    pBatchHN});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data_researchall4batch(string pBatchHN, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data_researchall4batch", new object[] {
                    pBatchHN}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data_researchall4batch(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_data_researchall4batchAsync(string pBatchHN)
        {
            this.Get_lab_data_researchall4batchAsync(pBatchHN, null);
        }

        /// <remarks/>
        public void Get_lab_data_researchall4batchAsync(string pBatchHN, object userState)
        {
            if ((this.Get_lab_data_researchall4batchOperationCompleted == null))
            {
                this.Get_lab_data_researchall4batchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_data_researchall4batchOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data_researchall4batch", new object[] {
                    pBatchHN}, this.Get_lab_data_researchall4batchOperationCompleted, userState);
        }

        private void OnGet_lab_data_researchall4batchOperationCompleted(object arg)
        {
            if ((this.Get_lab_data_researchall4batchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_data_researchall4batchCompleted(this, new Get_lab_data_researchall4batchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchbyda" +
            "te", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data_researchbydate(string pHn, string pStartDate, string pEndDate)
        {
            object[] results = this.Invoke("Get_lab_data_researchbydate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data_researchbydate(string pHn, string pStartDate, string pEndDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data_researchbydate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data_researchbydate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_data_researchbydateAsync(string pHn, string pStartDate, string pEndDate)
        {
            this.Get_lab_data_researchbydateAsync(pHn, pStartDate, pEndDate, null);
        }

        /// <remarks/>
        public void Get_lab_data_researchbydateAsync(string pHn, string pStartDate, string pEndDate, object userState)
        {
            if ((this.Get_lab_data_researchbydateOperationCompleted == null))
            {
                this.Get_lab_data_researchbydateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_data_researchbydateOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data_researchbydate", new object[] {
                    pHn,
                    pStartDate,
                    pEndDate}, this.Get_lab_data_researchbydateOperationCompleted, userState);
        }

        private void OnGet_lab_data_researchbydateOperationCompleted(object arg)
        {
            if ((this.Get_lab_data_researchbydateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_data_researchbydateCompleted(this, new Get_lab_data_researchbydateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_researchall", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data_researchall(string pHn)
        {
            object[] results = this.Invoke("Get_lab_data_researchall", new object[] {
                    pHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data_researchall(string pHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data_researchall", new object[] {
                    pHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data_researchall(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_data_researchallAsync(string pHn)
        {
            this.Get_lab_data_researchallAsync(pHn, null);
        }

        /// <remarks/>
        public void Get_lab_data_researchallAsync(string pHn, object userState)
        {
            if ((this.Get_lab_data_researchallOperationCompleted == null))
            {
                this.Get_lab_data_researchallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_data_researchallOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data_researchall", new object[] {
                    pHn}, this.Get_lab_data_researchallOperationCompleted, userState);
        }

        private void OnGet_lab_data_researchallOperationCompleted(object arg)
        {
            if ((this.Get_lab_data_researchallCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_data_researchallCompleted(this, new Get_lab_data_researchallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data_outside", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data_outside(string pReqname)
        {
            object[] results = this.Invoke("Get_lab_data_outside", new object[] {
                    pReqname});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data_outside(string pReqname, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data_outside", new object[] {
                    pReqname}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data_outside(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_data_outsideAsync(string pReqname)
        {
            this.Get_lab_data_outsideAsync(pReqname, null);
        }

        /// <remarks/>
        public void Get_lab_data_outsideAsync(string pReqname, object userState)
        {
            if ((this.Get_lab_data_outsideOperationCompleted == null))
            {
                this.Get_lab_data_outsideOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_data_outsideOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data_outside", new object[] {
                    pReqname}, this.Get_lab_data_outsideOperationCompleted, userState);
        }

        private void OnGet_lab_data_outsideOperationCompleted(object arg)
        {
            if ((this.Get_lab_data_outsideCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_data_outsideCompleted(this, new Get_lab_data_outsideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetOrganizationInfoByPare" +
            "ntId", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetOrganizationInfoByParentId(string pParentID)
        {
            object[] results = this.Invoke("GetOrganizationInfoByParentId", new object[] {
                    pParentID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationInfoByParentId(string pParentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrganizationInfoByParentId", new object[] {
                    pParentID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrganizationInfoByParentId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrganizationInfoByParentIdAsync(string pParentID)
        {
            this.GetOrganizationInfoByParentIdAsync(pParentID, null);
        }

        /// <remarks/>
        public void GetOrganizationInfoByParentIdAsync(string pParentID, object userState)
        {
            if ((this.GetOrganizationInfoByParentIdOperationCompleted == null))
            {
                this.GetOrganizationInfoByParentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationInfoByParentIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationInfoByParentId", new object[] {
                    pParentID}, this.GetOrganizationInfoByParentIdOperationCompleted, userState);
        }

        private void OnGetOrganizationInfoByParentIdOperationCompleted(object arg)
        {
            if ((this.GetOrganizationInfoByParentIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationInfoByParentIdCompleted(this, new GetOrganizationInfoByParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Org_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Org_detail(string pOrgID)
        {
            object[] results = this.Invoke("Get_Org_detail", new object[] {
                    pOrgID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Org_detail(string pOrgID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Org_detail", new object[] {
                    pOrgID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Org_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Org_detailAsync(string pOrgID)
        {
            this.Get_Org_detailAsync(pOrgID, null);
        }

        /// <remarks/>
        public void Get_Org_detailAsync(string pOrgID, object userState)
        {
            if ((this.Get_Org_detailOperationCompleted == null))
            {
                this.Get_Org_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Org_detailOperationCompleted);
            }
            this.InvokeAsync("Get_Org_detail", new object[] {
                    pOrgID}, this.Get_Org_detailOperationCompleted, userState);
        }

        private void OnGet_Org_detailOperationCompleted(object arg)
        {
            if ((this.Get_Org_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Org_detailCompleted(this, new Get_Org_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Place_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Place_detail(string pPlaceID)
        {
            object[] results = this.Invoke("Get_Place_detail", new object[] {
                    pPlaceID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Place_detail(string pPlaceID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Place_detail", new object[] {
                    pPlaceID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Place_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Place_detailAsync(string pPlaceID)
        {
            this.Get_Place_detailAsync(pPlaceID, null);
        }

        /// <remarks/>
        public void Get_Place_detailAsync(string pPlaceID, object userState)
        {
            if ((this.Get_Place_detailOperationCompleted == null))
            {
                this.Get_Place_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Place_detailOperationCompleted);
            }
            this.InvokeAsync("Get_Place_detail", new object[] {
                    pPlaceID}, this.Get_Place_detailOperationCompleted, userState);
        }

        private void OnGet_Place_detailOperationCompleted(object arg)
        {
            if ((this.Get_Place_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Place_detailCompleted(this, new Get_Place_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_sdloc_all", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_sdloc_all()
        {
            object[] results = this.Invoke("Get_sdloc_all", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_sdloc_all(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_sdloc_all", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_sdloc_all(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_sdloc_allAsync()
        {
            this.Get_sdloc_allAsync(null);
        }

        /// <remarks/>
        public void Get_sdloc_allAsync(object userState)
        {
            if ((this.Get_sdloc_allOperationCompleted == null))
            {
                this.Get_sdloc_allOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_sdloc_allOperationCompleted);
            }
            this.InvokeAsync("Get_sdloc_all", new object[0], this.Get_sdloc_allOperationCompleted, userState);
        }

        private void OnGet_sdloc_allOperationCompleted(object arg)
        {
            if ((this.Get_sdloc_allCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_sdloc_allCompleted(this, new Get_sdloc_allCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_sdloc_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_sdloc_detail(string pSrc)
        {
            object[] results = this.Invoke("Get_sdloc_detail", new object[] {
                    pSrc});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_sdloc_detail(string pSrc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_sdloc_detail", new object[] {
                    pSrc}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_sdloc_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_sdloc_detailAsync(string pSrc)
        {
            this.Get_sdloc_detailAsync(pSrc, null);
        }

        /// <remarks/>
        public void Get_sdloc_detailAsync(string pSrc, object userState)
        {
            if ((this.Get_sdloc_detailOperationCompleted == null))
            {
                this.Get_sdloc_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_sdloc_detailOperationCompleted);
            }
            this.InvokeAsync("Get_sdloc_detail", new object[] {
                    pSrc}, this.Get_sdloc_detailOperationCompleted, userState);
        }

        private void OnGet_sdloc_detailOperationCompleted(object arg)
        {
            if ((this.Get_sdloc_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_sdloc_detailCompleted(this, new Get_sdloc_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_staff_fulldetail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_staff_fulldetail(string sCode)
        {
            object[] results = this.Invoke("Get_staff_fulldetail", new object[] {
                    sCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_staff_fulldetail(string sCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_staff_fulldetail", new object[] {
                    sCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_staff_fulldetail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_staff_fulldetailAsync(string sCode)
        {
            this.Get_staff_fulldetailAsync(sCode, null);
        }

        /// <remarks/>
        public void Get_staff_fulldetailAsync(string sCode, object userState)
        {
            if ((this.Get_staff_fulldetailOperationCompleted == null))
            {
                this.Get_staff_fulldetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_staff_fulldetailOperationCompleted);
            }
            this.InvokeAsync("Get_staff_fulldetail", new object[] {
                    sCode}, this.Get_staff_fulldetailOperationCompleted, userState);
        }

        private void OnGet_staff_fulldetailOperationCompleted(object arg)
        {
            if ((this.Get_staff_fulldetailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_staff_fulldetailCompleted(this, new Get_staff_fulldetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_ConfirmTube", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_ConfirmTube(string xString)
        {
            object[] results = this.Invoke("Set_ConfirmTube", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_ConfirmTube(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_ConfirmTube", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_ConfirmTube(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_ConfirmTubeAsync(string xString)
        {
            this.Set_ConfirmTubeAsync(xString, null);
        }

        /// <remarks/>
        public void Set_ConfirmTubeAsync(string xString, object userState)
        {
            if ((this.Set_ConfirmTubeOperationCompleted == null))
            {
                this.Set_ConfirmTubeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_ConfirmTubeOperationCompleted);
            }
            this.InvokeAsync("Set_ConfirmTube", new object[] {
                    xString}, this.Set_ConfirmTubeOperationCompleted, userState);
        }

        private void OnSet_ConfirmTubeOperationCompleted(object arg)
        {
            if ((this.Set_ConfirmTubeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_ConfirmTubeCompleted(this, new Set_ConfirmTubeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_LabOrderRegister", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_LabOrderRegister(string xString)
        {
            object[] results = this.Invoke("Set_LabOrderRegister", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_LabOrderRegister(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_LabOrderRegister", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_LabOrderRegister(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_LabOrderRegisterAsync(string xString)
        {
            this.Set_LabOrderRegisterAsync(xString, null);
        }

        /// <remarks/>
        public void Set_LabOrderRegisterAsync(string xString, object userState)
        {
            if ((this.Set_LabOrderRegisterOperationCompleted == null))
            {
                this.Set_LabOrderRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_LabOrderRegisterOperationCompleted);
            }
            this.InvokeAsync("Set_LabOrderRegister", new object[] {
                    xString}, this.Set_LabOrderRegisterOperationCompleted, userState);
        }

        private void OnSet_LabOrderRegisterOperationCompleted(object arg)
        {
            if ((this.Set_LabOrderRegisterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_LabOrderRegisterCompleted(this, new Set_LabOrderRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_TubeID", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_TubeID(string pHn, string pSpecimenType)
        {
            object[] results = this.Invoke("Get_TubeID", new object[] {
                    pHn,
                    pSpecimenType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_TubeID(string pHn, string pSpecimenType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_TubeID", new object[] {
                    pHn,
                    pSpecimenType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_TubeID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_TubeIDAsync(string pHn, string pSpecimenType)
        {
            this.Get_TubeIDAsync(pHn, pSpecimenType, null);
        }

        /// <remarks/>
        public void Get_TubeIDAsync(string pHn, string pSpecimenType, object userState)
        {
            if ((this.Get_TubeIDOperationCompleted == null))
            {
                this.Get_TubeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_TubeIDOperationCompleted);
            }
            this.InvokeAsync("Get_TubeID", new object[] {
                    pHn,
                    pSpecimenType}, this.Get_TubeIDOperationCompleted, userState);
        }

        private void OnGet_TubeIDOperationCompleted(object arg)
        {
            if ((this.Get_TubeIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_TubeIDCompleted(this, new Get_TubeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_OrderRegisted", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Lab_OrderRegisted(string pHn)
        {
            object[] results = this.Invoke("Get_Lab_OrderRegisted", new object[] {
                    pHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Lab_OrderRegisted(string pHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Lab_OrderRegisted", new object[] {
                    pHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Lab_OrderRegisted(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Lab_OrderRegistedAsync(string pHn)
        {
            this.Get_Lab_OrderRegistedAsync(pHn, null);
        }

        /// <remarks/>
        public void Get_Lab_OrderRegistedAsync(string pHn, object userState)
        {
            if ((this.Get_Lab_OrderRegistedOperationCompleted == null))
            {
                this.Get_Lab_OrderRegistedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Lab_OrderRegistedOperationCompleted);
            }
            this.InvokeAsync("Get_Lab_OrderRegisted", new object[] {
                    pHn}, this.Get_Lab_OrderRegistedOperationCompleted, userState);
        }

        private void OnGet_Lab_OrderRegistedOperationCompleted(object arg)
        {
            if ((this.Get_Lab_OrderRegistedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Lab_OrderRegistedCompleted(this, new Get_Lab_OrderRegistedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_OrderFull", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Lab_OrderFull(string pHn)
        {
            object[] results = this.Invoke("Get_Lab_OrderFull", new object[] {
                    pHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Lab_OrderFull(string pHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Lab_OrderFull", new object[] {
                    pHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Lab_OrderFull(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Lab_OrderFullAsync(string pHn)
        {
            this.Get_Lab_OrderFullAsync(pHn, null);
        }

        /// <remarks/>
        public void Get_Lab_OrderFullAsync(string pHn, object userState)
        {
            if ((this.Get_Lab_OrderFullOperationCompleted == null))
            {
                this.Get_Lab_OrderFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Lab_OrderFullOperationCompleted);
            }
            this.InvokeAsync("Get_Lab_OrderFull", new object[] {
                    pHn}, this.Get_Lab_OrderFullOperationCompleted, userState);
        }

        private void OnGet_Lab_OrderFullOperationCompleted(object arg)
        {
            if ((this.Get_Lab_OrderFullCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Lab_OrderFullCompleted(this, new Get_Lab_OrderFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_StaffPayroll", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_StaffPayroll(string xString)
        {
            object[] results = this.Invoke("Set_StaffPayroll", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_StaffPayroll(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_StaffPayroll", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_StaffPayroll(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_StaffPayrollAsync(string xString)
        {
            this.Set_StaffPayrollAsync(xString, null);
        }

        /// <remarks/>
        public void Set_StaffPayrollAsync(string xString, object userState)
        {
            if ((this.Set_StaffPayrollOperationCompleted == null))
            {
                this.Set_StaffPayrollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_StaffPayrollOperationCompleted);
            }
            this.InvokeAsync("Set_StaffPayroll", new object[] {
                    xString}, this.Set_StaffPayrollOperationCompleted, userState);
        }

        private void OnSet_StaffPayrollOperationCompleted(object arg)
        {
            if ((this.Set_StaffPayrollCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_StaffPayrollCompleted(this, new Set_StaffPayrollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_OrderReceive", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_OrderReceive(string xString)
        {
            object[] results = this.Invoke("Set_OrderReceive", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_OrderReceive(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_OrderReceive", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_OrderReceive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_OrderReceiveAsync(string xString)
        {
            this.Set_OrderReceiveAsync(xString, null);
        }

        /// <remarks/>
        public void Set_OrderReceiveAsync(string xString, object userState)
        {
            if ((this.Set_OrderReceiveOperationCompleted == null))
            {
                this.Set_OrderReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_OrderReceiveOperationCompleted);
            }
            this.InvokeAsync("Set_OrderReceive", new object[] {
                    xString}, this.Set_OrderReceiveOperationCompleted, userState);
        }

        private void OnSet_OrderReceiveOperationCompleted(object arg)
        {
            if ((this.Set_OrderReceiveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_OrderReceiveCompleted(this, new Set_OrderReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Ward2Xray", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_Ward2Xray(string xString)
        {
            object[] results = this.Invoke("Set_Ward2Xray", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_Ward2Xray(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_Ward2Xray", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_Ward2Xray(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_Ward2XrayAsync(string xString)
        {
            this.Set_Ward2XrayAsync(xString, null);
        }

        /// <remarks/>
        public void Set_Ward2XrayAsync(string xString, object userState)
        {
            if ((this.Set_Ward2XrayOperationCompleted == null))
            {
                this.Set_Ward2XrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_Ward2XrayOperationCompleted);
            }
            this.InvokeAsync("Set_Ward2Xray", new object[] {
                    xString}, this.Set_Ward2XrayOperationCompleted, userState);
        }

        private void OnSet_Ward2XrayOperationCompleted(object arg)
        {
            if ((this.Set_Ward2XrayCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_Ward2XrayCompleted(this, new Set_Ward2XrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_WorkStaff", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_WorkStaff(string xString)
        {
            object[] results = this.Invoke("Set_WorkStaff", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_WorkStaff(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_WorkStaff", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_WorkStaff(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_WorkStaffAsync(string xString)
        {
            this.Set_WorkStaffAsync(xString, null);
        }

        /// <remarks/>
        public void Set_WorkStaffAsync(string xString, object userState)
        {
            if ((this.Set_WorkStaffOperationCompleted == null))
            {
                this.Set_WorkStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_WorkStaffOperationCompleted);
            }
            this.InvokeAsync("Set_WorkStaff", new object[] {
                    xString}, this.Set_WorkStaffOperationCompleted, userState);
        }

        private void OnSet_WorkStaffOperationCompleted(object arg)
        {
            if ((this.Set_WorkStaffCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_WorkStaffCompleted(this, new Set_WorkStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ForeignXrayOrder", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_ForeignXrayOrder(string pFHn)
        {
            object[] results = this.Invoke("Get_ForeignXrayOrder", new object[] {
                    pFHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_ForeignXrayOrder(string pFHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_ForeignXrayOrder", new object[] {
                    pFHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_ForeignXrayOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_ForeignXrayOrderAsync(string pFHn)
        {
            this.Get_ForeignXrayOrderAsync(pFHn, null);
        }

        /// <remarks/>
        public void Get_ForeignXrayOrderAsync(string pFHn, object userState)
        {
            if ((this.Get_ForeignXrayOrderOperationCompleted == null))
            {
                this.Get_ForeignXrayOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ForeignXrayOrderOperationCompleted);
            }
            this.InvokeAsync("Get_ForeignXrayOrder", new object[] {
                    pFHn}, this.Get_ForeignXrayOrderOperationCompleted, userState);
        }

        private void OnGet_ForeignXrayOrderOperationCompleted(object arg)
        {
            if ((this.Get_ForeignXrayOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ForeignXrayOrderCompleted(this, new Get_ForeignXrayOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ForeignDemographic", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_ForeignDemographic(string pFHn)
        {
            object[] results = this.Invoke("Get_ForeignDemographic", new object[] {
                    pFHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_ForeignDemographic(string pFHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_ForeignDemographic", new object[] {
                    pFHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_ForeignDemographic(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_ForeignDemographicAsync(string pFHn)
        {
            this.Get_ForeignDemographicAsync(pFHn, null);
        }

        /// <remarks/>
        public void Get_ForeignDemographicAsync(string pFHn, object userState)
        {
            if ((this.Get_ForeignDemographicOperationCompleted == null))
            {
                this.Get_ForeignDemographicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ForeignDemographicOperationCompleted);
            }
            this.InvokeAsync("Get_ForeignDemographic", new object[] {
                    pFHn}, this.Get_ForeignDemographicOperationCompleted, userState);
        }

        private void OnGet_ForeignDemographicOperationCompleted(object arg)
        {
            if ((this.Get_ForeignDemographicCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ForeignDemographicCompleted(this, new Get_ForeignDemographicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_XrayOrder", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_XrayOrder(string pHn)
        {
            object[] results = this.Invoke("Get_XrayOrder", new object[] {
                    pHn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_XrayOrder(string pHn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_XrayOrder", new object[] {
                    pHn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_XrayOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_XrayOrderAsync(string pHn)
        {
            this.Get_XrayOrderAsync(pHn, null);
        }

        /// <remarks/>
        public void Get_XrayOrderAsync(string pHn, object userState)
        {
            if ((this.Get_XrayOrderOperationCompleted == null))
            {
                this.Get_XrayOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_XrayOrderOperationCompleted);
            }
            this.InvokeAsync("Get_XrayOrder", new object[] {
                    pHn}, this.Get_XrayOrderOperationCompleted, userState);
        }

        private void OnGet_XrayOrderOperationCompleted(object arg)
        {
            if ((this.Get_XrayOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_XrayOrderCompleted(this, new Get_XrayOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_long_outs" +
            "idepatient", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_demographic_long_outsidepatient(string DeptCode, string RefMrn)
        {
            object[] results = this.Invoke("Get_demographic_long_outsidepatient", new object[] {
                    DeptCode,
                    RefMrn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_demographic_long_outsidepatient(string DeptCode, string RefMrn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_demographic_long_outsidepatient", new object[] {
                    DeptCode,
                    RefMrn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_demographic_long_outsidepatient(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_demographic_long_outsidepatientAsync(string DeptCode, string RefMrn)
        {
            this.Get_demographic_long_outsidepatientAsync(DeptCode, RefMrn, null);
        }

        /// <remarks/>
        public void Get_demographic_long_outsidepatientAsync(string DeptCode, string RefMrn, object userState)
        {
            if ((this.Get_demographic_long_outsidepatientOperationCompleted == null))
            {
                this.Get_demographic_long_outsidepatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_demographic_long_outsidepatientOperationCompleted);
            }
            this.InvokeAsync("Get_demographic_long_outsidepatient", new object[] {
                    DeptCode,
                    RefMrn}, this.Get_demographic_long_outsidepatientOperationCompleted, userState);
        }

        private void OnGet_demographic_long_outsidepatientOperationCompleted(object arg)
        {
            if ((this.Get_demographic_long_outsidepatientCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_demographic_long_outsidepatientCompleted(this, new Get_demographic_long_outsidepatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_MedPatient", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_MedPatient(string hn, string an)
        {
            object[] results = this.Invoke("Get_MedPatient", new object[] {
                    hn,
                    an});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_MedPatient(string hn, string an, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_MedPatient", new object[] {
                    hn,
                    an}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_MedPatient(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_MedPatientAsync(string hn, string an)
        {
            this.Get_MedPatientAsync(hn, an, null);
        }

        /// <remarks/>
        public void Get_MedPatientAsync(string hn, string an, object userState)
        {
            if ((this.Get_MedPatientOperationCompleted == null))
            {
                this.Get_MedPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_MedPatientOperationCompleted);
            }
            this.InvokeAsync("Get_MedPatient", new object[] {
                    hn,
                    an}, this.Get_MedPatientOperationCompleted, userState);
        }

        private void OnGet_MedPatientOperationCompleted(object arg)
        {
            if ((this.Get_MedPatientCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_MedPatientCompleted(this, new Get_MedPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_OR", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_OR(string xString)
        {
            object[] results = this.Invoke("Set_OR", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_OR(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_OR", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_OR(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_ORAsync(string xString)
        {
            this.Set_ORAsync(xString, null);
        }

        /// <remarks/>
        public void Set_ORAsync(string xString, object userState)
        {
            if ((this.Set_OROperationCompleted == null))
            {
                this.Set_OROperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_OROperationCompleted);
            }
            this.InvokeAsync("Set_OR", new object[] {
                    xString}, this.Set_OROperationCompleted, userState);
        }

        private void OnSet_OROperationCompleted(object arg)
        {
            if ((this.Set_ORCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_ORCompleted(this, new Set_ORCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_PAE", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_PAE(string xString)
        {
            object[] results = this.Invoke("Set_PAE", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_PAE(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_PAE", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_PAE(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_PAEAsync(string xString)
        {
            this.Set_PAEAsync(xString, null);
        }

        /// <remarks/>
        public void Set_PAEAsync(string xString, object userState)
        {
            if ((this.Set_PAEOperationCompleted == null))
            {
                this.Set_PAEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_PAEOperationCompleted);
            }
            this.InvokeAsync("Set_PAE", new object[] {
                    xString}, this.Set_PAEOperationCompleted, userState);
        }

        private void OnSet_PAEOperationCompleted(object arg)
        {
            if ((this.Set_PAECompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_PAECompleted(this, new Set_PAECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Lab_order", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Lab_order(string hn)
        {
            object[] results = this.Invoke("Get_Lab_order", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Lab_order(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Lab_order", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Lab_order(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Lab_orderAsync(string hn)
        {
            this.Get_Lab_orderAsync(hn, null);
        }

        /// <remarks/>
        public void Get_Lab_orderAsync(string hn, object userState)
        {
            if ((this.Get_Lab_orderOperationCompleted == null))
            {
                this.Get_Lab_orderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Lab_orderOperationCompleted);
            }
            this.InvokeAsync("Get_Lab_order", new object[] {
                    hn}, this.Get_Lab_orderOperationCompleted, userState);
        }

        private void OnGet_Lab_orderOperationCompleted(object arg)
        {
            if ((this.Get_Lab_orderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Lab_orderCompleted(this, new Get_Lab_orderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Demographic_Long_Outs" +
            "idePatient", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_Demographic_Long_OutsidePatient(string pXString)
        {
            object[] results = this.Invoke("Set_Demographic_Long_OutsidePatient", new object[] {
                    pXString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_Demographic_Long_OutsidePatient(string pXString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_Demographic_Long_OutsidePatient", new object[] {
                    pXString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_Demographic_Long_OutsidePatient(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_Demographic_Long_OutsidePatientAsync(string pXString)
        {
            this.Set_Demographic_Long_OutsidePatientAsync(pXString, null);
        }

        /// <remarks/>
        public void Set_Demographic_Long_OutsidePatientAsync(string pXString, object userState)
        {
            if ((this.Set_Demographic_Long_OutsidePatientOperationCompleted == null))
            {
                this.Set_Demographic_Long_OutsidePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_Demographic_Long_OutsidePatientOperationCompleted);
            }
            this.InvokeAsync("Set_Demographic_Long_OutsidePatient", new object[] {
                    pXString}, this.Set_Demographic_Long_OutsidePatientOperationCompleted, userState);
        }

        private void OnSet_Demographic_Long_OutsidePatientOperationCompleted(object arg)
        {
            if ((this.Set_Demographic_Long_OutsidePatientCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_Demographic_Long_OutsidePatientCompleted(this, new Set_Demographic_Long_OutsidePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_staff_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_staff_detail(string user_id, string password_id)
        {
            object[] results = this.Invoke("Get_staff_detail", new object[] {
                    user_id,
                    password_id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_staff_detail(string user_id, string password_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_staff_detail", new object[] {
                    user_id,
                    password_id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_staff_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_staff_detailAsync(string user_id, string password_id)
        {
            this.Get_staff_detailAsync(user_id, password_id, null);
        }

        /// <remarks/>
        public void Get_staff_detailAsync(string user_id, string password_id, object userState)
        {
            if ((this.Get_staff_detailOperationCompleted == null))
            {
                this.Get_staff_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_staff_detailOperationCompleted);
            }
            this.InvokeAsync("Get_staff_detail", new object[] {
                    user_id,
                    password_id}, this.Get_staff_detailOperationCompleted, userState);
        }

        private void OnGet_staff_detailOperationCompleted(object arg)
        {
            if ((this.Get_staff_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_staff_detailCompleted(this, new Get_staff_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Adr", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Adr(string hn)
        {
            object[] results = this.Invoke("Get_Adr", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Adr(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Adr", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Adr(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_AdrAsync(string hn)
        {
            this.Get_AdrAsync(hn, null);
        }

        /// <remarks/>
        public void Get_AdrAsync(string hn, object userState)
        {
            if ((this.Get_AdrOperationCompleted == null))
            {
                this.Get_AdrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_AdrOperationCompleted);
            }
            this.InvokeAsync("Get_Adr", new object[] {
                    hn}, this.Get_AdrOperationCompleted, userState);
        }

        private void OnGet_AdrOperationCompleted(object arg)
        {
            if ((this.Get_AdrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_AdrCompleted(this, new Get_AdrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Claim_Amt", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Claim_Amt(string hn, string accession_No)
        {
            object[] results = this.Invoke("Get_Claim_Amt", new object[] {
                    hn,
                    accession_No});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Claim_Amt(string hn, string accession_No, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Claim_Amt", new object[] {
                    hn,
                    accession_No}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Claim_Amt(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Claim_AmtAsync(string hn, string accession_No)
        {
            this.Get_Claim_AmtAsync(hn, accession_No, null);
        }

        /// <remarks/>
        public void Get_Claim_AmtAsync(string hn, string accession_No, object userState)
        {
            if ((this.Get_Claim_AmtOperationCompleted == null))
            {
                this.Get_Claim_AmtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Claim_AmtOperationCompleted);
            }
            this.InvokeAsync("Get_Claim_Amt", new object[] {
                    hn,
                    accession_No}, this.Get_Claim_AmtOperationCompleted, userState);
        }

        private void OnGet_Claim_AmtOperationCompleted(object arg)
        {
            if ((this.Get_Claim_AmtCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Claim_AmtCompleted(this, new Get_Claim_AmtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_lab_data", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_lab_data(string hn)
        {
            object[] results = this.Invoke("Get_lab_data", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_lab_data(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_lab_data", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_lab_data(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_lab_dataAsync(string hn)
        {
            this.Get_lab_dataAsync(hn, null);
        }

        /// <remarks/>
        public void Get_lab_dataAsync(string hn, object userState)
        {
            if ((this.Get_lab_dataOperationCompleted == null))
            {
                this.Get_lab_dataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_lab_dataOperationCompleted);
            }
            this.InvokeAsync("Get_lab_data", new object[] {
                    hn}, this.Get_lab_dataOperationCompleted, userState);
        }

        private void OnGet_lab_dataOperationCompleted(object arg)
        {
            if ((this.Get_lab_dataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_lab_dataCompleted(this, new Get_lab_dataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Cancel_Billing", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Cancel_Billing(string hn, string accession_No, string an, string iseq)
        {
            object[] results = this.Invoke("Cancel_Billing", new object[] {
                    hn,
                    accession_No,
                    an,
                    iseq});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancel_Billing(string hn, string accession_No, string an, string iseq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Cancel_Billing", new object[] {
                    hn,
                    accession_No,
                    an,
                    iseq}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCancel_Billing(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Cancel_BillingAsync(string hn, string accession_No, string an, string iseq)
        {
            this.Cancel_BillingAsync(hn, accession_No, an, iseq, null);
        }

        /// <remarks/>
        public void Cancel_BillingAsync(string hn, string accession_No, string an, string iseq, object userState)
        {
            if ((this.Cancel_BillingOperationCompleted == null))
            {
                this.Cancel_BillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancel_BillingOperationCompleted);
            }
            this.InvokeAsync("Cancel_Billing", new object[] {
                    hn,
                    accession_No,
                    an,
                    iseq}, this.Cancel_BillingOperationCompleted, userState);
        }

        private void OnCancel_BillingOperationCompleted(object arg)
        {
            if ((this.Cancel_BillingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cancel_BillingCompleted(this, new Cancel_BillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Set_Billing", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Set_Billing(string xString)
        {
            object[] results = this.Invoke("Set_Billing", new object[] {
                    xString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_Billing(string xString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_Billing", new object[] {
                    xString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_Billing(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_BillingAsync(string xString)
        {
            this.Set_BillingAsync(xString, null);
        }

        /// <remarks/>
        public void Set_BillingAsync(string xString, object userState)
        {
            if ((this.Set_BillingOperationCompleted == null))
            {
                this.Set_BillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_BillingOperationCompleted);
            }
            this.InvokeAsync("Set_Billing", new object[] {
                    xString}, this.Set_BillingOperationCompleted, userState);
        }

        private void OnSet_BillingOperationCompleted(object arg)
        {
            if ((this.Set_BillingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_BillingCompleted(this, new Set_BillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_all_exam", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_all_exam(string pExam_code)
        {
            object[] results = this.Invoke("Get_all_exam", new object[] {
                    pExam_code});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_all_exam(string pExam_code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_all_exam", new object[] {
                    pExam_code}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_all_exam(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_all_examAsync(string pExam_code)
        {
            this.Get_all_examAsync(pExam_code, null);
        }

        /// <remarks/>
        public void Get_all_examAsync(string pExam_code, object userState)
        {
            if ((this.Get_all_examOperationCompleted == null))
            {
                this.Get_all_examOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_all_examOperationCompleted);
            }
            this.InvokeAsync("Get_all_exam", new object[] {
                    pExam_code}, this.Get_all_examOperationCompleted, userState);
        }

        private void OnGet_all_examOperationCompleted(object arg)
        {
            if ((this.Get_all_examCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_all_examCompleted(this, new Get_all_examCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Payment_Status", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_Payment_Status(string hn, string an, string accNo)
        {
            object[] results = this.Invoke("Get_Payment_Status", new object[] {
                    hn,
                    an,
                    accNo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Payment_Status(string hn, string an, string accNo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Payment_Status", new object[] {
                    hn,
                    an,
                    accNo}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_Payment_Status(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_Payment_StatusAsync(string hn, string an, string accNo)
        {
            this.Get_Payment_StatusAsync(hn, an, accNo, null);
        }

        /// <remarks/>
        public void Get_Payment_StatusAsync(string hn, string an, string accNo, object userState)
        {
            if ((this.Get_Payment_StatusOperationCompleted == null))
            {
                this.Get_Payment_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Payment_StatusOperationCompleted);
            }
            this.InvokeAsync("Get_Payment_Status", new object[] {
                    hn,
                    an,
                    accNo}, this.Get_Payment_StatusOperationCompleted, userState);
        }

        private void OnGet_Payment_StatusOperationCompleted(object arg)
        {
            if ((this.Get_Payment_StatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Payment_StatusCompleted(this, new Get_Payment_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_ipd_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_ipd_detail(string hn)
        {
            object[] results = this.Invoke("Get_ipd_detail", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_ipd_detail(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_ipd_detail", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_ipd_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_ipd_detailAsync(string hn)
        {
            this.Get_ipd_detailAsync(hn, null);
        }

        /// <remarks/>
        public void Get_ipd_detailAsync(string hn, object userState)
        {
            if ((this.Get_ipd_detailOperationCompleted == null))
            {
                this.Get_ipd_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ipd_detailOperationCompleted);
            }
            this.InvokeAsync("Get_ipd_detail", new object[] {
                    hn}, this.Get_ipd_detailOperationCompleted, userState);
        }

        private void OnGet_ipd_detailOperationCompleted(object arg)
        {
            if ((this.Get_ipd_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ipd_detailCompleted(this, new Get_ipd_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEligibilityInsuranceDe" +
            "tail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEligibilityInsuranceDetail(string pMrn, string pEncType, string pEncID, string pSDLOC, string pPerfDate, string pClinicType)
        {
            object[] results = this.Invoke("GetEligibilityInsuranceDetail", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pPerfDate,
                    pClinicType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEligibilityInsuranceDetail(string pMrn, string pEncType, string pEncID, string pSDLOC, string pPerfDate, string pClinicType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEligibilityInsuranceDetail", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pPerfDate,
                    pClinicType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEligibilityInsuranceDetail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEligibilityInsuranceDetailAsync(string pMrn, string pEncType, string pEncID, string pSDLOC, string pPerfDate, string pClinicType)
        {
            this.GetEligibilityInsuranceDetailAsync(pMrn, pEncType, pEncID, pSDLOC, pPerfDate, pClinicType, null);
        }

        /// <remarks/>
        public void GetEligibilityInsuranceDetailAsync(string pMrn, string pEncType, string pEncID, string pSDLOC, string pPerfDate, string pClinicType, object userState)
        {
            if ((this.GetEligibilityInsuranceDetailOperationCompleted == null))
            {
                this.GetEligibilityInsuranceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEligibilityInsuranceDetailOperationCompleted);
            }
            this.InvokeAsync("GetEligibilityInsuranceDetail", new object[] {
                    pMrn,
                    pEncType,
                    pEncID,
                    pSDLOC,
                    pPerfDate,
                    pClinicType}, this.GetEligibilityInsuranceDetailOperationCompleted, userState);
        }

        private void OnGetEligibilityInsuranceDetailOperationCompleted(object arg)
        {
            if ((this.GetEligibilityInsuranceDetailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEligibilityInsuranceDetailCompleted(this, new GetEligibilityInsuranceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNEN" +
            "CTYPE", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEncounterDetailByMRNENCTYPE(string pMrn, string pEncType)
        {
            object[] results = this.Invoke("GetEncounterDetailByMRNENCTYPE", new object[] {
                    pMrn,
                    pEncType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncounterDetailByMRNENCTYPE(string pMrn, string pEncType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncounterDetailByMRNENCTYPE", new object[] {
                    pMrn,
                    pEncType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEncounterDetailByMRNENCTYPE(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNENCTYPEAsync(string pMrn, string pEncType)
        {
            this.GetEncounterDetailByMRNENCTYPEAsync(pMrn, pEncType, null);
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNENCTYPEAsync(string pMrn, string pEncType, object userState)
        {
            if ((this.GetEncounterDetailByMRNENCTYPEOperationCompleted == null))
            {
                this.GetEncounterDetailByMRNENCTYPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncounterDetailByMRNENCTYPEOperationCompleted);
            }
            this.InvokeAsync("GetEncounterDetailByMRNENCTYPE", new object[] {
                    pMrn,
                    pEncType}, this.GetEncounterDetailByMRNENCTYPEOperationCompleted, userState);
        }

        private void OnGetEncounterDetailByMRNENCTYPEOperationCompleted(object arg)
        {
            if ((this.GetEncounterDetailByMRNENCTYPECompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncounterDetailByMRNENCTYPECompleted(this, new GetEncounterDetailByMRNENCTYPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNDA" +
            "TE", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEncounterDetailByMRNDATE(string pMrn, string pCDate)
        {
            object[] results = this.Invoke("GetEncounterDetailByMRNDATE", new object[] {
                    pMrn,
                    pCDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncounterDetailByMRNDATE(string pMrn, string pCDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncounterDetailByMRNDATE", new object[] {
                    pMrn,
                    pCDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEncounterDetailByMRNDATE(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNDATEAsync(string pMrn, string pCDate)
        {
            this.GetEncounterDetailByMRNDATEAsync(pMrn, pCDate, null);
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNDATEAsync(string pMrn, string pCDate, object userState)
        {
            if ((this.GetEncounterDetailByMRNDATEOperationCompleted == null))
            {
                this.GetEncounterDetailByMRNDATEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncounterDetailByMRNDATEOperationCompleted);
            }
            this.InvokeAsync("GetEncounterDetailByMRNDATE", new object[] {
                    pMrn,
                    pCDate}, this.GetEncounterDetailByMRNDATEOperationCompleted, userState);
        }

        private void OnGetEncounterDetailByMRNDATEOperationCompleted(object arg)
        {
            if ((this.GetEncounterDetailByMRNDATECompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncounterDetailByMRNDATECompleted(this, new GetEncounterDetailByMRNDATECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetEncounterDetailByMRNFo" +
            "rToday", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetEncounterDetailByMRNForToday(string pMrn)
        {
            object[] results = this.Invoke("GetEncounterDetailByMRNForToday", new object[] {
                    pMrn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEncounterDetailByMRNForToday(string pMrn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEncounterDetailByMRNForToday", new object[] {
                    pMrn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetEncounterDetailByMRNForToday(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNForTodayAsync(string pMrn)
        {
            this.GetEncounterDetailByMRNForTodayAsync(pMrn, null);
        }

        /// <remarks/>
        public void GetEncounterDetailByMRNForTodayAsync(string pMrn, object userState)
        {
            if ((this.GetEncounterDetailByMRNForTodayOperationCompleted == null))
            {
                this.GetEncounterDetailByMRNForTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncounterDetailByMRNForTodayOperationCompleted);
            }
            this.InvokeAsync("GetEncounterDetailByMRNForToday", new object[] {
                    pMrn}, this.GetEncounterDetailByMRNForTodayOperationCompleted, userState);
        }

        private void OnGetEncounterDetailByMRNForTodayOperationCompleted(object arg)
        {
            if ((this.GetEncounterDetailByMRNForTodayCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncounterDetailByMRNForTodayCompleted(this, new GetEncounterDetailByMRNForTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_appointment_detailByD" +
            "ateSdloc", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_appointment_detailByDateSdloc(string pCDate, string pCSdloc)
        {
            object[] results = this.Invoke("Get_appointment_detailByDateSdloc", new object[] {
                    pCDate,
                    pCSdloc});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_appointment_detailByDateSdloc(string pCDate, string pCSdloc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_appointment_detailByDateSdloc", new object[] {
                    pCDate,
                    pCSdloc}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_appointment_detailByDateSdloc(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_appointment_detailByDateSdlocAsync(string pCDate, string pCSdloc)
        {
            this.Get_appointment_detailByDateSdlocAsync(pCDate, pCSdloc, null);
        }

        /// <remarks/>
        public void Get_appointment_detailByDateSdlocAsync(string pCDate, string pCSdloc, object userState)
        {
            if ((this.Get_appointment_detailByDateSdlocOperationCompleted == null))
            {
                this.Get_appointment_detailByDateSdlocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_appointment_detailByDateSdlocOperationCompleted);
            }
            this.InvokeAsync("Get_appointment_detailByDateSdloc", new object[] {
                    pCDate,
                    pCSdloc}, this.Get_appointment_detailByDateSdlocOperationCompleted, userState);
        }

        private void OnGet_appointment_detailByDateSdlocOperationCompleted(object arg)
        {
            if ((this.Get_appointment_detailByDateSdlocCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_appointment_detailByDateSdlocCompleted(this, new Get_appointment_detailByDateSdlocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_appointment_detail", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_appointment_detail(string hn)
        {
            object[] results = this.Invoke("Get_appointment_detail", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_appointment_detail(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_appointment_detail", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_appointment_detail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_appointment_detailAsync(string hn)
        {
            this.Get_appointment_detailAsync(hn, null);
        }

        /// <remarks/>
        public void Get_appointment_detailAsync(string hn, object userState)
        {
            if ((this.Get_appointment_detailOperationCompleted == null))
            {
                this.Get_appointment_detailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_appointment_detailOperationCompleted);
            }
            this.InvokeAsync("Get_appointment_detail", new object[] {
                    hn}, this.Get_appointment_detailOperationCompleted, userState);
        }

        private void OnGet_appointment_detailOperationCompleted(object arg)
        {
            if ((this.Get_appointment_detailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_appointment_detailCompleted(this, new Get_appointment_detailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.GetHNByIdCard", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string GetHNByIdCard(string pIdCardNumber)
        {
            object[] results = this.Invoke("GetHNByIdCard", new object[] {
                    pIdCardNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetHNByIdCard(string pIdCardNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetHNByIdCard", new object[] {
                    pIdCardNumber}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetHNByIdCard(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetHNByIdCardAsync(string pIdCardNumber)
        {
            this.GetHNByIdCardAsync(pIdCardNumber, null);
        }

        /// <remarks/>
        public void GetHNByIdCardAsync(string pIdCardNumber, object userState)
        {
            if ((this.GetHNByIdCardOperationCompleted == null))
            {
                this.GetHNByIdCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHNByIdCardOperationCompleted);
            }
            this.InvokeAsync("GetHNByIdCard", new object[] {
                    pIdCardNumber}, this.GetHNByIdCardOperationCompleted, userState);
        }

        private void OnGetHNByIdCardOperationCompleted(object arg)
        {
            if ((this.GetHNByIdCardCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHNByIdCardCompleted(this, new GetHNByIdCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_shortByNa" +
            "me", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_demographic_shortByName(string cName)
        {
            object[] results = this.Invoke("Get_demographic_shortByName", new object[] {
                    cName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_demographic_shortByName(string cName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_demographic_shortByName", new object[] {
                    cName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_demographic_shortByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_demographic_shortByNameAsync(string cName)
        {
            this.Get_demographic_shortByNameAsync(cName, null);
        }

        /// <remarks/>
        public void Get_demographic_shortByNameAsync(string cName, object userState)
        {
            if ((this.Get_demographic_shortByNameOperationCompleted == null))
            {
                this.Get_demographic_shortByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_demographic_shortByNameOperationCompleted);
            }
            this.InvokeAsync("Get_demographic_shortByName", new object[] {
                    cName}, this.Get_demographic_shortByNameOperationCompleted, userState);
        }

        private void OnGet_demographic_shortByNameOperationCompleted(object arg)
        {
            if ((this.Get_demographic_shortByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_demographic_shortByNameCompleted(this, new Get_demographic_shortByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_long", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_demographic_long(string hn)
        {
            object[] results = this.Invoke("Get_demographic_long", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_demographic_long(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_demographic_long", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_demographic_long(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_demographic_longAsync(string hn)
        {
            this.Get_demographic_longAsync(hn, null);
        }

        /// <remarks/>
        public void Get_demographic_longAsync(string hn, object userState)
        {
            if ((this.Get_demographic_longOperationCompleted == null))
            {
                this.Get_demographic_longOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_demographic_longOperationCompleted);
            }
            this.InvokeAsync("Get_demographic_long", new object[] {
                    hn}, this.Get_demographic_longOperationCompleted, userState);
        }

        private void OnGet_demographic_longOperationCompleted(object arg)
        {
            if ((this.Get_demographic_longCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_demographic_longCompleted(this, new Get_demographic_longCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_demographic_short", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public string Get_demographic_short(string hn)
        {
            object[] results = this.Invoke("Get_demographic_short", new object[] {
                    hn});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_demographic_short(string hn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_demographic_short", new object[] {
                    hn}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGet_demographic_short(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Get_demographic_shortAsync(string hn)
        {
            this.Get_demographic_shortAsync(hn, null);
        }

        /// <remarks/>
        public void Get_demographic_shortAsync(string hn, object userState)
        {
            if ((this.Get_demographic_shortOperationCompleted == null))
            {
                this.Get_demographic_shortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_demographic_shortOperationCompleted);
            }
            this.InvokeAsync("Get_demographic_short", new object[] {
                    hn}, this.Get_demographic_shortOperationCompleted, userState);
        }

        private void OnGet_demographic_shortOperationCompleted(object arg)
        {
            if ((this.Get_demographic_shortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_demographic_shortCompleted(this, new Get_demographic_shortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/patientservice/action/patientservice.Get_Version", RequestNamespace = "http://tempuri.org/patientservice/message/", ResponseNamespace = "http://tempuri.org/patientservice/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public object Get_Version()
        {
            object[] results = this.Invoke("Get_Version", new object[0]);
            return ((object)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGet_Version(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Get_Version", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public object EndGet_Version(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }

        /// <remarks/>
        public void Get_VersionAsync()
        {
            this.Get_VersionAsync(null);
        }

        /// <remarks/>
        public void Get_VersionAsync(object userState)
        {
            if ((this.Get_VersionOperationCompleted == null))
            {
                this.Get_VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_VersionOperationCompleted);
            }
            this.InvokeAsync("Get_Version", new object[0], this.Get_VersionOperationCompleted, userState);
        }

        private void OnGet_VersionOperationCompleted(object arg)
        {
            if ((this.Get_VersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_VersionCompleted(this, new Get_VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }
}
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetClinicTypeAndPriceTypeCompletedEventHandler(object sender, GetClinicTypeAndPriceTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicTypeAndPriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetClinicTypeAndPriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncounterDetailByMRNDATEandSDLOCCompletedEventHandler(object sender, GetEncounterDetailByMRNDATEandSDLOCCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncounterDetailByMRNDATEandSDLOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncounterDetailByMRNDATEandSDLOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CheckClinicTypeBySDLOCCompletedEventHandler(object sender, CheckClinicTypeBySDLOCCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckClinicTypeBySDLOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckClinicTypeBySDLOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncouterDetailByEncIdAndTypeCompletedEventHandler(object sender, GetEncouterDetailByEncIdAndTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncouterDetailByEncIdAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncouterDetailByEncIdAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncounterDetailClinicTypePriceTypeCompletedEventHandler(object sender, GetEncounterDetailClinicTypePriceTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncounterDetailClinicTypePriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncounterDetailClinicTypePriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void get_drug_IPD_statusCompletedEventHandler(object sender, get_drug_IPD_statusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_drug_IPD_statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_drug_IPD_statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void get_drug_IPDCompletedEventHandler(object sender, get_drug_IPDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_drug_IPDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_drug_IPDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchCytoResultByMRNDateCompletedEventHandler(object sender, searchCytoResultByMRNDateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCytoResultByMRNDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchCytoResultByMRNDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchPathoResultByMRNDateCompletedEventHandler(object sender, searchPathoResultByMRNDateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchPathoResultByMRNDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchPathoResultByMRNDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void chkADRbyDrugCodeCompletedEventHandler(object sender, chkADRbyDrugCodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkADRbyDrugCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal chkADRbyDrugCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void chkADRbyDrugCompletedEventHandler(object sender, chkADRbyDrugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkADRbyDrugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal chkADRbyDrugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getParentDetailByMRNCompletedEventHandler(object sender, getParentDetailByMRNCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParentDetailByMRNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getParentDetailByMRNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void searchORApppointmentByPlaceAndAppointmentDateCompletedEventHandler(object sender, searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchORApppointmentByPlaceAndAppointmentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void or_3F3CompletedEventHandler(object sender, or_3F3CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class or_3F3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal or_3F3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void or_3F2CompletedEventHandler(object sender, or_3F2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class or_3F2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal or_3F2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void or_3F1CompletedEventHandler(object sender, or_3F1CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class or_3F1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal or_3F1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CheckPlacePremiumCompletedEventHandler(object sender, CheckPlacePremiumCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPlacePremiumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckPlacePremiumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetXrayEventCompletedEventHandler(object sender, SetXrayEventCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetXrayEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetXrayEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrderXRAYRQOByInvoiceIdCompletedEventHandler(object sender, GetOrderXRAYRQOByInvoiceIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderXRAYRQOByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderXRAYRQOByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetChangeOrderCompletedEventHandler(object sender, SetChangeOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetChangeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetChangeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetLabEventPerformDateTimeCompletedEventHandler(object sender, SetLabEventPerformDateTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLabEventPerformDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetLabEventPerformDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCurrentDrugCompletedEventHandler(object sender, getCurrentDrugCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentDrugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCurrentDrugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchAllPriceTypeCompletedEventHandler(object sender, SearchAllPriceTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAllPriceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SearchAllPriceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchAllClinicTypeCompletedEventHandler(object sender, SearchAllClinicTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAllClinicTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SearchAllClinicTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_demographic_shortbyANCompletedEventHandler(object sender, Get_demographic_shortbyANCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_demographic_shortbyANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_demographic_shortbyANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetProductLocationByBagIDCompletedEventHandler(object sender, GetProductLocationByBagIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductLocationByBagIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetProductLocationByBagIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetPatientBloodGrpByMRNCompletedEventHandler(object sender, GetPatientBloodGrpByMRNCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientBloodGrpByMRNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPatientBloodGrpByMRNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetBBTrackingByORDCompletedEventHandler(object sender, SetBBTrackingByORDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetBBTrackingByORDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetBBTrackingByORDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetBBTrackingCompletedEventHandler(object sender, SetBBTrackingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetBBTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetBBTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetLabResultCompletedEventHandler(object sender, SetLabResultCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLabResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetLabResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchProductDetailByProductIDCompletedEventHandler(object sender, SearchProductDetailByProductIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchProductDetailByProductIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SearchProductDetailByProductIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrderLabStatusCompletedEventHandler(object sender, GetOrderLabStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderLabStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderLabStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CancelPaymentCompletedEventHandler(object sender, CancelPaymentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CancelPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetPaymentCompletedEventHandler(object sender, SetPaymentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetLabRQOCompletedEventHandler(object sender, SetLabRQOCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLabRQOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetLabRQOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SetLabEventCompletedEventHandler(object sender, SetLabEventCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLabEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetLabEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrderRQOByMRNCompletedEventHandler(object sender, GetOrderRQOByMRNCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderRQOByMRNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderRQOByMRNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrderRQOByInvoiceIdCompletedEventHandler(object sender, GetOrderRQOByInvoiceIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderRQOByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderRQOByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrderRQOByRqIdCompletedEventHandler(object sender, GetOrderRQOByRqIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderRQOByRqIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderRQOByRqIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Version_LabServiceCompletedEventHandler(object sender, Get_Version_LabServiceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Version_LabServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Version_LabServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPatientinSurgicalCompletedEventHandler(object sender, getPatientinSurgicalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientinSurgicalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPatientinSurgicalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RxOverSupplyCompletedEventHandler(object sender, RxOverSupplyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RxOverSupplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RxOverSupplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPatientinOrCompletedEventHandler(object sender, getPatientinOrCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientinOrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPatientinOrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_valid_datetimeCompletedEventHandler(object sender, Or_valid_datetimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Or_valid_datetimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Or_valid_datetimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_get_pop_seqCompletedEventHandler(object sender, Or_get_pop_seqCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Or_get_pop_seqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Or_get_pop_seqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_get_an_ipdCompletedEventHandler(object sender, Or_get_an_ipdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Or_get_an_ipdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Or_get_an_ipdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_closefile_hisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_openfile_hisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_cancel_opdiagCompletedEventHandler(object sender, Or_cancel_opdiagCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Or_cancel_opdiagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Or_cancel_opdiagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Or_save_op_diagCompletedEventHandler(object sender, Or_save_op_diagCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Or_save_op_diagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Or_save_op_diagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void med_lookout_finCompletedEventHandler(object sender, med_lookout_finCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class med_lookout_finCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal med_lookout_finCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void get_Order_Supply_Status_byPk_order_cisCompletedEventHandler(object sender, get_Order_Supply_Status_byPk_order_cisCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_Order_Supply_Status_byPk_order_cisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_Order_Supply_Status_byPk_order_cisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void set_order_supplyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void validation_order_supplyCompletedEventHandler(object sender, validation_order_supplyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validation_order_supplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validation_order_supplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_AdrNaranjoCompletedEventHandler(object sender, Get_AdrNaranjoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_AdrNaranjoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_AdrNaranjoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetDrRepmedCompletedEventHandler(object sender, GetDrRepmedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrRepmedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDrRepmedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getrxseq_prmCompletedEventHandler(object sender, getrxseq_prmCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getrxseq_prmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getrxseq_prmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetClaimFromRefundCompletedEventHandler(object sender, GetClaimFromRefundCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimFromRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetClaimFromRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Ws_AllDrugGroupCompletedEventHandler(object sender, Ws_AllDrugGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ws_AllDrugGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Ws_AllDrugGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Ws_DrugGroupCompletedEventHandler(object sender, Ws_DrugGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ws_DrugGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Ws_DrugGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRxSeqCompletedEventHandler(object sender, GetRxSeqCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxSeqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRxSeqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRepeateMedByHNCompletedEventHandler(object sender, GetRepeateMedByHNCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepeateMedByHNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRepeateMedByHNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void get_PriceSupply_byProduct_idCompletedEventHandler(object sender, get_PriceSupply_byProduct_idCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_PriceSupply_byProduct_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_PriceSupply_byProduct_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void get_ReimburseSupply_byProduct_idCompletedEventHandler(object sender, get_ReimburseSupply_byProduct_idCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_ReimburseSupply_byProduct_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_ReimburseSupply_byProduct_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_data_researchbydate4batchCompletedEventHandler(object sender, Get_lab_data_researchbydate4batchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_data_researchbydate4batchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_data_researchbydate4batchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_data_researchall4batchCompletedEventHandler(object sender, Get_lab_data_researchall4batchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_data_researchall4batchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_data_researchall4batchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_data_researchbydateCompletedEventHandler(object sender, Get_lab_data_researchbydateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_data_researchbydateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_data_researchbydateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_data_researchallCompletedEventHandler(object sender, Get_lab_data_researchallCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_data_researchallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_data_researchallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_data_outsideCompletedEventHandler(object sender, Get_lab_data_outsideCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_data_outsideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_data_outsideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetOrganizationInfoByParentIdCompletedEventHandler(object sender, GetOrganizationInfoByParentIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationInfoByParentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrganizationInfoByParentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Org_detailCompletedEventHandler(object sender, Get_Org_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Org_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Org_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Place_detailCompletedEventHandler(object sender, Get_Place_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Place_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Place_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_sdloc_allCompletedEventHandler(object sender, Get_sdloc_allCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_sdloc_allCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_sdloc_allCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_sdloc_detailCompletedEventHandler(object sender, Get_sdloc_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_sdloc_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_sdloc_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_staff_fulldetailCompletedEventHandler(object sender, Get_staff_fulldetailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_staff_fulldetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_staff_fulldetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_ConfirmTubeCompletedEventHandler(object sender, Set_ConfirmTubeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_ConfirmTubeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_ConfirmTubeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_LabOrderRegisterCompletedEventHandler(object sender, Set_LabOrderRegisterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_LabOrderRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_LabOrderRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_TubeIDCompletedEventHandler(object sender, Get_TubeIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_TubeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_TubeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Lab_OrderRegistedCompletedEventHandler(object sender, Get_Lab_OrderRegistedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Lab_OrderRegistedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Lab_OrderRegistedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Lab_OrderFullCompletedEventHandler(object sender, Get_Lab_OrderFullCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Lab_OrderFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Lab_OrderFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_StaffPayrollCompletedEventHandler(object sender, Set_StaffPayrollCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_StaffPayrollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_StaffPayrollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_OrderReceiveCompletedEventHandler(object sender, Set_OrderReceiveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_OrderReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_OrderReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_Ward2XrayCompletedEventHandler(object sender, Set_Ward2XrayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_Ward2XrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_Ward2XrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_WorkStaffCompletedEventHandler(object sender, Set_WorkStaffCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_WorkStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_WorkStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_ForeignXrayOrderCompletedEventHandler(object sender, Get_ForeignXrayOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ForeignXrayOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_ForeignXrayOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_ForeignDemographicCompletedEventHandler(object sender, Get_ForeignDemographicCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ForeignDemographicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_ForeignDemographicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_XrayOrderCompletedEventHandler(object sender, Get_XrayOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_XrayOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_XrayOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_demographic_long_outsidepatientCompletedEventHandler(object sender, Get_demographic_long_outsidepatientCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_demographic_long_outsidepatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_demographic_long_outsidepatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_MedPatientCompletedEventHandler(object sender, Get_MedPatientCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_MedPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_MedPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_ORCompletedEventHandler(object sender, Set_ORCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_ORCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_ORCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_PAECompletedEventHandler(object sender, Set_PAECompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_PAECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_PAECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Lab_orderCompletedEventHandler(object sender, Get_Lab_orderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Lab_orderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Lab_orderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_Demographic_Long_OutsidePatientCompletedEventHandler(object sender, Set_Demographic_Long_OutsidePatientCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_Demographic_Long_OutsidePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_Demographic_Long_OutsidePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_staff_detailCompletedEventHandler(object sender, Get_staff_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_staff_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_staff_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_AdrCompletedEventHandler(object sender, Get_AdrCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_AdrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_AdrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Claim_AmtCompletedEventHandler(object sender, Get_Claim_AmtCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Claim_AmtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Claim_AmtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_lab_dataCompletedEventHandler(object sender, Get_lab_dataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_lab_dataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_lab_dataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Cancel_BillingCompletedEventHandler(object sender, Cancel_BillingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cancel_BillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Cancel_BillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_BillingCompletedEventHandler(object sender, Set_BillingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_BillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_BillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_all_examCompletedEventHandler(object sender, Get_all_examCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_all_examCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_all_examCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_Payment_StatusCompletedEventHandler(object sender, Get_Payment_StatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Payment_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_Payment_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_ipd_detailCompletedEventHandler(object sender, Get_ipd_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ipd_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_ipd_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEligibilityInsuranceDetailCompletedEventHandler(object sender, GetEligibilityInsuranceDetailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEligibilityInsuranceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEligibilityInsuranceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncounterDetailByMRNENCTYPECompletedEventHandler(object sender, GetEncounterDetailByMRNENCTYPECompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncounterDetailByMRNENCTYPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncounterDetailByMRNENCTYPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncounterDetailByMRNDATECompletedEventHandler(object sender, GetEncounterDetailByMRNDATECompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncounterDetailByMRNDATECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncounterDetailByMRNDATECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEncounterDetailByMRNForTodayCompletedEventHandler(object sender, GetEncounterDetailByMRNForTodayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncounterDetailByMRNForTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEncounterDetailByMRNForTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_appointment_detailByDateSdlocCompletedEventHandler(object sender, Get_appointment_detailByDateSdlocCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_appointment_detailByDateSdlocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_appointment_detailByDateSdlocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_appointment_detailCompletedEventHandler(object sender, Get_appointment_detailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_appointment_detailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_appointment_detailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetHNByIdCardCompletedEventHandler(object sender, GetHNByIdCardCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHNByIdCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetHNByIdCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_demographic_shortByNameCompletedEventHandler(object sender, Get_demographic_shortByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_demographic_shortByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_demographic_shortByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_demographic_longCompletedEventHandler(object sender, Get_demographic_longCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_demographic_longCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_demographic_longCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_demographic_shortCompletedEventHandler(object sender, Get_demographic_shortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_demographic_shortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_demographic_shortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Get_VersionCompletedEventHandler(object sender, Get_VersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Get_VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
