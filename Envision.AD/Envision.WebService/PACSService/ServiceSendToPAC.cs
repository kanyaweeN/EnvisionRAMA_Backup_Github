//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

namespace Envision.WebService.PACSService
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSendToPACSoap", Namespace = "http://tempuri.org/")]
    public partial class ServiceSendToPAC : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback SendToPACSOperationCompleted;

        private System.Threading.SendOrPostCallback AboutOperationCompleted;

        private System.Threading.SendOrPostCallback ORMQueueMessageOperationCompleted;

        private System.Threading.SendOrPostCallback ORUQueueMessageOperationCompleted;

        private System.Threading.SendOrPostCallback SetBillingOperationCompleted;

        /// <remarks/>
        public ServiceSendToPAC()
        {
            this.Url = "http://MIRACLE99/SendToPACS/Service.asmx";
        }

        /// <remarks/>
        public event SendToPACSCompletedEventHandler SendToPACSCompleted;

        /// <remarks/>
        public event AboutCompletedEventHandler AboutCompleted;

        /// <remarks/>
        public event ORMQueueMessageCompletedEventHandler ORMQueueMessageCompleted;

        /// <remarks/>
        public event ORUQueueMessageCompletedEventHandler ORUQueueMessageCompleted;

        /// <remarks/>
        public event SetBillingCompletedEventHandler SetBillingCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendToPACS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendToPACS(System.Data.DataSet ds, string tbl)
        {
            object[] results = this.Invoke("SendToPACS", new object[] {
                    ds,
                    tbl});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendToPACS(System.Data.DataSet ds, string tbl, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendToPACS", new object[] {
                    ds,
                    tbl}, callback, asyncState);
        }

        /// <remarks/>
        public int EndSendToPACS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void SendToPACSAsync(System.Data.DataSet ds, string tbl)
        {
            this.SendToPACSAsync(ds, tbl, null);
        }

        /// <remarks/>
        public void SendToPACSAsync(System.Data.DataSet ds, string tbl, object userState)
        {
            if ((this.SendToPACSOperationCompleted == null))
            {
                this.SendToPACSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToPACSOperationCompleted);
            }
            this.InvokeAsync("SendToPACS", new object[] {
                    ds,
                    tbl}, this.SendToPACSOperationCompleted, userState);
        }

        private void OnSendToPACSOperationCompleted(object arg)
        {
            if ((this.SendToPACSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToPACSCompleted(this, new SendToPACSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/About", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string About()
        {
            object[] results = this.Invoke("About", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAbout(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("About", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndAbout(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AboutAsync()
        {
            this.AboutAsync(null);
        }

        /// <remarks/>
        public void AboutAsync(object userState)
        {
            if ((this.AboutOperationCompleted == null))
            {
                this.AboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAboutOperationCompleted);
            }
            this.InvokeAsync("About", new object[0], this.AboutOperationCompleted, userState);
        }

        private void OnAboutOperationCompleted(object arg)
        {
            if ((this.AboutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AboutCompleted(this, new AboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ORMQueueMessage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ORMQueueMessage(string ORDER_ID)
        {
            this.Invoke("ORMQueueMessage", new object[] {
                    ORDER_ID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginORMQueueMessage(string ORDER_ID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ORMQueueMessage", new object[] {
                    ORDER_ID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndORMQueueMessage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ORMQueueMessageAsync(string ORDER_ID)
        {
            this.ORMQueueMessageAsync(ORDER_ID, null);
        }

        /// <remarks/>
        public void ORMQueueMessageAsync(string ORDER_ID, object userState)
        {
            if ((this.ORMQueueMessageOperationCompleted == null))
            {
                this.ORMQueueMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnORMQueueMessageOperationCompleted);
            }
            this.InvokeAsync("ORMQueueMessage", new object[] {
                    ORDER_ID}, this.ORMQueueMessageOperationCompleted, userState);
        }

        private void OnORMQueueMessageOperationCompleted(object arg)
        {
            if ((this.ORMQueueMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ORMQueueMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ORUQueueMessage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ORUQueueMessage(string ACCESSION_NO)
        {
            this.Invoke("ORUQueueMessage", new object[] {
                    ACCESSION_NO});
        }

        /// <remarks/>
        public System.IAsyncResult BeginORUQueueMessage(string ACCESSION_NO, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ORUQueueMessage", new object[] {
                    ACCESSION_NO}, callback, asyncState);
        }

        /// <remarks/>
        public void EndORUQueueMessage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ORUQueueMessageAsync(string ACCESSION_NO)
        {
            this.ORUQueueMessageAsync(ACCESSION_NO, null);
        }

        /// <remarks/>
        public void ORUQueueMessageAsync(string ACCESSION_NO, object userState)
        {
            if ((this.ORUQueueMessageOperationCompleted == null))
            {
                this.ORUQueueMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnORUQueueMessageOperationCompleted);
            }
            this.InvokeAsync("ORUQueueMessage", new object[] {
                    ACCESSION_NO}, this.ORUQueueMessageOperationCompleted, userState);
        }

        private void OnORUQueueMessageOperationCompleted(object arg)
        {
            if ((this.ORUQueueMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ORUQueueMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetBilling", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBilling(string Message)
        {
            this.Invoke("SetBilling", new object[] {
                    Message});
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetBilling(string Message, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetBilling", new object[] {
                    Message}, callback, asyncState);
        }

        /// <remarks/>
        public void EndSetBilling(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void SetBillingAsync(string Message)
        {
            this.SetBillingAsync(Message, null);
        }

        /// <remarks/>
        public void SetBillingAsync(string Message, object userState)
        {
            if ((this.SetBillingOperationCompleted == null))
            {
                this.SetBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBillingOperationCompleted);
            }
            this.InvokeAsync("SetBilling", new object[] {
                    Message}, this.SetBillingOperationCompleted, userState);
        }

        private void OnSetBillingOperationCompleted(object arg)
        {
            if ((this.SetBillingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBillingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendToPACSCompletedEventHandler(object sender, SendToPACSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToPACSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendToPACSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AboutCompletedEventHandler(object sender, AboutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    //public delegate void ORMQueueMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    ///// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    //public delegate void ORUQueueMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetBillingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}