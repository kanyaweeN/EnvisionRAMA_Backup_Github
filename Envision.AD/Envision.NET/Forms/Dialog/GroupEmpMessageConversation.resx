<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="img16.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>16, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v9.1" name="DevExpress.Utils.v9.1, Version=9.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="img16.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v9.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFhEZXZFeHByZXNzLlV0aWxzLnY5LjEsIFZlcnNpb249OS4xLjMu
        MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iODhkMTc1NGQ3MDBlNDlhDAMAAABRU3lz
        dGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAoRGV2RXhwcmVzcy5VdGlscy5JbWFnZUNvbGxlY3Rpb25TdHJl
        YW1lcgIAAAAJSW1hZ2VTaXplBERhdGEEBxNTeXN0ZW0uRHJhd2luZy5TaXplAwAAAAICAAAABfz///8T
        U3lzdGVtLkRyYXdpbmcuU2l6ZQIAAAAFd2lkdGgGaGVpZ2h0AAAICAMAAAAQAAAAEAAAAAkFAAAADwUA
        AABlFAAAAn8DAACJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAABc1JHQgCuzhzpAAAA
        BGdBTUEAALGPC/xhBQAAAylJREFUOE9dk2tQTHEYxg87ptqsW4yQUhJdsOniliQ0jKJUFNWG2LWxdlN2
        dJmYcckkqamJ2lRKrVqzWV+qyaVi1owPtZqGrQ9kI+1BLjNl08zj/I8Tk2fmN+ed5/0/7//Me+ZQE6Ij
        FonMm6xN9FYBzIE2w8ZwxwyuRTkrgjMosT/NAAaTfdoWEdf6I3r3/MhPYXYYrb+Esa5mWFrK8CVmMboj
        nJUuim3K2YoA5LdWQWd4iIzGfPBPrMX81MBILk5R5gCrxyOl0Rg36jDe9wDjvTpY7sth3mJD8yR+dGqD
        Ao9eNaLNqGWfB1UHyJs85uLsgDcWzR786kiDpS0F35uSUZEvR0KkCNYJydiTl4yiR4dwR38MtXoplPUh
        ZMAbLs4OaBgpWImfmk3oL/bFruNpsIm5jsD0KhZ+bAGWy+XI1Lmgss0D0ioPMkDLhofk3rbMAP2n3TMx
        kL0UZ2XREBwpRYXeiJ6h7yyVz3shSFIhIGcXxNWOWJDqzQzw02/O3WFLDYXa5X6TeWK08Tw6o93gE6qA
        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
        SUVORK5CYIIL
</value>
  </data>
</root>