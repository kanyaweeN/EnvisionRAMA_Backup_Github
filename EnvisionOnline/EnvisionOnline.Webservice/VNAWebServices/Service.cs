//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace EnvisionOnline.Webservice.VNAWebServices
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://www.miracleadvance.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback WelcomeOperationCompleted;

        private System.Threading.SendOrPostCallback SendMessageQueueOperationCompleted;

        private System.Threading.SendOrPostCallback Set_ADTDischargeVisitByVnaIdQueueOperationCompleted;

        private System.Threading.SendOrPostCallback Set_ADTPendingAdmitByVnaIdQueueOperationCompleted;

        /// <remarks/>
        public Service()
        {
            this.Url = "http://miracle99/EnvisionVNAPreSyncParams/Service.asmx";
        }

        /// <remarks/>
        public event WelcomeCompletedEventHandler WelcomeCompleted;

        /// <remarks/>
        public event SendMessageQueueCompletedEventHandler SendMessageQueueCompleted;

        /// <remarks/>
        public event Set_ADTDischargeVisitByVnaIdQueueCompletedEventHandler Set_ADTDischargeVisitByVnaIdQueueCompleted;

        /// <remarks/>
        public event Set_ADTPendingAdmitByVnaIdQueueCompletedEventHandler Set_ADTPendingAdmitByVnaIdQueueCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.miracleadvance.com/Welcome", RequestNamespace = "http://www.miracleadvance.com/", ResponseNamespace = "http://www.miracleadvance.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Welcome(string how)
        {
            object[] results = this.Invoke("Welcome", new object[] {
                    how});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginWelcome(string how, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Welcome", new object[] {
                    how}, callback, asyncState);
        }

        /// <remarks/>
        public string EndWelcome(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void WelcomeAsync(string how)
        {
            this.WelcomeAsync(how, null);
        }

        /// <remarks/>
        public void WelcomeAsync(string how, object userState)
        {
            if ((this.WelcomeOperationCompleted == null))
            {
                this.WelcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWelcomeOperationCompleted);
            }
            this.InvokeAsync("Welcome", new object[] {
                    how}, this.WelcomeOperationCompleted, userState);
        }

        private void OnWelcomeOperationCompleted(object arg)
        {
            if ((this.WelcomeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WelcomeCompleted(this, new WelcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.miracleadvance.com/SendMessageQueue", RequestNamespace = "http://www.miracleadvance.com/", ResponseNamespace = "http://www.miracleadvance.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMessageQueue(string msmqPath, string label, object body)
        {
            object[] results = this.Invoke("SendMessageQueue", new object[] {
                    msmqPath,
                    label,
                    body});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMessageQueue(string msmqPath, string label, object body, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMessageQueue", new object[] {
                    msmqPath,
                    label,
                    body}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSendMessageQueue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SendMessageQueueAsync(string msmqPath, string label, object body)
        {
            this.SendMessageQueueAsync(msmqPath, label, body, null);
        }

        /// <remarks/>
        public void SendMessageQueueAsync(string msmqPath, string label, object body, object userState)
        {
            if ((this.SendMessageQueueOperationCompleted == null))
            {
                this.SendMessageQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageQueueOperationCompleted);
            }
            this.InvokeAsync("SendMessageQueue", new object[] {
                    msmqPath,
                    label,
                    body}, this.SendMessageQueueOperationCompleted, userState);
        }

        private void OnSendMessageQueueOperationCompleted(object arg)
        {
            if ((this.SendMessageQueueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageQueueCompleted(this, new SendMessageQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.miracleadvance.com/Set_ADTDischargeVisitByVnaIdQueue", RequestNamespace = "http://www.miracleadvance.com/", ResponseNamespace = "http://www.miracleadvance.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Set_ADTDischargeVisitByVnaIdQueue(int logId, int vnaId)
        {
            object[] results = this.Invoke("Set_ADTDischargeVisitByVnaIdQueue", new object[] {
                    logId,
                    vnaId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_ADTDischargeVisitByVnaIdQueue(int logId, int vnaId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_ADTDischargeVisitByVnaIdQueue", new object[] {
                    logId,
                    vnaId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSet_ADTDischargeVisitByVnaIdQueue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void Set_ADTDischargeVisitByVnaIdQueueAsync(int logId, int vnaId)
        {
            this.Set_ADTDischargeVisitByVnaIdQueueAsync(logId, vnaId, null);
        }

        /// <remarks/>
        public void Set_ADTDischargeVisitByVnaIdQueueAsync(int logId, int vnaId, object userState)
        {
            if ((this.Set_ADTDischargeVisitByVnaIdQueueOperationCompleted == null))
            {
                this.Set_ADTDischargeVisitByVnaIdQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_ADTDischargeVisitByVnaIdQueueOperationCompleted);
            }
            this.InvokeAsync("Set_ADTDischargeVisitByVnaIdQueue", new object[] {
                    logId,
                    vnaId}, this.Set_ADTDischargeVisitByVnaIdQueueOperationCompleted, userState);
        }

        private void OnSet_ADTDischargeVisitByVnaIdQueueOperationCompleted(object arg)
        {
            if ((this.Set_ADTDischargeVisitByVnaIdQueueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_ADTDischargeVisitByVnaIdQueueCompleted(this, new Set_ADTDischargeVisitByVnaIdQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.miracleadvance.com/Set_ADTPendingAdmitByVnaIdQueue", RequestNamespace = "http://www.miracleadvance.com/", ResponseNamespace = "http://www.miracleadvance.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Set_ADTPendingAdmitByVnaIdQueue(int logId, int vnaId)
        {
            object[] results = this.Invoke("Set_ADTPendingAdmitByVnaIdQueue", new object[] {
                    logId,
                    vnaId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_ADTPendingAdmitByVnaIdQueue(int logId, int vnaId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_ADTPendingAdmitByVnaIdQueue", new object[] {
                    logId,
                    vnaId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSet_ADTPendingAdmitByVnaIdQueue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void Set_ADTPendingAdmitByVnaIdQueueAsync(int logId, int vnaId)
        {
            this.Set_ADTPendingAdmitByVnaIdQueueAsync(logId, vnaId, null);
        }

        /// <remarks/>
        public void Set_ADTPendingAdmitByVnaIdQueueAsync(int logId, int vnaId, object userState)
        {
            if ((this.Set_ADTPendingAdmitByVnaIdQueueOperationCompleted == null))
            {
                this.Set_ADTPendingAdmitByVnaIdQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_ADTPendingAdmitByVnaIdQueueOperationCompleted);
            }
            this.InvokeAsync("Set_ADTPendingAdmitByVnaIdQueue", new object[] {
                    logId,
                    vnaId}, this.Set_ADTPendingAdmitByVnaIdQueueOperationCompleted, userState);
        }

        private void OnSet_ADTPendingAdmitByVnaIdQueueOperationCompleted(object arg)
        {
            if ((this.Set_ADTPendingAdmitByVnaIdQueueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_ADTPendingAdmitByVnaIdQueueCompleted(this, new Set_ADTPendingAdmitByVnaIdQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void WelcomeCompletedEventHandler(object sender, WelcomeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WelcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal WelcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SendMessageQueueCompletedEventHandler(object sender, SendMessageQueueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMessageQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_ADTDischargeVisitByVnaIdQueueCompletedEventHandler(object sender, Set_ADTDischargeVisitByVnaIdQueueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_ADTDischargeVisitByVnaIdQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_ADTDischargeVisitByVnaIdQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Set_ADTPendingAdmitByVnaIdQueueCompletedEventHandler(object sender, Set_ADTPendingAdmitByVnaIdQueueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_ADTPendingAdmitByVnaIdQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_ADTPendingAdmitByVnaIdQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}