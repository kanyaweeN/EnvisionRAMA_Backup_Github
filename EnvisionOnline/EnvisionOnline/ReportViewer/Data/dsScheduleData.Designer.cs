//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EnvisionOnline.ReportViewer.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsScheduleData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsScheduleData : global::System.Data.DataSet {
        
        private ScheduleReportDataTable tableScheduleReport;
        
        private RIS_EXAMDataTable tableRIS_EXAM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsScheduleData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsScheduleData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ScheduleReport"] != null)) {
                    base.Tables.Add(new ScheduleReportDataTable(ds.Tables["ScheduleReport"]));
                }
                if ((ds.Tables["RIS_EXAM"] != null)) {
                    base.Tables.Add(new RIS_EXAMDataTable(ds.Tables["RIS_EXAM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScheduleReportDataTable ScheduleReport {
            get {
                return this.tableScheduleReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RIS_EXAMDataTable RIS_EXAM {
            get {
                return this.tableRIS_EXAM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsScheduleData cln = ((dsScheduleData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ScheduleReport"] != null)) {
                    base.Tables.Add(new ScheduleReportDataTable(ds.Tables["ScheduleReport"]));
                }
                if ((ds.Tables["RIS_EXAM"] != null)) {
                    base.Tables.Add(new RIS_EXAMDataTable(ds.Tables["RIS_EXAM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableScheduleReport = ((ScheduleReportDataTable)(base.Tables["ScheduleReport"]));
            if ((initTable == true)) {
                if ((this.tableScheduleReport != null)) {
                    this.tableScheduleReport.InitVars();
                }
            }
            this.tableRIS_EXAM = ((RIS_EXAMDataTable)(base.Tables["RIS_EXAM"]));
            if ((initTable == true)) {
                if ((this.tableRIS_EXAM != null)) {
                    this.tableRIS_EXAM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsScheduleData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsScheduleData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableScheduleReport = new ScheduleReportDataTable();
            base.Tables.Add(this.tableScheduleReport);
            this.tableRIS_EXAM = new RIS_EXAMDataTable();
            base.Tables.Add(this.tableRIS_EXAM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeScheduleReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRIS_EXAM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsScheduleData ds = new dsScheduleData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ScheduleReportRowChangeEventHandler(object sender, ScheduleReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RIS_EXAMRowChangeEventHandler(object sender, RIS_EXAMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScheduleReportDataTable : global::System.Data.TypedTableBase<ScheduleReportRow> {
            
            private global::System.Data.DataColumn columnORG_ID;
            
            private global::System.Data.DataColumn columnHN;
            
            private global::System.Data.DataColumn columnPAT_THAI_NAME;
            
            private global::System.Data.DataColumn columnPAT_ENG_NAME;
            
            private global::System.Data.DataColumn columnPHONE1;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnEXAM_UID;
            
            private global::System.Data.DataColumn columnEXAM_NAME;
            
            private global::System.Data.DataColumn columnAPPOINT_DT;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnCLINIC_TYPE_TEXT;
            
            private global::System.Data.DataColumn columnMODALITY_NAME;
            
            private global::System.Data.DataColumn columnCREATED_BY;
            
            private global::System.Data.DataColumn columnCREATED_ON;
            
            private global::System.Data.DataColumn columnMODALITY_ID;
            
            private global::System.Data.DataColumn columnINS_TEXT;
            
            private global::System.Data.DataColumn columnEXAM_TYPE_INS;
            
            private global::System.Data.DataColumn columnHR_UNIT_INS;
            
            private global::System.Data.DataColumn columnUNIT_TITLE;
            
            private global::System.Data.DataColumn columnUNIT_NAME;
            
            private global::System.Data.DataColumn columnAGE;
            
            private global::System.Data.DataColumn columnGENDER;
            
            private global::System.Data.DataColumn columnCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnNONCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnROOM_UID;
            
            private global::System.Data.DataColumn columnINSURANCE_TYPE_DESC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportDataTable() {
                this.TableName = "ScheduleReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScheduleReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ScheduleReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORG_IDColumn {
                get {
                    return this.columnORG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HNColumn {
                get {
                    return this.columnHN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAT_THAI_NAMEColumn {
                get {
                    return this.columnPAT_THAI_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAT_ENG_NAMEColumn {
                get {
                    return this.columnPAT_ENG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PHONE1Column {
                get {
                    return this.columnPHONE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_UIDColumn {
                get {
                    return this.columnEXAM_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_NAMEColumn {
                get {
                    return this.columnEXAM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APPOINT_DTColumn {
                get {
                    return this.columnAPPOINT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLINIC_TYPE_TEXTColumn {
                get {
                    return this.columnCLINIC_TYPE_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODALITY_NAMEColumn {
                get {
                    return this.columnMODALITY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATED_ONColumn {
                get {
                    return this.columnCREATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODALITY_IDColumn {
                get {
                    return this.columnMODALITY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INS_TEXTColumn {
                get {
                    return this.columnINS_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_TYPE_INSColumn {
                get {
                    return this.columnEXAM_TYPE_INS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HR_UNIT_INSColumn {
                get {
                    return this.columnHR_UNIT_INS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_TITLEColumn {
                get {
                    return this.columnUNIT_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_NAMEColumn {
                get {
                    return this.columnUNIT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GENDERColumn {
                get {
                    return this.columnGENDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLAIMABLE_AMTColumn {
                get {
                    return this.columnCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONCLAIMABLE_AMTColumn {
                get {
                    return this.columnNONCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROOM_UIDColumn {
                get {
                    return this.columnROOM_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSURANCE_TYPE_DESCColumn {
                get {
                    return this.columnINSURANCE_TYPE_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRow this[int index] {
                get {
                    return ((ScheduleReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScheduleReportRowChangeEventHandler ScheduleReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScheduleReportRowChangeEventHandler ScheduleReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScheduleReportRowChangeEventHandler ScheduleReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScheduleReportRowChangeEventHandler ScheduleReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddScheduleReportRow(ScheduleReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRow AddScheduleReportRow(
                        int ORG_ID, 
                        string HN, 
                        string PAT_THAI_NAME, 
                        string PAT_ENG_NAME, 
                        string PHONE1, 
                        System.DateTime DOB, 
                        string EXAM_UID, 
                        string EXAM_NAME, 
                        System.DateTime APPOINT_DT, 
                        decimal RATE, 
                        string CLINIC_TYPE_TEXT, 
                        string MODALITY_NAME, 
                        string CREATED_BY, 
                        System.DateTime CREATED_ON, 
                        string INS_TEXT, 
                        string EXAM_TYPE_INS, 
                        string HR_UNIT_INS, 
                        string UNIT_TITLE, 
                        string UNIT_NAME, 
                        string AGE, 
                        string GENDER, 
                        decimal CLAIMABLE_AMT, 
                        decimal NONCLAIMABLE_AMT, 
                        string ROOM_UID, 
                        string INSURANCE_TYPE_DESC) {
                ScheduleReportRow rowScheduleReportRow = ((ScheduleReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORG_ID,
                        HN,
                        PAT_THAI_NAME,
                        PAT_ENG_NAME,
                        PHONE1,
                        DOB,
                        EXAM_UID,
                        EXAM_NAME,
                        APPOINT_DT,
                        RATE,
                        CLINIC_TYPE_TEXT,
                        MODALITY_NAME,
                        CREATED_BY,
                        CREATED_ON,
                        null,
                        INS_TEXT,
                        EXAM_TYPE_INS,
                        HR_UNIT_INS,
                        UNIT_TITLE,
                        UNIT_NAME,
                        AGE,
                        GENDER,
                        CLAIMABLE_AMT,
                        NONCLAIMABLE_AMT,
                        ROOM_UID,
                        INSURANCE_TYPE_DESC};
                rowScheduleReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScheduleReportRow);
                return rowScheduleReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRow FindByMODALITY_ID(int MODALITY_ID) {
                return ((ScheduleReportRow)(this.Rows.Find(new object[] {
                            MODALITY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ScheduleReportDataTable cln = ((ScheduleReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScheduleReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnORG_ID = base.Columns["ORG_ID"];
                this.columnHN = base.Columns["HN"];
                this.columnPAT_THAI_NAME = base.Columns["PAT_THAI_NAME"];
                this.columnPAT_ENG_NAME = base.Columns["PAT_ENG_NAME"];
                this.columnPHONE1 = base.Columns["PHONE1"];
                this.columnDOB = base.Columns["DOB"];
                this.columnEXAM_UID = base.Columns["EXAM_UID"];
                this.columnEXAM_NAME = base.Columns["EXAM_NAME"];
                this.columnAPPOINT_DT = base.Columns["APPOINT_DT"];
                this.columnRATE = base.Columns["RATE"];
                this.columnCLINIC_TYPE_TEXT = base.Columns["CLINIC_TYPE_TEXT"];
                this.columnMODALITY_NAME = base.Columns["MODALITY_NAME"];
                this.columnCREATED_BY = base.Columns["CREATED_BY"];
                this.columnCREATED_ON = base.Columns["CREATED_ON"];
                this.columnMODALITY_ID = base.Columns["MODALITY_ID"];
                this.columnINS_TEXT = base.Columns["INS_TEXT"];
                this.columnEXAM_TYPE_INS = base.Columns["EXAM_TYPE_INS"];
                this.columnHR_UNIT_INS = base.Columns["HR_UNIT_INS"];
                this.columnUNIT_TITLE = base.Columns["UNIT_TITLE"];
                this.columnUNIT_NAME = base.Columns["UNIT_NAME"];
                this.columnAGE = base.Columns["AGE"];
                this.columnGENDER = base.Columns["GENDER"];
                this.columnCLAIMABLE_AMT = base.Columns["CLAIMABLE_AMT"];
                this.columnNONCLAIMABLE_AMT = base.Columns["NONCLAIMABLE_AMT"];
                this.columnROOM_UID = base.Columns["ROOM_UID"];
                this.columnINSURANCE_TYPE_DESC = base.Columns["INSURANCE_TYPE_DESC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnORG_ID = new global::System.Data.DataColumn("ORG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_ID);
                this.columnHN = new global::System.Data.DataColumn("HN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHN);
                this.columnPAT_THAI_NAME = new global::System.Data.DataColumn("PAT_THAI_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_THAI_NAME);
                this.columnPAT_ENG_NAME = new global::System.Data.DataColumn("PAT_ENG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_ENG_NAME);
                this.columnPHONE1 = new global::System.Data.DataColumn("PHONE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE1);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnEXAM_UID = new global::System.Data.DataColumn("EXAM_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_UID);
                this.columnEXAM_NAME = new global::System.Data.DataColumn("EXAM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_NAME);
                this.columnAPPOINT_DT = new global::System.Data.DataColumn("APPOINT_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPOINT_DT);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnCLINIC_TYPE_TEXT = new global::System.Data.DataColumn("CLINIC_TYPE_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLINIC_TYPE_TEXT);
                this.columnMODALITY_NAME = new global::System.Data.DataColumn("MODALITY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODALITY_NAME);
                this.columnCREATED_BY = new global::System.Data.DataColumn("CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_BY);
                this.columnCREATED_ON = new global::System.Data.DataColumn("CREATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_ON);
                this.columnMODALITY_ID = new global::System.Data.DataColumn("MODALITY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODALITY_ID);
                this.columnINS_TEXT = new global::System.Data.DataColumn("INS_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_TEXT);
                this.columnEXAM_TYPE_INS = new global::System.Data.DataColumn("EXAM_TYPE_INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_TYPE_INS);
                this.columnHR_UNIT_INS = new global::System.Data.DataColumn("HR_UNIT_INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_UNIT_INS);
                this.columnUNIT_TITLE = new global::System.Data.DataColumn("UNIT_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_TITLE);
                this.columnUNIT_NAME = new global::System.Data.DataColumn("UNIT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_NAME);
                this.columnAGE = new global::System.Data.DataColumn("AGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE);
                this.columnGENDER = new global::System.Data.DataColumn("GENDER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENDER);
                this.columnCLAIMABLE_AMT = new global::System.Data.DataColumn("CLAIMABLE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAIMABLE_AMT);
                this.columnNONCLAIMABLE_AMT = new global::System.Data.DataColumn("NONCLAIMABLE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONCLAIMABLE_AMT);
                this.columnROOM_UID = new global::System.Data.DataColumn("ROOM_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_UID);
                this.columnINSURANCE_TYPE_DESC = new global::System.Data.DataColumn("INSURANCE_TYPE_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSURANCE_TYPE_DESC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMODALITY_ID}, true));
                this.columnHN.AllowDBNull = false;
                this.columnHN.MaxLength = 30;
                this.columnPAT_THAI_NAME.ReadOnly = true;
                this.columnPAT_THAI_NAME.MaxLength = 500;
                this.columnPAT_ENG_NAME.ReadOnly = true;
                this.columnPAT_ENG_NAME.MaxLength = 500;
                this.columnPHONE1.MaxLength = 100;
                this.columnEXAM_UID.MaxLength = 30;
                this.columnEXAM_NAME.AllowDBNull = false;
                this.columnEXAM_NAME.MaxLength = 300;
                this.columnAPPOINT_DT.AllowDBNull = false;
                this.columnRATE.ReadOnly = true;
                this.columnCLINIC_TYPE_TEXT.ReadOnly = true;
                this.columnCLINIC_TYPE_TEXT.MaxLength = 2147483647;
                this.columnMODALITY_NAME.MaxLength = 100;
                this.columnCREATED_BY.ReadOnly = true;
                this.columnCREATED_BY.MaxLength = 2147483647;
                this.columnMODALITY_ID.AutoIncrement = true;
                this.columnMODALITY_ID.AutoIncrementSeed = -1;
                this.columnMODALITY_ID.AutoIncrementStep = -1;
                this.columnMODALITY_ID.AllowDBNull = false;
                this.columnMODALITY_ID.ReadOnly = true;
                this.columnMODALITY_ID.Unique = true;
                this.columnINS_TEXT.ReadOnly = true;
                this.columnINS_TEXT.MaxLength = 4000;
                this.columnEXAM_TYPE_INS.ReadOnly = true;
                this.columnEXAM_TYPE_INS.MaxLength = 4000;
                this.columnHR_UNIT_INS.MaxLength = 4000;
                this.columnUNIT_TITLE.MaxLength = 100;
                this.columnUNIT_NAME.ReadOnly = true;
                this.columnUNIT_NAME.MaxLength = 2147483647;
                this.columnAGE.ReadOnly = true;
                this.columnAGE.MaxLength = 2147483647;
                this.columnGENDER.ReadOnly = true;
                this.columnGENDER.MaxLength = 11;
                this.columnROOM_UID.MaxLength = 30;
                this.columnINSURANCE_TYPE_DESC.ReadOnly = true;
                this.columnINSURANCE_TYPE_DESC.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRow NewScheduleReportRow() {
                return ((ScheduleReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScheduleReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ScheduleReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScheduleReportRowChanged != null)) {
                    this.ScheduleReportRowChanged(this, new ScheduleReportRowChangeEvent(((ScheduleReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScheduleReportRowChanging != null)) {
                    this.ScheduleReportRowChanging(this, new ScheduleReportRowChangeEvent(((ScheduleReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScheduleReportRowDeleted != null)) {
                    this.ScheduleReportRowDeleted(this, new ScheduleReportRowChangeEvent(((ScheduleReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScheduleReportRowDeleting != null)) {
                    this.ScheduleReportRowDeleting(this, new ScheduleReportRowChangeEvent(((ScheduleReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveScheduleReportRow(ScheduleReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsScheduleData ds = new dsScheduleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScheduleReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RIS_EXAMDataTable : global::System.Data.TypedTableBase<RIS_EXAMRow> {
            
            private global::System.Data.DataColumn columnEXAM_ID;
            
            private global::System.Data.DataColumn columnEXAM_UID;
            
            private global::System.Data.DataColumn columnGOVT_ID;
            
            private global::System.Data.DataColumn columnEXAM_NAME;
            
            private global::System.Data.DataColumn columnREPORT_HEADER;
            
            private global::System.Data.DataColumn columnREQ_SAMPLE;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnGOVT_RATE;
            
            private global::System.Data.DataColumn columnEXAM_TYPE;
            
            private global::System.Data.DataColumn columnSERVICE_TYPE;
            
            private global::System.Data.DataColumn columnCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnNONCLAIMABLE_AMT;
            
            private global::System.Data.DataColumn columnFREE_AMT;
            
            private global::System.Data.DataColumn columnSPECIAL_CLINIC;
            
            private global::System.Data.DataColumn columnSPECIAL_RATE;
            
            private global::System.Data.DataColumn columnVAT_APPLICABLE;
            
            private global::System.Data.DataColumn columnVAT_RATE;
            
            private global::System.Data.DataColumn columnUNIT_ID;
            
            private global::System.Data.DataColumn columnREV_HEAD_ID;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnAVG_REQ_HRS;
            
            private global::System.Data.DataColumn columnMIN_REQ_HRS;
            
            private global::System.Data.DataColumn columnCOST_PRICE;
            
            private global::System.Data.DataColumn columnRELEASE_AUTH_LEVEL;
            
            private global::System.Data.DataColumn columnFINALIZE_AUTH_LEVEL;
            
            private global::System.Data.DataColumn columnPREPARATION_FLAG;
            
            private global::System.Data.DataColumn columnPREPARATION_TAT;
            
            private global::System.Data.DataColumn columnREPEAT_FLAG;
            
            private global::System.Data.DataColumn columnICD_ID;
            
            private global::System.Data.DataColumn columnACR_ID;
            
            private global::System.Data.DataColumn columnCPT_ID;
            
            private global::System.Data.DataColumn columnDEF_CAPTURE;
            
            private global::System.Data.DataColumn columnDEF_IMAGES;
            
            private global::System.Data.DataColumn columnIS_STRUCTURED_REPORT;
            
            private global::System.Data.DataColumn columnQA_REQUIRED;
            
            private global::System.Data.DataColumn columnIS_UPDATED;
            
            private global::System.Data.DataColumn columnIS_DELETED;
            
            private global::System.Data.DataColumn columnORG_ID;
            
            private global::System.Data.DataColumn columnCREATED_BY;
            
            private global::System.Data.DataColumn columnCREATED_ON;
            
            private global::System.Data.DataColumn columnLAST_MODIFIED_BY;
            
            private global::System.Data.DataColumn columnLAST_MODIFIED_ON;
            
            private global::System.Data.DataColumn columnBP_ID;
            
            private global::System.Data.DataColumn columnSTAT_POSSIBLE;
            
            private global::System.Data.DataColumn columnSTAT_TAT_MIN;
            
            private global::System.Data.DataColumn columnURGENT_POSSIBLE;
            
            private global::System.Data.DataColumn columnURGENT_TAT_MIN;
            
            private global::System.Data.DataColumn columnDEFER_HIS_RECONCILE;
            
            private global::System.Data.DataColumn columnIS_CHECKUP;
            
            private global::System.Data.DataColumn columnVIP_RATE;
            
            private global::System.Data.DataColumn columnDF_RAD;
            
            private global::System.Data.DataColumn columnDF_TECH;
            
            private global::System.Data.DataColumn columnEXAM_BARCODE;
            
            private global::System.Data.DataColumn columnCAN_REQONLINE;
            
            private global::System.Data.DataColumn columnAVG_REQ_MIN;
            
            private global::System.Data.DataColumn columnIS_BIRAD_REPORT;
            
            private global::System.Data.DataColumn columnNEED_SCHEDULE;
            
            private global::System.Data.DataColumn columnNEED_APPROVE;
            
            private global::System.Data.DataColumn columnNEED_SIDE;
            
            private global::System.Data.DataColumn columnIS_CONSULT_CASE;
            
            private global::System.Data.DataColumn columnIS_PORTABLE;
            
            private global::System.Data.DataColumn columnIS_COMMENTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMDataTable() {
                this.TableName = "RIS_EXAM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RIS_EXAMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RIS_EXAMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_IDColumn {
                get {
                    return this.columnEXAM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_UIDColumn {
                get {
                    return this.columnEXAM_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GOVT_IDColumn {
                get {
                    return this.columnGOVT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_NAMEColumn {
                get {
                    return this.columnEXAM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REPORT_HEADERColumn {
                get {
                    return this.columnREPORT_HEADER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REQ_SAMPLEColumn {
                get {
                    return this.columnREQ_SAMPLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GOVT_RATEColumn {
                get {
                    return this.columnGOVT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_TYPEColumn {
                get {
                    return this.columnEXAM_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SERVICE_TYPEColumn {
                get {
                    return this.columnSERVICE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLAIMABLE_AMTColumn {
                get {
                    return this.columnCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONCLAIMABLE_AMTColumn {
                get {
                    return this.columnNONCLAIMABLE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FREE_AMTColumn {
                get {
                    return this.columnFREE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPECIAL_CLINICColumn {
                get {
                    return this.columnSPECIAL_CLINIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPECIAL_RATEColumn {
                get {
                    return this.columnSPECIAL_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_APPLICABLEColumn {
                get {
                    return this.columnVAT_APPLICABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VAT_RATEColumn {
                get {
                    return this.columnVAT_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_IDColumn {
                get {
                    return this.columnUNIT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REV_HEAD_IDColumn {
                get {
                    return this.columnREV_HEAD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVG_REQ_HRSColumn {
                get {
                    return this.columnAVG_REQ_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIN_REQ_HRSColumn {
                get {
                    return this.columnMIN_REQ_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COST_PRICEColumn {
                get {
                    return this.columnCOST_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RELEASE_AUTH_LEVELColumn {
                get {
                    return this.columnRELEASE_AUTH_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINALIZE_AUTH_LEVELColumn {
                get {
                    return this.columnFINALIZE_AUTH_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PREPARATION_FLAGColumn {
                get {
                    return this.columnPREPARATION_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PREPARATION_TATColumn {
                get {
                    return this.columnPREPARATION_TAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REPEAT_FLAGColumn {
                get {
                    return this.columnREPEAT_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICD_IDColumn {
                get {
                    return this.columnICD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACR_IDColumn {
                get {
                    return this.columnACR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CPT_IDColumn {
                get {
                    return this.columnCPT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEF_CAPTUREColumn {
                get {
                    return this.columnDEF_CAPTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEF_IMAGESColumn {
                get {
                    return this.columnDEF_IMAGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_STRUCTURED_REPORTColumn {
                get {
                    return this.columnIS_STRUCTURED_REPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QA_REQUIREDColumn {
                get {
                    return this.columnQA_REQUIRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_UPDATEDColumn {
                get {
                    return this.columnIS_UPDATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_DELETEDColumn {
                get {
                    return this.columnIS_DELETED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORG_IDColumn {
                get {
                    return this.columnORG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATED_ONColumn {
                get {
                    return this.columnCREATED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_MODIFIED_BYColumn {
                get {
                    return this.columnLAST_MODIFIED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_MODIFIED_ONColumn {
                get {
                    return this.columnLAST_MODIFIED_ON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BP_IDColumn {
                get {
                    return this.columnBP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STAT_POSSIBLEColumn {
                get {
                    return this.columnSTAT_POSSIBLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STAT_TAT_MINColumn {
                get {
                    return this.columnSTAT_TAT_MIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn URGENT_POSSIBLEColumn {
                get {
                    return this.columnURGENT_POSSIBLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn URGENT_TAT_MINColumn {
                get {
                    return this.columnURGENT_TAT_MIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFER_HIS_RECONCILEColumn {
                get {
                    return this.columnDEFER_HIS_RECONCILE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_CHECKUPColumn {
                get {
                    return this.columnIS_CHECKUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIP_RATEColumn {
                get {
                    return this.columnVIP_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DF_RADColumn {
                get {
                    return this.columnDF_RAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DF_TECHColumn {
                get {
                    return this.columnDF_TECH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXAM_BARCODEColumn {
                get {
                    return this.columnEXAM_BARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAN_REQONLINEColumn {
                get {
                    return this.columnCAN_REQONLINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVG_REQ_MINColumn {
                get {
                    return this.columnAVG_REQ_MIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_BIRAD_REPORTColumn {
                get {
                    return this.columnIS_BIRAD_REPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEED_SCHEDULEColumn {
                get {
                    return this.columnNEED_SCHEDULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEED_APPROVEColumn {
                get {
                    return this.columnNEED_APPROVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEED_SIDEColumn {
                get {
                    return this.columnNEED_SIDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_CONSULT_CASEColumn {
                get {
                    return this.columnIS_CONSULT_CASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_PORTABLEColumn {
                get {
                    return this.columnIS_PORTABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_COMMENTSColumn {
                get {
                    return this.columnIS_COMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRow this[int index] {
                get {
                    return ((RIS_EXAMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RIS_EXAMRowChangeEventHandler RIS_EXAMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RIS_EXAMRowChangeEventHandler RIS_EXAMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RIS_EXAMRowChangeEventHandler RIS_EXAMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RIS_EXAMRowChangeEventHandler RIS_EXAMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRIS_EXAMRow(RIS_EXAMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRow AddRIS_EXAMRow(
                        string EXAM_UID, 
                        string GOVT_ID, 
                        string EXAM_NAME, 
                        string REPORT_HEADER, 
                        string REQ_SAMPLE, 
                        decimal RATE, 
                        decimal GOVT_RATE, 
                        int EXAM_TYPE, 
                        string SERVICE_TYPE, 
                        decimal CLAIMABLE_AMT, 
                        decimal NONCLAIMABLE_AMT, 
                        decimal FREE_AMT, 
                        string SPECIAL_CLINIC, 
                        decimal SPECIAL_RATE, 
                        string VAT_APPLICABLE, 
                        decimal VAT_RATE, 
                        int UNIT_ID, 
                        int REV_HEAD_ID, 
                        string IS_ACTIVE, 
                        decimal AVG_REQ_HRS, 
                        decimal MIN_REQ_HRS, 
                        decimal COST_PRICE, 
                        byte RELEASE_AUTH_LEVEL, 
                        byte FINALIZE_AUTH_LEVEL, 
                        string PREPARATION_FLAG, 
                        decimal PREPARATION_TAT, 
                        string REPEAT_FLAG, 
                        int ICD_ID, 
                        int ACR_ID, 
                        int CPT_ID, 
                        byte DEF_CAPTURE, 
                        byte DEF_IMAGES, 
                        string IS_STRUCTURED_REPORT, 
                        string QA_REQUIRED, 
                        string IS_UPDATED, 
                        string IS_DELETED, 
                        int ORG_ID, 
                        string CREATED_BY, 
                        System.DateTime CREATED_ON, 
                        string LAST_MODIFIED_BY, 
                        System.DateTime LAST_MODIFIED_ON, 
                        int BP_ID, 
                        bool STAT_POSSIBLE, 
                        byte STAT_TAT_MIN, 
                        bool URGENT_POSSIBLE, 
                        byte URGENT_TAT_MIN, 
                        string DEFER_HIS_RECONCILE, 
                        string IS_CHECKUP, 
                        decimal VIP_RATE, 
                        decimal DF_RAD, 
                        decimal DF_TECH, 
                        string EXAM_BARCODE, 
                        string CAN_REQONLINE, 
                        int AVG_REQ_MIN, 
                        string IS_BIRAD_REPORT, 
                        string NEED_SCHEDULE, 
                        string NEED_APPROVE, 
                        string NEED_SIDE, 
                        string IS_CONSULT_CASE, 
                        string IS_PORTABLE, 
                        string IS_COMMENTS) {
                RIS_EXAMRow rowRIS_EXAMRow = ((RIS_EXAMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EXAM_UID,
                        GOVT_ID,
                        EXAM_NAME,
                        REPORT_HEADER,
                        REQ_SAMPLE,
                        RATE,
                        GOVT_RATE,
                        EXAM_TYPE,
                        SERVICE_TYPE,
                        CLAIMABLE_AMT,
                        NONCLAIMABLE_AMT,
                        FREE_AMT,
                        SPECIAL_CLINIC,
                        SPECIAL_RATE,
                        VAT_APPLICABLE,
                        VAT_RATE,
                        UNIT_ID,
                        REV_HEAD_ID,
                        IS_ACTIVE,
                        AVG_REQ_HRS,
                        MIN_REQ_HRS,
                        COST_PRICE,
                        RELEASE_AUTH_LEVEL,
                        FINALIZE_AUTH_LEVEL,
                        PREPARATION_FLAG,
                        PREPARATION_TAT,
                        REPEAT_FLAG,
                        ICD_ID,
                        ACR_ID,
                        CPT_ID,
                        DEF_CAPTURE,
                        DEF_IMAGES,
                        IS_STRUCTURED_REPORT,
                        QA_REQUIRED,
                        IS_UPDATED,
                        IS_DELETED,
                        ORG_ID,
                        CREATED_BY,
                        CREATED_ON,
                        LAST_MODIFIED_BY,
                        LAST_MODIFIED_ON,
                        BP_ID,
                        STAT_POSSIBLE,
                        STAT_TAT_MIN,
                        URGENT_POSSIBLE,
                        URGENT_TAT_MIN,
                        DEFER_HIS_RECONCILE,
                        IS_CHECKUP,
                        VIP_RATE,
                        DF_RAD,
                        DF_TECH,
                        EXAM_BARCODE,
                        CAN_REQONLINE,
                        AVG_REQ_MIN,
                        IS_BIRAD_REPORT,
                        NEED_SCHEDULE,
                        NEED_APPROVE,
                        NEED_SIDE,
                        IS_CONSULT_CASE,
                        IS_PORTABLE,
                        IS_COMMENTS};
                rowRIS_EXAMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRIS_EXAMRow);
                return rowRIS_EXAMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRow FindByEXAM_ID(int EXAM_ID) {
                return ((RIS_EXAMRow)(this.Rows.Find(new object[] {
                            EXAM_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RIS_EXAMDataTable cln = ((RIS_EXAMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RIS_EXAMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEXAM_ID = base.Columns["EXAM_ID"];
                this.columnEXAM_UID = base.Columns["EXAM_UID"];
                this.columnGOVT_ID = base.Columns["GOVT_ID"];
                this.columnEXAM_NAME = base.Columns["EXAM_NAME"];
                this.columnREPORT_HEADER = base.Columns["REPORT_HEADER"];
                this.columnREQ_SAMPLE = base.Columns["REQ_SAMPLE"];
                this.columnRATE = base.Columns["RATE"];
                this.columnGOVT_RATE = base.Columns["GOVT_RATE"];
                this.columnEXAM_TYPE = base.Columns["EXAM_TYPE"];
                this.columnSERVICE_TYPE = base.Columns["SERVICE_TYPE"];
                this.columnCLAIMABLE_AMT = base.Columns["CLAIMABLE_AMT"];
                this.columnNONCLAIMABLE_AMT = base.Columns["NONCLAIMABLE_AMT"];
                this.columnFREE_AMT = base.Columns["FREE_AMT"];
                this.columnSPECIAL_CLINIC = base.Columns["SPECIAL_CLINIC"];
                this.columnSPECIAL_RATE = base.Columns["SPECIAL_RATE"];
                this.columnVAT_APPLICABLE = base.Columns["VAT_APPLICABLE"];
                this.columnVAT_RATE = base.Columns["VAT_RATE"];
                this.columnUNIT_ID = base.Columns["UNIT_ID"];
                this.columnREV_HEAD_ID = base.Columns["REV_HEAD_ID"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnAVG_REQ_HRS = base.Columns["AVG_REQ_HRS"];
                this.columnMIN_REQ_HRS = base.Columns["MIN_REQ_HRS"];
                this.columnCOST_PRICE = base.Columns["COST_PRICE"];
                this.columnRELEASE_AUTH_LEVEL = base.Columns["RELEASE_AUTH_LEVEL"];
                this.columnFINALIZE_AUTH_LEVEL = base.Columns["FINALIZE_AUTH_LEVEL"];
                this.columnPREPARATION_FLAG = base.Columns["PREPARATION_FLAG"];
                this.columnPREPARATION_TAT = base.Columns["PREPARATION_TAT"];
                this.columnREPEAT_FLAG = base.Columns["REPEAT_FLAG"];
                this.columnICD_ID = base.Columns["ICD_ID"];
                this.columnACR_ID = base.Columns["ACR_ID"];
                this.columnCPT_ID = base.Columns["CPT_ID"];
                this.columnDEF_CAPTURE = base.Columns["DEF_CAPTURE"];
                this.columnDEF_IMAGES = base.Columns["DEF_IMAGES"];
                this.columnIS_STRUCTURED_REPORT = base.Columns["IS_STRUCTURED_REPORT"];
                this.columnQA_REQUIRED = base.Columns["QA_REQUIRED"];
                this.columnIS_UPDATED = base.Columns["IS_UPDATED"];
                this.columnIS_DELETED = base.Columns["IS_DELETED"];
                this.columnORG_ID = base.Columns["ORG_ID"];
                this.columnCREATED_BY = base.Columns["CREATED_BY"];
                this.columnCREATED_ON = base.Columns["CREATED_ON"];
                this.columnLAST_MODIFIED_BY = base.Columns["LAST_MODIFIED_BY"];
                this.columnLAST_MODIFIED_ON = base.Columns["LAST_MODIFIED_ON"];
                this.columnBP_ID = base.Columns["BP_ID"];
                this.columnSTAT_POSSIBLE = base.Columns["STAT_POSSIBLE"];
                this.columnSTAT_TAT_MIN = base.Columns["STAT_TAT_MIN"];
                this.columnURGENT_POSSIBLE = base.Columns["URGENT_POSSIBLE"];
                this.columnURGENT_TAT_MIN = base.Columns["URGENT_TAT_MIN"];
                this.columnDEFER_HIS_RECONCILE = base.Columns["DEFER_HIS_RECONCILE"];
                this.columnIS_CHECKUP = base.Columns["IS_CHECKUP"];
                this.columnVIP_RATE = base.Columns["VIP_RATE"];
                this.columnDF_RAD = base.Columns["DF_RAD"];
                this.columnDF_TECH = base.Columns["DF_TECH"];
                this.columnEXAM_BARCODE = base.Columns["EXAM_BARCODE"];
                this.columnCAN_REQONLINE = base.Columns["CAN_REQONLINE"];
                this.columnAVG_REQ_MIN = base.Columns["AVG_REQ_MIN"];
                this.columnIS_BIRAD_REPORT = base.Columns["IS_BIRAD_REPORT"];
                this.columnNEED_SCHEDULE = base.Columns["NEED_SCHEDULE"];
                this.columnNEED_APPROVE = base.Columns["NEED_APPROVE"];
                this.columnNEED_SIDE = base.Columns["NEED_SIDE"];
                this.columnIS_CONSULT_CASE = base.Columns["IS_CONSULT_CASE"];
                this.columnIS_PORTABLE = base.Columns["IS_PORTABLE"];
                this.columnIS_COMMENTS = base.Columns["IS_COMMENTS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEXAM_ID = new global::System.Data.DataColumn("EXAM_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_ID);
                this.columnEXAM_UID = new global::System.Data.DataColumn("EXAM_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_UID);
                this.columnGOVT_ID = new global::System.Data.DataColumn("GOVT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOVT_ID);
                this.columnEXAM_NAME = new global::System.Data.DataColumn("EXAM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_NAME);
                this.columnREPORT_HEADER = new global::System.Data.DataColumn("REPORT_HEADER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORT_HEADER);
                this.columnREQ_SAMPLE = new global::System.Data.DataColumn("REQ_SAMPLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQ_SAMPLE);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnGOVT_RATE = new global::System.Data.DataColumn("GOVT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOVT_RATE);
                this.columnEXAM_TYPE = new global::System.Data.DataColumn("EXAM_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_TYPE);
                this.columnSERVICE_TYPE = new global::System.Data.DataColumn("SERVICE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_TYPE);
                this.columnCLAIMABLE_AMT = new global::System.Data.DataColumn("CLAIMABLE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAIMABLE_AMT);
                this.columnNONCLAIMABLE_AMT = new global::System.Data.DataColumn("NONCLAIMABLE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONCLAIMABLE_AMT);
                this.columnFREE_AMT = new global::System.Data.DataColumn("FREE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFREE_AMT);
                this.columnSPECIAL_CLINIC = new global::System.Data.DataColumn("SPECIAL_CLINIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIAL_CLINIC);
                this.columnSPECIAL_RATE = new global::System.Data.DataColumn("SPECIAL_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIAL_RATE);
                this.columnVAT_APPLICABLE = new global::System.Data.DataColumn("VAT_APPLICABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_APPLICABLE);
                this.columnVAT_RATE = new global::System.Data.DataColumn("VAT_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_RATE);
                this.columnUNIT_ID = new global::System.Data.DataColumn("UNIT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_ID);
                this.columnREV_HEAD_ID = new global::System.Data.DataColumn("REV_HEAD_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREV_HEAD_ID);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnAVG_REQ_HRS = new global::System.Data.DataColumn("AVG_REQ_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVG_REQ_HRS);
                this.columnMIN_REQ_HRS = new global::System.Data.DataColumn("MIN_REQ_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_REQ_HRS);
                this.columnCOST_PRICE = new global::System.Data.DataColumn("COST_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_PRICE);
                this.columnRELEASE_AUTH_LEVEL = new global::System.Data.DataColumn("RELEASE_AUTH_LEVEL", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRELEASE_AUTH_LEVEL);
                this.columnFINALIZE_AUTH_LEVEL = new global::System.Data.DataColumn("FINALIZE_AUTH_LEVEL", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINALIZE_AUTH_LEVEL);
                this.columnPREPARATION_FLAG = new global::System.Data.DataColumn("PREPARATION_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPARATION_FLAG);
                this.columnPREPARATION_TAT = new global::System.Data.DataColumn("PREPARATION_TAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPARATION_TAT);
                this.columnREPEAT_FLAG = new global::System.Data.DataColumn("REPEAT_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPEAT_FLAG);
                this.columnICD_ID = new global::System.Data.DataColumn("ICD_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD_ID);
                this.columnACR_ID = new global::System.Data.DataColumn("ACR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACR_ID);
                this.columnCPT_ID = new global::System.Data.DataColumn("CPT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPT_ID);
                this.columnDEF_CAPTURE = new global::System.Data.DataColumn("DEF_CAPTURE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_CAPTURE);
                this.columnDEF_IMAGES = new global::System.Data.DataColumn("DEF_IMAGES", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEF_IMAGES);
                this.columnIS_STRUCTURED_REPORT = new global::System.Data.DataColumn("IS_STRUCTURED_REPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_STRUCTURED_REPORT);
                this.columnQA_REQUIRED = new global::System.Data.DataColumn("QA_REQUIRED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQA_REQUIRED);
                this.columnIS_UPDATED = new global::System.Data.DataColumn("IS_UPDATED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_UPDATED);
                this.columnIS_DELETED = new global::System.Data.DataColumn("IS_DELETED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DELETED);
                this.columnORG_ID = new global::System.Data.DataColumn("ORG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_ID);
                this.columnCREATED_BY = new global::System.Data.DataColumn("CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_BY);
                this.columnCREATED_ON = new global::System.Data.DataColumn("CREATED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED_ON);
                this.columnLAST_MODIFIED_BY = new global::System.Data.DataColumn("LAST_MODIFIED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_MODIFIED_BY);
                this.columnLAST_MODIFIED_ON = new global::System.Data.DataColumn("LAST_MODIFIED_ON", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_MODIFIED_ON);
                this.columnBP_ID = new global::System.Data.DataColumn("BP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBP_ID);
                this.columnSTAT_POSSIBLE = new global::System.Data.DataColumn("STAT_POSSIBLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_POSSIBLE);
                this.columnSTAT_TAT_MIN = new global::System.Data.DataColumn("STAT_TAT_MIN", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAT_TAT_MIN);
                this.columnURGENT_POSSIBLE = new global::System.Data.DataColumn("URGENT_POSSIBLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURGENT_POSSIBLE);
                this.columnURGENT_TAT_MIN = new global::System.Data.DataColumn("URGENT_TAT_MIN", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURGENT_TAT_MIN);
                this.columnDEFER_HIS_RECONCILE = new global::System.Data.DataColumn("DEFER_HIS_RECONCILE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFER_HIS_RECONCILE);
                this.columnIS_CHECKUP = new global::System.Data.DataColumn("IS_CHECKUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_CHECKUP);
                this.columnVIP_RATE = new global::System.Data.DataColumn("VIP_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIP_RATE);
                this.columnDF_RAD = new global::System.Data.DataColumn("DF_RAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDF_RAD);
                this.columnDF_TECH = new global::System.Data.DataColumn("DF_TECH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDF_TECH);
                this.columnEXAM_BARCODE = new global::System.Data.DataColumn("EXAM_BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXAM_BARCODE);
                this.columnCAN_REQONLINE = new global::System.Data.DataColumn("CAN_REQONLINE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAN_REQONLINE);
                this.columnAVG_REQ_MIN = new global::System.Data.DataColumn("AVG_REQ_MIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVG_REQ_MIN);
                this.columnIS_BIRAD_REPORT = new global::System.Data.DataColumn("IS_BIRAD_REPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_BIRAD_REPORT);
                this.columnNEED_SCHEDULE = new global::System.Data.DataColumn("NEED_SCHEDULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEED_SCHEDULE);
                this.columnNEED_APPROVE = new global::System.Data.DataColumn("NEED_APPROVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEED_APPROVE);
                this.columnNEED_SIDE = new global::System.Data.DataColumn("NEED_SIDE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEED_SIDE);
                this.columnIS_CONSULT_CASE = new global::System.Data.DataColumn("IS_CONSULT_CASE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_CONSULT_CASE);
                this.columnIS_PORTABLE = new global::System.Data.DataColumn("IS_PORTABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_PORTABLE);
                this.columnIS_COMMENTS = new global::System.Data.DataColumn("IS_COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_COMMENTS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEXAM_ID}, true));
                this.columnEXAM_ID.AutoIncrement = true;
                this.columnEXAM_ID.AutoIncrementSeed = -1;
                this.columnEXAM_ID.AutoIncrementStep = -1;
                this.columnEXAM_ID.AllowDBNull = false;
                this.columnEXAM_ID.ReadOnly = true;
                this.columnEXAM_ID.Unique = true;
                this.columnEXAM_UID.MaxLength = 30;
                this.columnGOVT_ID.MaxLength = 30;
                this.columnEXAM_NAME.AllowDBNull = false;
                this.columnEXAM_NAME.MaxLength = 300;
                this.columnREPORT_HEADER.MaxLength = 300;
                this.columnREQ_SAMPLE.MaxLength = 20;
                this.columnSERVICE_TYPE.AllowDBNull = false;
                this.columnSERVICE_TYPE.MaxLength = 2;
                this.columnSPECIAL_CLINIC.MaxLength = 1;
                this.columnVAT_APPLICABLE.MaxLength = 1;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnPREPARATION_FLAG.MaxLength = 1;
                this.columnREPEAT_FLAG.MaxLength = 1;
                this.columnIS_STRUCTURED_REPORT.MaxLength = 1;
                this.columnQA_REQUIRED.MaxLength = 1;
                this.columnIS_UPDATED.MaxLength = 1;
                this.columnIS_DELETED.MaxLength = 1;
                this.columnCREATED_BY.MaxLength = 30;
                this.columnLAST_MODIFIED_BY.MaxLength = 30;
                this.columnDEFER_HIS_RECONCILE.MaxLength = 1;
                this.columnIS_CHECKUP.MaxLength = 1;
                this.columnEXAM_BARCODE.MaxLength = 150;
                this.columnCAN_REQONLINE.MaxLength = 1;
                this.columnIS_BIRAD_REPORT.MaxLength = 1;
                this.columnNEED_SCHEDULE.MaxLength = 1;
                this.columnNEED_APPROVE.MaxLength = 1;
                this.columnNEED_SIDE.MaxLength = 1;
                this.columnIS_CONSULT_CASE.MaxLength = 1;
                this.columnIS_PORTABLE.MaxLength = 1;
                this.columnIS_COMMENTS.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRow NewRIS_EXAMRow() {
                return ((RIS_EXAMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RIS_EXAMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RIS_EXAMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RIS_EXAMRowChanged != null)) {
                    this.RIS_EXAMRowChanged(this, new RIS_EXAMRowChangeEvent(((RIS_EXAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RIS_EXAMRowChanging != null)) {
                    this.RIS_EXAMRowChanging(this, new RIS_EXAMRowChangeEvent(((RIS_EXAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RIS_EXAMRowDeleted != null)) {
                    this.RIS_EXAMRowDeleted(this, new RIS_EXAMRowChangeEvent(((RIS_EXAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RIS_EXAMRowDeleting != null)) {
                    this.RIS_EXAMRowDeleting(this, new RIS_EXAMRowChangeEvent(((RIS_EXAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRIS_EXAMRow(RIS_EXAMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsScheduleData ds = new dsScheduleData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RIS_EXAMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ScheduleReportRow : global::System.Data.DataRow {
            
            private ScheduleReportDataTable tableScheduleReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScheduleReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScheduleReport = ((ScheduleReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORG_ID {
                get {
                    try {
                        return ((int)(this[this.tableScheduleReport.ORG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORG_ID\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.ORG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HN {
                get {
                    return ((string)(this[this.tableScheduleReport.HNColumn]));
                }
                set {
                    this[this.tableScheduleReport.HNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAT_THAI_NAME {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.PAT_THAI_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAT_THAI_NAME\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.PAT_THAI_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAT_ENG_NAME {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.PAT_ENG_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAT_ENG_NAME\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.PAT_ENG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PHONE1 {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.PHONE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHONE1\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.PHONE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScheduleReport.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_UID {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.EXAM_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_UID\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.EXAM_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_NAME {
                get {
                    return ((string)(this[this.tableScheduleReport.EXAM_NAMEColumn]));
                }
                set {
                    this[this.tableScheduleReport.EXAM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime APPOINT_DT {
                get {
                    return ((global::System.DateTime)(this[this.tableScheduleReport.APPOINT_DTColumn]));
                }
                set {
                    this[this.tableScheduleReport.APPOINT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableScheduleReport.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLINIC_TYPE_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.CLINIC_TYPE_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLINIC_TYPE_TEXT\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.CLINIC_TYPE_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MODALITY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.MODALITY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODALITY_NAME\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.MODALITY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_BY\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CREATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScheduleReport.CREATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_ON\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.CREATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MODALITY_ID {
                get {
                    return ((int)(this[this.tableScheduleReport.MODALITY_IDColumn]));
                }
                set {
                    this[this.tableScheduleReport.MODALITY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INS_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.INS_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS_TEXT\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.INS_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_TYPE_INS {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.EXAM_TYPE_INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_TYPE_INS\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.EXAM_TYPE_INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HR_UNIT_INS {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.HR_UNIT_INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_UNIT_INS\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.HR_UNIT_INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNIT_TITLE {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.UNIT_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_TITLE\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.UNIT_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNIT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.UNIT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_NAME\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.UNIT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AGE {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.AGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGE\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.AGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GENDER {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.GENDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GENDER\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.GENDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CLAIMABLE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableScheduleReport.CLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLAIMABLE_AMT\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.CLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONCLAIMABLE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableScheduleReport.NONCLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NONCLAIMABLE_AMT\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.NONCLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROOM_UID {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.ROOM_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROOM_UID\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.ROOM_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSURANCE_TYPE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableScheduleReport.INSURANCE_TYPE_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSURANCE_TYPE_DESC\' in table \'ScheduleReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduleReport.INSURANCE_TYPE_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORG_IDNull() {
                return this.IsNull(this.tableScheduleReport.ORG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORG_IDNull() {
                this[this.tableScheduleReport.ORG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAT_THAI_NAMENull() {
                return this.IsNull(this.tableScheduleReport.PAT_THAI_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAT_THAI_NAMENull() {
                this[this.tableScheduleReport.PAT_THAI_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAT_ENG_NAMENull() {
                return this.IsNull(this.tableScheduleReport.PAT_ENG_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAT_ENG_NAMENull() {
                this[this.tableScheduleReport.PAT_ENG_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPHONE1Null() {
                return this.IsNull(this.tableScheduleReport.PHONE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPHONE1Null() {
                this[this.tableScheduleReport.PHONE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tableScheduleReport.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOBNull() {
                this[this.tableScheduleReport.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXAM_UIDNull() {
                return this.IsNull(this.tableScheduleReport.EXAM_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXAM_UIDNull() {
                this[this.tableScheduleReport.EXAM_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRATENull() {
                return this.IsNull(this.tableScheduleReport.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRATENull() {
                this[this.tableScheduleReport.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLINIC_TYPE_TEXTNull() {
                return this.IsNull(this.tableScheduleReport.CLINIC_TYPE_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLINIC_TYPE_TEXTNull() {
                this[this.tableScheduleReport.CLINIC_TYPE_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMODALITY_NAMENull() {
                return this.IsNull(this.tableScheduleReport.MODALITY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMODALITY_NAMENull() {
                this[this.tableScheduleReport.MODALITY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATED_BYNull() {
                return this.IsNull(this.tableScheduleReport.CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATED_BYNull() {
                this[this.tableScheduleReport.CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATED_ONNull() {
                return this.IsNull(this.tableScheduleReport.CREATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATED_ONNull() {
                this[this.tableScheduleReport.CREATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINS_TEXTNull() {
                return this.IsNull(this.tableScheduleReport.INS_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINS_TEXTNull() {
                this[this.tableScheduleReport.INS_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXAM_TYPE_INSNull() {
                return this.IsNull(this.tableScheduleReport.EXAM_TYPE_INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXAM_TYPE_INSNull() {
                this[this.tableScheduleReport.EXAM_TYPE_INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHR_UNIT_INSNull() {
                return this.IsNull(this.tableScheduleReport.HR_UNIT_INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHR_UNIT_INSNull() {
                this[this.tableScheduleReport.HR_UNIT_INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIT_TITLENull() {
                return this.IsNull(this.tableScheduleReport.UNIT_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIT_TITLENull() {
                this[this.tableScheduleReport.UNIT_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIT_NAMENull() {
                return this.IsNull(this.tableScheduleReport.UNIT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIT_NAMENull() {
                this[this.tableScheduleReport.UNIT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAGENull() {
                return this.IsNull(this.tableScheduleReport.AGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAGENull() {
                this[this.tableScheduleReport.AGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGENDERNull() {
                return this.IsNull(this.tableScheduleReport.GENDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGENDERNull() {
                this[this.tableScheduleReport.GENDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLAIMABLE_AMTNull() {
                return this.IsNull(this.tableScheduleReport.CLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLAIMABLE_AMTNull() {
                this[this.tableScheduleReport.CLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONCLAIMABLE_AMTNull() {
                return this.IsNull(this.tableScheduleReport.NONCLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONCLAIMABLE_AMTNull() {
                this[this.tableScheduleReport.NONCLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROOM_UIDNull() {
                return this.IsNull(this.tableScheduleReport.ROOM_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROOM_UIDNull() {
                this[this.tableScheduleReport.ROOM_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSURANCE_TYPE_DESCNull() {
                return this.IsNull(this.tableScheduleReport.INSURANCE_TYPE_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSURANCE_TYPE_DESCNull() {
                this[this.tableScheduleReport.INSURANCE_TYPE_DESCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RIS_EXAMRow : global::System.Data.DataRow {
            
            private RIS_EXAMDataTable tableRIS_EXAM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RIS_EXAMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRIS_EXAM = ((RIS_EXAMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EXAM_ID {
                get {
                    return ((int)(this[this.tableRIS_EXAM.EXAM_IDColumn]));
                }
                set {
                    this[this.tableRIS_EXAM.EXAM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_UID {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.EXAM_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_UID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.EXAM_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GOVT_ID {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.GOVT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GOVT_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.GOVT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_NAME {
                get {
                    return ((string)(this[this.tableRIS_EXAM.EXAM_NAMEColumn]));
                }
                set {
                    this[this.tableRIS_EXAM.EXAM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REPORT_HEADER {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.REPORT_HEADERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPORT_HEADER\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.REPORT_HEADERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REQ_SAMPLE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.REQ_SAMPLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REQ_SAMPLE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.REQ_SAMPLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GOVT_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.GOVT_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GOVT_RATE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.GOVT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EXAM_TYPE {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.EXAM_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_TYPE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.EXAM_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SERVICE_TYPE {
                get {
                    return ((string)(this[this.tableRIS_EXAM.SERVICE_TYPEColumn]));
                }
                set {
                    this[this.tableRIS_EXAM.SERVICE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CLAIMABLE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.CLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLAIMABLE_AMT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.CLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONCLAIMABLE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.NONCLAIMABLE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NONCLAIMABLE_AMT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.NONCLAIMABLE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FREE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.FREE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FREE_AMT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.FREE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPECIAL_CLINIC {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.SPECIAL_CLINICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIAL_CLINIC\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.SPECIAL_CLINICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SPECIAL_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.SPECIAL_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIAL_RATE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.SPECIAL_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VAT_APPLICABLE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.VAT_APPLICABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_APPLICABLE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.VAT_APPLICABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VAT_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.VAT_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_RATE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.VAT_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UNIT_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.UNIT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.UNIT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int REV_HEAD_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.REV_HEAD_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REV_HEAD_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.REV_HEAD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_ACTIVE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_ACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_ACTIVE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVG_REQ_HRS {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.AVG_REQ_HRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVG_REQ_HRS\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.AVG_REQ_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MIN_REQ_HRS {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.MIN_REQ_HRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIN_REQ_HRS\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.MIN_REQ_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COST_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.COST_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COST_PRICE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.COST_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RELEASE_AUTH_LEVEL {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.RELEASE_AUTH_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RELEASE_AUTH_LEVEL\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.RELEASE_AUTH_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte FINALIZE_AUTH_LEVEL {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.FINALIZE_AUTH_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINALIZE_AUTH_LEVEL\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.FINALIZE_AUTH_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PREPARATION_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.PREPARATION_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPARATION_FLAG\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.PREPARATION_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PREPARATION_TAT {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.PREPARATION_TATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPARATION_TAT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.PREPARATION_TATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REPEAT_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.REPEAT_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPEAT_FLAG\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.REPEAT_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ICD_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.ICD_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.ICD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ACR_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.ACR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACR_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.ACR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CPT_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.CPT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPT_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.CPT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte DEF_CAPTURE {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.DEF_CAPTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEF_CAPTURE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.DEF_CAPTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte DEF_IMAGES {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.DEF_IMAGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEF_IMAGES\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.DEF_IMAGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_STRUCTURED_REPORT {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_STRUCTURED_REPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_STRUCTURED_REPORT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_STRUCTURED_REPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QA_REQUIRED {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.QA_REQUIREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QA_REQUIRED\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.QA_REQUIREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_UPDATED {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_UPDATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_UPDATED\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_UPDATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_DELETED {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_DELETEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_DELETED\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_DELETEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORG_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.ORG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORG_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.ORG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_BY\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CREATED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRIS_EXAM.CREATED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATED_ON\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.CREATED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LAST_MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.LAST_MODIFIED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_MODIFIED_BY\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.LAST_MODIFIED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LAST_MODIFIED_ON {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRIS_EXAM.LAST_MODIFIED_ONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_MODIFIED_ON\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.LAST_MODIFIED_ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BP_ID {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.BP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BP_ID\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.BP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool STAT_POSSIBLE {
                get {
                    try {
                        return ((bool)(this[this.tableRIS_EXAM.STAT_POSSIBLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STAT_POSSIBLE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.STAT_POSSIBLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte STAT_TAT_MIN {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.STAT_TAT_MINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STAT_TAT_MIN\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.STAT_TAT_MINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool URGENT_POSSIBLE {
                get {
                    try {
                        return ((bool)(this[this.tableRIS_EXAM.URGENT_POSSIBLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'URGENT_POSSIBLE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.URGENT_POSSIBLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte URGENT_TAT_MIN {
                get {
                    try {
                        return ((byte)(this[this.tableRIS_EXAM.URGENT_TAT_MINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'URGENT_TAT_MIN\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.URGENT_TAT_MINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEFER_HIS_RECONCILE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.DEFER_HIS_RECONCILEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEFER_HIS_RECONCILE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.DEFER_HIS_RECONCILEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_CHECKUP {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_CHECKUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_CHECKUP\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_CHECKUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VIP_RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.VIP_RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIP_RATE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.VIP_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DF_RAD {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.DF_RADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DF_RAD\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.DF_RADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DF_TECH {
                get {
                    try {
                        return ((decimal)(this[this.tableRIS_EXAM.DF_TECHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DF_TECH\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.DF_TECHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXAM_BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.EXAM_BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXAM_BARCODE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.EXAM_BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAN_REQONLINE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.CAN_REQONLINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAN_REQONLINE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.CAN_REQONLINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AVG_REQ_MIN {
                get {
                    try {
                        return ((int)(this[this.tableRIS_EXAM.AVG_REQ_MINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVG_REQ_MIN\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.AVG_REQ_MINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_BIRAD_REPORT {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_BIRAD_REPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_BIRAD_REPORT\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_BIRAD_REPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEED_SCHEDULE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.NEED_SCHEDULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEED_SCHEDULE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.NEED_SCHEDULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEED_APPROVE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.NEED_APPROVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEED_APPROVE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.NEED_APPROVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEED_SIDE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.NEED_SIDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEED_SIDE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.NEED_SIDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_CONSULT_CASE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_CONSULT_CASEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_CONSULT_CASE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_CONSULT_CASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_PORTABLE {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_PORTABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_PORTABLE\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_PORTABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableRIS_EXAM.IS_COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_COMMENTS\' in table \'RIS_EXAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRIS_EXAM.IS_COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXAM_UIDNull() {
                return this.IsNull(this.tableRIS_EXAM.EXAM_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXAM_UIDNull() {
                this[this.tableRIS_EXAM.EXAM_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGOVT_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.GOVT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGOVT_IDNull() {
                this[this.tableRIS_EXAM.GOVT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREPORT_HEADERNull() {
                return this.IsNull(this.tableRIS_EXAM.REPORT_HEADERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREPORT_HEADERNull() {
                this[this.tableRIS_EXAM.REPORT_HEADERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREQ_SAMPLENull() {
                return this.IsNull(this.tableRIS_EXAM.REQ_SAMPLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREQ_SAMPLENull() {
                this[this.tableRIS_EXAM.REQ_SAMPLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRATENull() {
                return this.IsNull(this.tableRIS_EXAM.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRATENull() {
                this[this.tableRIS_EXAM.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGOVT_RATENull() {
                return this.IsNull(this.tableRIS_EXAM.GOVT_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGOVT_RATENull() {
                this[this.tableRIS_EXAM.GOVT_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXAM_TYPENull() {
                return this.IsNull(this.tableRIS_EXAM.EXAM_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXAM_TYPENull() {
                this[this.tableRIS_EXAM.EXAM_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLAIMABLE_AMTNull() {
                return this.IsNull(this.tableRIS_EXAM.CLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLAIMABLE_AMTNull() {
                this[this.tableRIS_EXAM.CLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONCLAIMABLE_AMTNull() {
                return this.IsNull(this.tableRIS_EXAM.NONCLAIMABLE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONCLAIMABLE_AMTNull() {
                this[this.tableRIS_EXAM.NONCLAIMABLE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFREE_AMTNull() {
                return this.IsNull(this.tableRIS_EXAM.FREE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFREE_AMTNull() {
                this[this.tableRIS_EXAM.FREE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPECIAL_CLINICNull() {
                return this.IsNull(this.tableRIS_EXAM.SPECIAL_CLINICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPECIAL_CLINICNull() {
                this[this.tableRIS_EXAM.SPECIAL_CLINICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPECIAL_RATENull() {
                return this.IsNull(this.tableRIS_EXAM.SPECIAL_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPECIAL_RATENull() {
                this[this.tableRIS_EXAM.SPECIAL_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_APPLICABLENull() {
                return this.IsNull(this.tableRIS_EXAM.VAT_APPLICABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_APPLICABLENull() {
                this[this.tableRIS_EXAM.VAT_APPLICABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVAT_RATENull() {
                return this.IsNull(this.tableRIS_EXAM.VAT_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVAT_RATENull() {
                this[this.tableRIS_EXAM.VAT_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIT_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.UNIT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIT_IDNull() {
                this[this.tableRIS_EXAM.UNIT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREV_HEAD_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.REV_HEAD_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREV_HEAD_IDNull() {
                this[this.tableRIS_EXAM.REV_HEAD_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_ACTIVENull() {
                return this.IsNull(this.tableRIS_EXAM.IS_ACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_ACTIVENull() {
                this[this.tableRIS_EXAM.IS_ACTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVG_REQ_HRSNull() {
                return this.IsNull(this.tableRIS_EXAM.AVG_REQ_HRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVG_REQ_HRSNull() {
                this[this.tableRIS_EXAM.AVG_REQ_HRSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMIN_REQ_HRSNull() {
                return this.IsNull(this.tableRIS_EXAM.MIN_REQ_HRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMIN_REQ_HRSNull() {
                this[this.tableRIS_EXAM.MIN_REQ_HRSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOST_PRICENull() {
                return this.IsNull(this.tableRIS_EXAM.COST_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOST_PRICENull() {
                this[this.tableRIS_EXAM.COST_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRELEASE_AUTH_LEVELNull() {
                return this.IsNull(this.tableRIS_EXAM.RELEASE_AUTH_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRELEASE_AUTH_LEVELNull() {
                this[this.tableRIS_EXAM.RELEASE_AUTH_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINALIZE_AUTH_LEVELNull() {
                return this.IsNull(this.tableRIS_EXAM.FINALIZE_AUTH_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINALIZE_AUTH_LEVELNull() {
                this[this.tableRIS_EXAM.FINALIZE_AUTH_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPREPARATION_FLAGNull() {
                return this.IsNull(this.tableRIS_EXAM.PREPARATION_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPREPARATION_FLAGNull() {
                this[this.tableRIS_EXAM.PREPARATION_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPREPARATION_TATNull() {
                return this.IsNull(this.tableRIS_EXAM.PREPARATION_TATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPREPARATION_TATNull() {
                this[this.tableRIS_EXAM.PREPARATION_TATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREPEAT_FLAGNull() {
                return this.IsNull(this.tableRIS_EXAM.REPEAT_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREPEAT_FLAGNull() {
                this[this.tableRIS_EXAM.REPEAT_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICD_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.ICD_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICD_IDNull() {
                this[this.tableRIS_EXAM.ICD_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACR_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.ACR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACR_IDNull() {
                this[this.tableRIS_EXAM.ACR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCPT_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.CPT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCPT_IDNull() {
                this[this.tableRIS_EXAM.CPT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEF_CAPTURENull() {
                return this.IsNull(this.tableRIS_EXAM.DEF_CAPTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEF_CAPTURENull() {
                this[this.tableRIS_EXAM.DEF_CAPTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEF_IMAGESNull() {
                return this.IsNull(this.tableRIS_EXAM.DEF_IMAGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEF_IMAGESNull() {
                this[this.tableRIS_EXAM.DEF_IMAGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_STRUCTURED_REPORTNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_STRUCTURED_REPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_STRUCTURED_REPORTNull() {
                this[this.tableRIS_EXAM.IS_STRUCTURED_REPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQA_REQUIREDNull() {
                return this.IsNull(this.tableRIS_EXAM.QA_REQUIREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQA_REQUIREDNull() {
                this[this.tableRIS_EXAM.QA_REQUIREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_UPDATEDNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_UPDATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_UPDATEDNull() {
                this[this.tableRIS_EXAM.IS_UPDATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_DELETEDNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_DELETEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_DELETEDNull() {
                this[this.tableRIS_EXAM.IS_DELETEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORG_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.ORG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORG_IDNull() {
                this[this.tableRIS_EXAM.ORG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATED_BYNull() {
                return this.IsNull(this.tableRIS_EXAM.CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATED_BYNull() {
                this[this.tableRIS_EXAM.CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATED_ONNull() {
                return this.IsNull(this.tableRIS_EXAM.CREATED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATED_ONNull() {
                this[this.tableRIS_EXAM.CREATED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLAST_MODIFIED_BYNull() {
                return this.IsNull(this.tableRIS_EXAM.LAST_MODIFIED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLAST_MODIFIED_BYNull() {
                this[this.tableRIS_EXAM.LAST_MODIFIED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLAST_MODIFIED_ONNull() {
                return this.IsNull(this.tableRIS_EXAM.LAST_MODIFIED_ONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLAST_MODIFIED_ONNull() {
                this[this.tableRIS_EXAM.LAST_MODIFIED_ONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBP_IDNull() {
                return this.IsNull(this.tableRIS_EXAM.BP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBP_IDNull() {
                this[this.tableRIS_EXAM.BP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTAT_POSSIBLENull() {
                return this.IsNull(this.tableRIS_EXAM.STAT_POSSIBLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTAT_POSSIBLENull() {
                this[this.tableRIS_EXAM.STAT_POSSIBLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTAT_TAT_MINNull() {
                return this.IsNull(this.tableRIS_EXAM.STAT_TAT_MINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTAT_TAT_MINNull() {
                this[this.tableRIS_EXAM.STAT_TAT_MINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsURGENT_POSSIBLENull() {
                return this.IsNull(this.tableRIS_EXAM.URGENT_POSSIBLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetURGENT_POSSIBLENull() {
                this[this.tableRIS_EXAM.URGENT_POSSIBLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsURGENT_TAT_MINNull() {
                return this.IsNull(this.tableRIS_EXAM.URGENT_TAT_MINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetURGENT_TAT_MINNull() {
                this[this.tableRIS_EXAM.URGENT_TAT_MINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEFER_HIS_RECONCILENull() {
                return this.IsNull(this.tableRIS_EXAM.DEFER_HIS_RECONCILEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEFER_HIS_RECONCILENull() {
                this[this.tableRIS_EXAM.DEFER_HIS_RECONCILEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_CHECKUPNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_CHECKUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_CHECKUPNull() {
                this[this.tableRIS_EXAM.IS_CHECKUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIP_RATENull() {
                return this.IsNull(this.tableRIS_EXAM.VIP_RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIP_RATENull() {
                this[this.tableRIS_EXAM.VIP_RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDF_RADNull() {
                return this.IsNull(this.tableRIS_EXAM.DF_RADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDF_RADNull() {
                this[this.tableRIS_EXAM.DF_RADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDF_TECHNull() {
                return this.IsNull(this.tableRIS_EXAM.DF_TECHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDF_TECHNull() {
                this[this.tableRIS_EXAM.DF_TECHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXAM_BARCODENull() {
                return this.IsNull(this.tableRIS_EXAM.EXAM_BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXAM_BARCODENull() {
                this[this.tableRIS_EXAM.EXAM_BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCAN_REQONLINENull() {
                return this.IsNull(this.tableRIS_EXAM.CAN_REQONLINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCAN_REQONLINENull() {
                this[this.tableRIS_EXAM.CAN_REQONLINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVG_REQ_MINNull() {
                return this.IsNull(this.tableRIS_EXAM.AVG_REQ_MINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVG_REQ_MINNull() {
                this[this.tableRIS_EXAM.AVG_REQ_MINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_BIRAD_REPORTNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_BIRAD_REPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_BIRAD_REPORTNull() {
                this[this.tableRIS_EXAM.IS_BIRAD_REPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEED_SCHEDULENull() {
                return this.IsNull(this.tableRIS_EXAM.NEED_SCHEDULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEED_SCHEDULENull() {
                this[this.tableRIS_EXAM.NEED_SCHEDULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEED_APPROVENull() {
                return this.IsNull(this.tableRIS_EXAM.NEED_APPROVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEED_APPROVENull() {
                this[this.tableRIS_EXAM.NEED_APPROVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEED_SIDENull() {
                return this.IsNull(this.tableRIS_EXAM.NEED_SIDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEED_SIDENull() {
                this[this.tableRIS_EXAM.NEED_SIDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_CONSULT_CASENull() {
                return this.IsNull(this.tableRIS_EXAM.IS_CONSULT_CASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_CONSULT_CASENull() {
                this[this.tableRIS_EXAM.IS_CONSULT_CASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_PORTABLENull() {
                return this.IsNull(this.tableRIS_EXAM.IS_PORTABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_PORTABLENull() {
                this[this.tableRIS_EXAM.IS_PORTABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_COMMENTSNull() {
                return this.IsNull(this.tableRIS_EXAM.IS_COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_COMMENTSNull() {
                this[this.tableRIS_EXAM.IS_COMMENTSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ScheduleReportRowChangeEvent : global::System.EventArgs {
            
            private ScheduleReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRowChangeEvent(ScheduleReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScheduleReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RIS_EXAMRowChangeEvent : global::System.EventArgs {
            
            private RIS_EXAMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRowChangeEvent(RIS_EXAMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RIS_EXAMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EnvisionOnline.ReportViewer.Data.dsScheduleDataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ScheduleReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ScheduleReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ScheduleReport";
            tableMapping.ColumnMappings.Add("ORG_ID", "ORG_ID");
            tableMapping.ColumnMappings.Add("HN", "HN");
            tableMapping.ColumnMappings.Add("PAT_THAI_NAME", "PAT_THAI_NAME");
            tableMapping.ColumnMappings.Add("PAT_ENG_NAME", "PAT_ENG_NAME");
            tableMapping.ColumnMappings.Add("PHONE1", "PHONE1");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("EXAM_UID", "EXAM_UID");
            tableMapping.ColumnMappings.Add("EXAM_NAME", "EXAM_NAME");
            tableMapping.ColumnMappings.Add("APPOINT_DT", "APPOINT_DT");
            tableMapping.ColumnMappings.Add("RATE", "RATE");
            tableMapping.ColumnMappings.Add("CLINIC_TYPE_TEXT", "CLINIC_TYPE_TEXT");
            tableMapping.ColumnMappings.Add("MODALITY_NAME", "MODALITY_NAME");
            tableMapping.ColumnMappings.Add("CREATED_BY", "CREATED_BY");
            tableMapping.ColumnMappings.Add("CREATED_ON", "CREATED_ON");
            tableMapping.ColumnMappings.Add("MODALITY_ID", "MODALITY_ID");
            tableMapping.ColumnMappings.Add("INS_TEXT", "INS_TEXT");
            tableMapping.ColumnMappings.Add("EXAM_TYPE_INS", "EXAM_TYPE_INS");
            tableMapping.ColumnMappings.Add("HR_UNIT_INS", "HR_UNIT_INS");
            tableMapping.ColumnMappings.Add("UNIT_TITLE", "UNIT_TITLE");
            tableMapping.ColumnMappings.Add("UNIT_NAME", "UNIT_NAME");
            tableMapping.ColumnMappings.Add("AGE", "AGE");
            tableMapping.ColumnMappings.Add("GENDER", "GENDER");
            tableMapping.ColumnMappings.Add("CLAIMABLE_AMT", "CLAIMABLE_AMT");
            tableMapping.ColumnMappings.Add("NONCLAIMABLE_AMT", "NONCLAIMABLE_AMT");
            tableMapping.ColumnMappings.Add("ROOM_UID", "ROOM_UID");
            tableMapping.ColumnMappings.Add("INSURANCE_TYPE_DESC", "INSURANCE_TYPE_DESC");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["RIS_RAMAConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\nSELECT\ttop  2\tRIS_SCHEDULE.ORG_ID\r\n\t\t\t, HIS_REGISTRATION.HN\r\n\t\t\t, dbo.fnGetHISR" +
                "egistrationFullName(RIS_SCHEDULE.REG_ID,1) AS PAT_THAI_NAME\r\n\t\t\t, dbo.fnGetHISRe" +
                "gistrationFullName(RIS_SCHEDULE.REG_ID,0) AS PAT_ENG_NAME\r\n\t\t\t\t\t, HIS_REGISTRATI" +
                "ON.PHONE1\r\n\t\t\t\t\t, HIS_REGISTRATION.DOB\r\n\t\t\t\t\t, RIS_EXAM.EXAM_UID\r\n\t\t\t\t\t, RIS_EXA" +
                "M.EXAM_NAME\r\n\t\t\t\t\t, RIS_SCHEDULE.START_DATETIME as APPOINT_DT\r\n\t\t\t\t\t, CASE isnul" +
                "l(RIS_SCHEDULEDTL.QTY,0)\r\n\t\t\t\t\t\t\tWHEN 0 THEN 1*RIS_SCHEDULEDTL.RATE\r\n\t\t\t\t\t\t\tELSE" +
                "\r\n\t\t\t\t\t\t\t\tRIS_SCHEDULEDTL.QTY * RIS_SCHEDULEDTL.RATE\r\n\t\t\t\t\t  END as RATE \r\n\t\t\t\t\t" +
                ", \'Clinic : \'+RIS_CLINICTYPE.CLINIC_TYPE_TEXT + \' Ward : \'+dbo.fnGetUnitUID(RIS_" +
                "SCHEDULE.REF_UNIT) as [CLINIC_TYPE_TEXT]\r\n\t\t\t\t\t, RIS_MODALITY.MODALITY_NAME\r\n\t\t\t" +
                "\t\t, dbo.fnGetEmpThaiName(RIS_SCHEDULE.CREATED_BY) AS CREATED_BY\r\n\t\t\t\t\t, RIS_SCHE" +
                "DULE.CREATED_ON\r\n\t\t\t\t\t\r\n\t\t\t\t\t, RIS_MODALITY.MODALITY_ID\r\n\t\t\t\t\t--, RIS_EXAMINSTRU" +
                "CTIONS.INS_TEXT\r\n\t\t\t\t\t,CASE \r\n\t\t\t\t\t\twhen RIS_SCHEDULEDTL.EXAM_ID in (967,968,969" +
                ",985) then dbo.fnGetScheduleReportWithClinicSession(RIS_SCHEDULEDTL.EXAM_ID,RIS_" +
                "SCHEDULE.SESSION_ID,DATEDIFF(YEAR,DOB,RIS_SCHEDULE.START_DATETIME))\r\n\t\t\t\t\t\telse " +
                "RIS_EXAMINSTRUCTIONS.INS_TEXT\r\n\t\t\t\t\tEND as [INS_TEXT]\t\r\n\t\t\t\t\t, CASE isnull(dated" +
                "iff(yyyy, getdate(), HIS_REGISTRATION.DOB), 0) \r\n\t\t\t\t\t\t\t\t\t\t  WHEN 0 THEN RIS_EXA" +
                "MTYPE.EXAM_TYPE_INS_KID WHEN 1 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID WHEN 2 THEN R" +
                "IS_EXAMTYPE.EXAM_TYPE_INS_KID\r\n\t\t\t\t\t\t\t\t\t\t   WHEN 3 THEN RIS_EXAMTYPE.EXAM_TYPE_I" +
                "NS_KID WHEN 4 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID WHEN 5 THEN RIS_EXAMTYPE.EXAM_" +
                "TYPE_INS_KID\r\n\t\t\t\t\t\t\t\t\t\t   WHEN 6 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID WHEN 7 THE" +
                "N RIS_EXAMTYPE.EXAM_TYPE_INS_KID WHEN 8 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID\r\n\t\t\t" +
                "\t\t\t\t\t\t\t   WHEN 9 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID WHEN 10 THEN RIS_EXAMTYPE.E" +
                "XAM_TYPE_INS_KID WHEN 11 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID\r\n\t\t\t\t\t\t\t\t\t\t   WHEN " +
                "12 THEN RIS_EXAMTYPE.EXAM_TYPE_INS_KID ELSE RIS_EXAMTYPE.EXAM_TYPE_INS END AS EX" +
                "AM_TYPE_INS\r\n\t\t\t\t\t, HR_UNIT_EXAM.UNIT_INS AS HR_UNIT_INS\r\n\t\t\t\t\t, HR_UNIT.UNIT_NA" +
                "ME AS UNIT_TITLE\r\n\t\t\t\t\t, dbo.fnGetUnitUID(RIS_SCHEDULE.REF_UNIT) AS [UNIT_NAME]\r" +
                "\n\t\t\t\t\t, N\'อายุ : \'+dbo.fnGetAge(HIS_REGISTRATION.DOB, 1) AS [AGE]\r\n\t\t\t\t\t, N\'เพศ " +
                ": \'+ case when HIS_REGISTRATION.GENDER=\'M\' then N\'ช\'\r\n\t\t\t\t\t\t\t\t\t when HIS_REGISTR" +
                "ATION.GENDER=\'F\' then N\'ญ\'\r\n\t\t\t\t\t\t\t\t\t else N\'อื่นๆ\' end as [GENDER]\r\n\t\t\t\t\t, RIS_" +
                "EXAM.CLAIMABLE_AMT\r\n\t\t\t\t\t, RIS_EXAM.NONCLAIMABLE_AMT\r\n\t\t\t\t\t, HR_ROOM.ROOM_UID\r\n\t" +
                "\t\t\t\t, dbo.fnGetInsuranceTypeName(RIS_SCHEDULE.INSURANCE_TYPE_ID) AS INSURANCE_TY" +
                "PE_DESC\r\n--SELECT     *\r\nFROM         HR_ROOM INNER JOIN\r\n                      " +
                "RIS_SCHEDULE INNER JOIN\r\n                      RIS_SCHEDULEDTL ON RIS_SCHEDULE.S" +
                "CHEDULE_ID = RIS_SCHEDULEDTL.SCHEDULE_ID INNER JOIN\r\n                      RIS_E" +
                "XAM ON RIS_SCHEDULEDTL.EXAM_ID = RIS_EXAM.EXAM_ID INNER JOIN\r\n                  " +
                "    HIS_REGISTRATION ON RIS_SCHEDULE.REG_ID = HIS_REGISTRATION.REG_ID LEFT OUTER" +
                " JOIN\r\n                      HR_UNIT ON RIS_SCHEDULE.REF_UNIT = HR_UNIT.UNIT_ID " +
                "INNER JOIN\r\n                      RIS_MODALITY ON RIS_SCHEDULE.MODALITY_ID = RIS" +
                "_MODALITY.MODALITY_ID ON HR_ROOM.ROOM_ID = RIS_MODALITY.ROOM_ID LEFT OUTER JOIN\r" +
                "\n                      HR_UNIT AS HR_UNIT_EXAM ON RIS_EXAM.UNIT_ID = HR_UNIT_EXA" +
                "M.UNIT_ID LEFT OUTER JOIN\r\n                      RIS_CLINICSESSION RIGHT OUTER J" +
                "OIN\r\n                      RIS_CLINICTYPE ON RIS_CLINICSESSION.CLINIC_TYPE_ID = " +
                "RIS_CLINICTYPE.CLINIC_TYPE_ID ON \r\n                      RIS_SCHEDULE.SESSION_ID" +
                " = RIS_CLINICSESSION.SESSION_ID LEFT OUTER JOIN\r\n                      RIS_EXAMT" +
                "YPE ON RIS_EXAM.EXAM_TYPE = RIS_EXAMTYPE.EXAM_TYPE_ID LEFT OUTER JOIN\r\n         " +
                "             RIS_EXAMINSTRUCTIONS ON RIS_EXAM.EXAM_ID = RIS_EXAMINSTRUCTIONS.EXA" +
                "M_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsScheduleData.ScheduleReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsScheduleData.ScheduleReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsScheduleData.ScheduleReportDataTable dataTable = new dsScheduleData.ScheduleReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RIS_EXAMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RIS_EXAMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RIS_EXAM";
            tableMapping.ColumnMappings.Add("EXAM_ID", "EXAM_ID");
            tableMapping.ColumnMappings.Add("EXAM_UID", "EXAM_UID");
            tableMapping.ColumnMappings.Add("GOVT_ID", "GOVT_ID");
            tableMapping.ColumnMappings.Add("EXAM_NAME", "EXAM_NAME");
            tableMapping.ColumnMappings.Add("REPORT_HEADER", "REPORT_HEADER");
            tableMapping.ColumnMappings.Add("REQ_SAMPLE", "REQ_SAMPLE");
            tableMapping.ColumnMappings.Add("RATE", "RATE");
            tableMapping.ColumnMappings.Add("GOVT_RATE", "GOVT_RATE");
            tableMapping.ColumnMappings.Add("EXAM_TYPE", "EXAM_TYPE");
            tableMapping.ColumnMappings.Add("SERVICE_TYPE", "SERVICE_TYPE");
            tableMapping.ColumnMappings.Add("CLAIMABLE_AMT", "CLAIMABLE_AMT");
            tableMapping.ColumnMappings.Add("NONCLAIMABLE_AMT", "NONCLAIMABLE_AMT");
            tableMapping.ColumnMappings.Add("FREE_AMT", "FREE_AMT");
            tableMapping.ColumnMappings.Add("SPECIAL_CLINIC", "SPECIAL_CLINIC");
            tableMapping.ColumnMappings.Add("SPECIAL_RATE", "SPECIAL_RATE");
            tableMapping.ColumnMappings.Add("VAT_APPLICABLE", "VAT_APPLICABLE");
            tableMapping.ColumnMappings.Add("VAT_RATE", "VAT_RATE");
            tableMapping.ColumnMappings.Add("UNIT_ID", "UNIT_ID");
            tableMapping.ColumnMappings.Add("REV_HEAD_ID", "REV_HEAD_ID");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("AVG_REQ_HRS", "AVG_REQ_HRS");
            tableMapping.ColumnMappings.Add("MIN_REQ_HRS", "MIN_REQ_HRS");
            tableMapping.ColumnMappings.Add("COST_PRICE", "COST_PRICE");
            tableMapping.ColumnMappings.Add("RELEASE_AUTH_LEVEL", "RELEASE_AUTH_LEVEL");
            tableMapping.ColumnMappings.Add("FINALIZE_AUTH_LEVEL", "FINALIZE_AUTH_LEVEL");
            tableMapping.ColumnMappings.Add("PREPARATION_FLAG", "PREPARATION_FLAG");
            tableMapping.ColumnMappings.Add("PREPARATION_TAT", "PREPARATION_TAT");
            tableMapping.ColumnMappings.Add("REPEAT_FLAG", "REPEAT_FLAG");
            tableMapping.ColumnMappings.Add("ICD_ID", "ICD_ID");
            tableMapping.ColumnMappings.Add("ACR_ID", "ACR_ID");
            tableMapping.ColumnMappings.Add("CPT_ID", "CPT_ID");
            tableMapping.ColumnMappings.Add("DEF_CAPTURE", "DEF_CAPTURE");
            tableMapping.ColumnMappings.Add("DEF_IMAGES", "DEF_IMAGES");
            tableMapping.ColumnMappings.Add("IS_STRUCTURED_REPORT", "IS_STRUCTURED_REPORT");
            tableMapping.ColumnMappings.Add("QA_REQUIRED", "QA_REQUIRED");
            tableMapping.ColumnMappings.Add("IS_UPDATED", "IS_UPDATED");
            tableMapping.ColumnMappings.Add("IS_DELETED", "IS_DELETED");
            tableMapping.ColumnMappings.Add("ORG_ID", "ORG_ID");
            tableMapping.ColumnMappings.Add("CREATED_BY", "CREATED_BY");
            tableMapping.ColumnMappings.Add("CREATED_ON", "CREATED_ON");
            tableMapping.ColumnMappings.Add("LAST_MODIFIED_BY", "LAST_MODIFIED_BY");
            tableMapping.ColumnMappings.Add("LAST_MODIFIED_ON", "LAST_MODIFIED_ON");
            tableMapping.ColumnMappings.Add("BP_ID", "BP_ID");
            tableMapping.ColumnMappings.Add("STAT_POSSIBLE", "STAT_POSSIBLE");
            tableMapping.ColumnMappings.Add("STAT_TAT_MIN", "STAT_TAT_MIN");
            tableMapping.ColumnMappings.Add("URGENT_POSSIBLE", "URGENT_POSSIBLE");
            tableMapping.ColumnMappings.Add("URGENT_TAT_MIN", "URGENT_TAT_MIN");
            tableMapping.ColumnMappings.Add("DEFER_HIS_RECONCILE", "DEFER_HIS_RECONCILE");
            tableMapping.ColumnMappings.Add("IS_CHECKUP", "IS_CHECKUP");
            tableMapping.ColumnMappings.Add("VIP_RATE", "VIP_RATE");
            tableMapping.ColumnMappings.Add("DF_RAD", "DF_RAD");
            tableMapping.ColumnMappings.Add("DF_TECH", "DF_TECH");
            tableMapping.ColumnMappings.Add("EXAM_BARCODE", "EXAM_BARCODE");
            tableMapping.ColumnMappings.Add("CAN_REQONLINE", "CAN_REQONLINE");
            tableMapping.ColumnMappings.Add("AVG_REQ_MIN", "AVG_REQ_MIN");
            tableMapping.ColumnMappings.Add("IS_BIRAD_REPORT", "IS_BIRAD_REPORT");
            tableMapping.ColumnMappings.Add("NEED_SCHEDULE", "NEED_SCHEDULE");
            tableMapping.ColumnMappings.Add("NEED_APPROVE", "NEED_APPROVE");
            tableMapping.ColumnMappings.Add("NEED_SIDE", "NEED_SIDE");
            tableMapping.ColumnMappings.Add("IS_CONSULT_CASE", "IS_CONSULT_CASE");
            tableMapping.ColumnMappings.Add("IS_PORTABLE", "IS_PORTABLE");
            tableMapping.ColumnMappings.Add("IS_COMMENTS", "IS_COMMENTS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ris_exam] WHERE (([EXAM_ID] = @Original_EXAM_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXAM_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ris_exam] ([EXAM_UID], [GOVT_ID], [EXAM_NAME], [REPORT_HEADER], [REQ" +
                "_SAMPLE], [RATE], [GOVT_RATE], [EXAM_TYPE], [SERVICE_TYPE], [CLAIMABLE_AMT], [NO" +
                "NCLAIMABLE_AMT], [FREE_AMT], [SPECIAL_CLINIC], [SPECIAL_RATE], [VAT_APPLICABLE]," +
                " [VAT_RATE], [UNIT_ID], [REV_HEAD_ID], [IS_ACTIVE], [AVG_REQ_HRS], [MIN_REQ_HRS]" +
                ", [COST_PRICE], [RELEASE_AUTH_LEVEL], [FINALIZE_AUTH_LEVEL], [PREPARATION_FLAG]," +
                " [PREPARATION_TAT], [REPEAT_FLAG], [ICD_ID], [ACR_ID], [CPT_ID], [DEF_CAPTURE], " +
                "[DEF_IMAGES], [IS_STRUCTURED_REPORT], [QA_REQUIRED], [IS_UPDATED], [IS_DELETED]," +
                " [ORG_ID], [CREATED_BY], [CREATED_ON], [LAST_MODIFIED_BY], [LAST_MODIFIED_ON], [" +
                "BP_ID], [STAT_POSSIBLE], [STAT_TAT_MIN], [URGENT_POSSIBLE], [URGENT_TAT_MIN], [D" +
                "EFER_HIS_RECONCILE], [IS_CHECKUP], [VIP_RATE], [DF_RAD], [DF_TECH], [EXAM_BARCOD" +
                "E], [CAN_REQONLINE], [AVG_REQ_MIN], [IS_BIRAD_REPORT], [NEED_SCHEDULE], [NEED_AP" +
                "PROVE], [NEED_SIDE], [IS_CONSULT_CASE], [IS_PORTABLE], [IS_COMMENTS]) VALUES (@E" +
                "XAM_UID, @GOVT_ID, @EXAM_NAME, @REPORT_HEADER, @REQ_SAMPLE, @RATE, @GOVT_RATE, @" +
                "EXAM_TYPE, @SERVICE_TYPE, @CLAIMABLE_AMT, @NONCLAIMABLE_AMT, @FREE_AMT, @SPECIAL" +
                "_CLINIC, @SPECIAL_RATE, @VAT_APPLICABLE, @VAT_RATE, @UNIT_ID, @REV_HEAD_ID, @IS_" +
                "ACTIVE, @AVG_REQ_HRS, @MIN_REQ_HRS, @COST_PRICE, @RELEASE_AUTH_LEVEL, @FINALIZE_" +
                "AUTH_LEVEL, @PREPARATION_FLAG, @PREPARATION_TAT, @REPEAT_FLAG, @ICD_ID, @ACR_ID," +
                " @CPT_ID, @DEF_CAPTURE, @DEF_IMAGES, @IS_STRUCTURED_REPORT, @QA_REQUIRED, @IS_UP" +
                "DATED, @IS_DELETED, @ORG_ID, @CREATED_BY, @CREATED_ON, @LAST_MODIFIED_BY, @LAST_" +
                "MODIFIED_ON, @BP_ID, @STAT_POSSIBLE, @STAT_TAT_MIN, @URGENT_POSSIBLE, @URGENT_TA" +
                "T_MIN, @DEFER_HIS_RECONCILE, @IS_CHECKUP, @VIP_RATE, @DF_RAD, @DF_TECH, @EXAM_BA" +
                "RCODE, @CAN_REQONLINE, @AVG_REQ_MIN, @IS_BIRAD_REPORT, @NEED_SCHEDULE, @NEED_APP" +
                "ROVE, @NEED_SIDE, @IS_CONSULT_CASE, @IS_PORTABLE, @IS_COMMENTS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_UID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_UID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REPORT_HEADER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REPORT_HEADER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REQ_SAMPLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REQ_SAMPLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 13, 2, "RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVT_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GOVT_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLAIMABLE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CLAIMABLE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONCLAIMABLE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "NONCLAIMABLE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FREE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "FREE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL_CLINIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_CLINIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_APPLICABLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_APPLICABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "VAT_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REV_HEAD_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REV_HEAD_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_ACTIVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_ACTIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVG_REQ_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "AVG_REQ_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_REQ_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "MIN_REQ_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COST_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "COST_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RELEASE_AUTH_LEVEL", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RELEASE_AUTH_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINALIZE_AUTH_LEVEL", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINALIZE_AUTH_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPARATION_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPARATION_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPARATION_TAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "PREPARATION_TAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REPEAT_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REPEAT_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICD_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICD_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_CAPTURE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_CAPTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_IMAGES", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_IMAGES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_STRUCTURED_REPORT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_STRUCTURED_REPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QA_REQUIRED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QA_REQUIRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_UPDATED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_UPDATED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_DELETED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_DELETED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORG_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATED_BY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATED_BY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATED_ON", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATED_ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_MODIFIED_BY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_MODIFIED_BY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_MODIFIED_ON", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_MODIFIED_ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_POSSIBLE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_POSSIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_TAT_MIN", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_TAT_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@URGENT_POSSIBLE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "URGENT_POSSIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@URGENT_TAT_MIN", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "URGENT_TAT_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFER_HIS_RECONCILE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFER_HIS_RECONCILE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_CHECKUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_CHECKUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VIP_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF_RAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DF_RAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF_TECH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DF_TECH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_BARCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_BARCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAN_REQONLINE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAN_REQONLINE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVG_REQ_MIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AVG_REQ_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_BIRAD_REPORT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_BIRAD_REPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_SCHEDULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_SCHEDULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_APPROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_APPROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_SIDE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_SIDE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_CONSULT_CASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_CONSULT_CASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_PORTABLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_PORTABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_COMMENTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_COMMENTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ris_exam] SET [EXAM_UID] = @EXAM_UID, [GOVT_ID] = @GOVT_ID, [EXAM_NAME] =" +
                " @EXAM_NAME, [REPORT_HEADER] = @REPORT_HEADER, [REQ_SAMPLE] = @REQ_SAMPLE, [RATE" +
                "] = @RATE, [GOVT_RATE] = @GOVT_RATE, [EXAM_TYPE] = @EXAM_TYPE, [SERVICE_TYPE] = " +
                "@SERVICE_TYPE, [CLAIMABLE_AMT] = @CLAIMABLE_AMT, [NONCLAIMABLE_AMT] = @NONCLAIMA" +
                "BLE_AMT, [FREE_AMT] = @FREE_AMT, [SPECIAL_CLINIC] = @SPECIAL_CLINIC, [SPECIAL_RA" +
                "TE] = @SPECIAL_RATE, [VAT_APPLICABLE] = @VAT_APPLICABLE, [VAT_RATE] = @VAT_RATE," +
                " [UNIT_ID] = @UNIT_ID, [REV_HEAD_ID] = @REV_HEAD_ID, [IS_ACTIVE] = @IS_ACTIVE, [" +
                "AVG_REQ_HRS] = @AVG_REQ_HRS, [MIN_REQ_HRS] = @MIN_REQ_HRS, [COST_PRICE] = @COST_" +
                "PRICE, [RELEASE_AUTH_LEVEL] = @RELEASE_AUTH_LEVEL, [FINALIZE_AUTH_LEVEL] = @FINA" +
                "LIZE_AUTH_LEVEL, [PREPARATION_FLAG] = @PREPARATION_FLAG, [PREPARATION_TAT] = @PR" +
                "EPARATION_TAT, [REPEAT_FLAG] = @REPEAT_FLAG, [ICD_ID] = @ICD_ID, [ACR_ID] = @ACR" +
                "_ID, [CPT_ID] = @CPT_ID, [DEF_CAPTURE] = @DEF_CAPTURE, [DEF_IMAGES] = @DEF_IMAGE" +
                "S, [IS_STRUCTURED_REPORT] = @IS_STRUCTURED_REPORT, [QA_REQUIRED] = @QA_REQUIRED," +
                " [IS_UPDATED] = @IS_UPDATED, [IS_DELETED] = @IS_DELETED, [ORG_ID] = @ORG_ID, [CR" +
                "EATED_BY] = @CREATED_BY, [CREATED_ON] = @CREATED_ON, [LAST_MODIFIED_BY] = @LAST_" +
                "MODIFIED_BY, [LAST_MODIFIED_ON] = @LAST_MODIFIED_ON, [BP_ID] = @BP_ID, [STAT_POS" +
                "SIBLE] = @STAT_POSSIBLE, [STAT_TAT_MIN] = @STAT_TAT_MIN, [URGENT_POSSIBLE] = @UR" +
                "GENT_POSSIBLE, [URGENT_TAT_MIN] = @URGENT_TAT_MIN, [DEFER_HIS_RECONCILE] = @DEFE" +
                "R_HIS_RECONCILE, [IS_CHECKUP] = @IS_CHECKUP, [VIP_RATE] = @VIP_RATE, [DF_RAD] = " +
                "@DF_RAD, [DF_TECH] = @DF_TECH, [EXAM_BARCODE] = @EXAM_BARCODE, [CAN_REQONLINE] =" +
                " @CAN_REQONLINE, [AVG_REQ_MIN] = @AVG_REQ_MIN, [IS_BIRAD_REPORT] = @IS_BIRAD_REP" +
                "ORT, [NEED_SCHEDULE] = @NEED_SCHEDULE, [NEED_APPROVE] = @NEED_APPROVE, [NEED_SID" +
                "E] = @NEED_SIDE, [IS_CONSULT_CASE] = @IS_CONSULT_CASE, [IS_PORTABLE] = @IS_PORTA" +
                "BLE, [IS_COMMENTS] = @IS_COMMENTS WHERE (([EXAM_ID] = @Original_EXAM_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_UID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_UID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REPORT_HEADER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REPORT_HEADER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REQ_SAMPLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REQ_SAMPLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 13, 2, "RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVT_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "GOVT_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERVICE_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLAIMABLE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CLAIMABLE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONCLAIMABLE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "NONCLAIMABLE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FREE_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "FREE_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL_CLINIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECIAL_CLINIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_APPLICABLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VAT_APPLICABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VAT_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "VAT_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REV_HEAD_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REV_HEAD_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_ACTIVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_ACTIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVG_REQ_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "AVG_REQ_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_REQ_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "MIN_REQ_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COST_PRICE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "COST_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RELEASE_AUTH_LEVEL", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RELEASE_AUTH_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINALIZE_AUTH_LEVEL", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINALIZE_AUTH_LEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPARATION_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPARATION_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPARATION_TAT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "PREPARATION_TAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REPEAT_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REPEAT_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICD_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICD_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACR_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACR_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_CAPTURE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_CAPTURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEF_IMAGES", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEF_IMAGES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_STRUCTURED_REPORT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_STRUCTURED_REPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QA_REQUIRED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QA_REQUIRED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_UPDATED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_UPDATED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_DELETED", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_DELETED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORG_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORG_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATED_BY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATED_BY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATED_ON", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATED_ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_MODIFIED_BY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_MODIFIED_BY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAST_MODIFIED_ON", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LAST_MODIFIED_ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_POSSIBLE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_POSSIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STAT_TAT_MIN", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STAT_TAT_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@URGENT_POSSIBLE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "URGENT_POSSIBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@URGENT_TAT_MIN", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "URGENT_TAT_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFER_HIS_RECONCILE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFER_HIS_RECONCILE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_CHECKUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_CHECKUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VIP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VIP_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF_RAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DF_RAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF_TECH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "DF_TECH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXAM_BARCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_BARCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAN_REQONLINE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAN_REQONLINE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVG_REQ_MIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AVG_REQ_MIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_BIRAD_REPORT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_BIRAD_REPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_SCHEDULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_SCHEDULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_APPROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_APPROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEED_SIDE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEED_SIDE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_CONSULT_CASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_CONSULT_CASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_PORTABLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_PORTABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_COMMENTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_COMMENTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXAM_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXAM_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["RIS_RAMAConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from ris_exam";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsScheduleData.RIS_EXAMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsScheduleData.RIS_EXAMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsScheduleData.RIS_EXAMDataTable dataTable = new dsScheduleData.RIS_EXAMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsScheduleData.RIS_EXAMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsScheduleData dataSet) {
            return this.Adapter.Update(dataSet, "RIS_EXAM");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_EXAM_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_EXAM_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string EXAM_UID, 
                    string GOVT_ID, 
                    string EXAM_NAME, 
                    string REPORT_HEADER, 
                    string REQ_SAMPLE, 
                    global::System.Nullable<decimal> RATE, 
                    global::System.Nullable<decimal> GOVT_RATE, 
                    global::System.Nullable<int> EXAM_TYPE, 
                    string SERVICE_TYPE, 
                    global::System.Nullable<decimal> CLAIMABLE_AMT, 
                    global::System.Nullable<decimal> NONCLAIMABLE_AMT, 
                    global::System.Nullable<decimal> FREE_AMT, 
                    string SPECIAL_CLINIC, 
                    global::System.Nullable<decimal> SPECIAL_RATE, 
                    string VAT_APPLICABLE, 
                    global::System.Nullable<decimal> VAT_RATE, 
                    global::System.Nullable<int> UNIT_ID, 
                    global::System.Nullable<int> REV_HEAD_ID, 
                    string IS_ACTIVE, 
                    global::System.Nullable<decimal> AVG_REQ_HRS, 
                    global::System.Nullable<decimal> MIN_REQ_HRS, 
                    global::System.Nullable<decimal> COST_PRICE, 
                    global::System.Nullable<byte> RELEASE_AUTH_LEVEL, 
                    global::System.Nullable<byte> FINALIZE_AUTH_LEVEL, 
                    string PREPARATION_FLAG, 
                    global::System.Nullable<decimal> PREPARATION_TAT, 
                    string REPEAT_FLAG, 
                    global::System.Nullable<int> ICD_ID, 
                    global::System.Nullable<int> ACR_ID, 
                    global::System.Nullable<int> CPT_ID, 
                    global::System.Nullable<byte> DEF_CAPTURE, 
                    global::System.Nullable<byte> DEF_IMAGES, 
                    string IS_STRUCTURED_REPORT, 
                    string QA_REQUIRED, 
                    string IS_UPDATED, 
                    string IS_DELETED, 
                    global::System.Nullable<int> ORG_ID, 
                    string CREATED_BY, 
                    global::System.Nullable<global::System.DateTime> CREATED_ON, 
                    string LAST_MODIFIED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_MODIFIED_ON, 
                    global::System.Nullable<int> BP_ID, 
                    global::System.Nullable<bool> STAT_POSSIBLE, 
                    global::System.Nullable<byte> STAT_TAT_MIN, 
                    global::System.Nullable<bool> URGENT_POSSIBLE, 
                    global::System.Nullable<byte> URGENT_TAT_MIN, 
                    string DEFER_HIS_RECONCILE, 
                    string IS_CHECKUP, 
                    global::System.Nullable<decimal> VIP_RATE, 
                    global::System.Nullable<decimal> DF_RAD, 
                    global::System.Nullable<decimal> DF_TECH, 
                    string EXAM_BARCODE, 
                    string CAN_REQONLINE, 
                    global::System.Nullable<int> AVG_REQ_MIN, 
                    string IS_BIRAD_REPORT, 
                    string NEED_SCHEDULE, 
                    string NEED_APPROVE, 
                    string NEED_SIDE, 
                    string IS_CONSULT_CASE, 
                    string IS_PORTABLE, 
                    string IS_COMMENTS) {
            if ((EXAM_UID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EXAM_UID));
            }
            if ((GOVT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GOVT_ID));
            }
            if ((EXAM_NAME == null)) {
                throw new global::System.ArgumentNullException("EXAM_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EXAM_NAME));
            }
            if ((REPORT_HEADER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(REPORT_HEADER));
            }
            if ((REQ_SAMPLE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(REQ_SAMPLE));
            }
            if ((RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((GOVT_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(GOVT_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((EXAM_TYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(EXAM_TYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SERVICE_TYPE == null)) {
                throw new global::System.ArgumentNullException("SERVICE_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SERVICE_TYPE));
            }
            if ((CLAIMABLE_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CLAIMABLE_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NONCLAIMABLE_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(NONCLAIMABLE_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FREE_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(FREE_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SPECIAL_CLINIC == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SPECIAL_CLINIC));
            }
            if ((SPECIAL_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(SPECIAL_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((VAT_APPLICABLE == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(VAT_APPLICABLE));
            }
            if ((VAT_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(VAT_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((UNIT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(UNIT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((REV_HEAD_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(REV_HEAD_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IS_ACTIVE == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(IS_ACTIVE));
            }
            if ((AVG_REQ_HRS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(AVG_REQ_HRS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((MIN_REQ_HRS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(MIN_REQ_HRS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((COST_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(COST_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RELEASE_AUTH_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((byte)(RELEASE_AUTH_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((FINALIZE_AUTH_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((byte)(FINALIZE_AUTH_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PREPARATION_FLAG == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(PREPARATION_FLAG));
            }
            if ((PREPARATION_TAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(PREPARATION_TAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((REPEAT_FLAG == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(REPEAT_FLAG));
            }
            if ((ICD_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(ICD_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ACR_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(ACR_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CPT_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(CPT_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((DEF_CAPTURE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(DEF_CAPTURE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((DEF_IMAGES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((byte)(DEF_IMAGES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((IS_STRUCTURED_REPORT == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(IS_STRUCTURED_REPORT));
            }
            if ((QA_REQUIRED == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(QA_REQUIRED));
            }
            if ((IS_UPDATED == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(IS_UPDATED));
            }
            if ((IS_DELETED == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(IS_DELETED));
            }
            if ((ORG_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(ORG_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CREATED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(CREATED_BY));
            }
            if ((CREATED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((System.DateTime)(CREATED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((LAST_MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(LAST_MODIFIED_BY));
            }
            if ((LAST_MODIFIED_ON.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(LAST_MODIFIED_ON.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((BP_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(BP_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((STAT_POSSIBLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(STAT_POSSIBLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((STAT_TAT_MIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((byte)(STAT_TAT_MIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((URGENT_POSSIBLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(URGENT_POSSIBLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((URGENT_TAT_MIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((byte)(URGENT_TAT_MIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DEFER_HIS_RECONCILE == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(DEFER_HIS_RECONCILE));
            }
            if ((IS_CHECKUP == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(IS_CHECKUP));
            }
            if ((VIP_RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(VIP_RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DF_RAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(DF_RAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DF_TECH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(DF_TECH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EXAM_BARCODE == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(EXAM_BARCODE));
            }
            if ((CAN_REQONLINE == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(CAN_REQONLINE));
            }
            if ((AVG_REQ_MIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(AVG_REQ_MIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((IS_BIRAD_REPORT == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(IS_BIRAD_REPORT));
            }
            if ((NEED_SCHEDULE == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(NEED_SCHEDULE));
            }
            if ((NEED_APPROVE == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(NEED_APPROVE));
            }
            if ((NEED_SIDE == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(NEED_SIDE));
            }
            if ((IS_CONSULT_CASE == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(IS_CONSULT_CASE));
            }
            if ((IS_PORTABLE == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(IS_PORTABLE));
            }
            if ((IS_COMMENTS == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(IS_COMMENTS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EXAM_UID, 
                    string GOVT_ID, 
                    string EXAM_NAME, 
                    string REPORT_HEADER, 
                    string REQ_SAMPLE, 
                    global::System.Nullable<decimal> RATE, 
                    global::System.Nullable<decimal> GOVT_RATE, 
                    global::System.Nullable<int> EXAM_TYPE, 
                    string SERVICE_TYPE, 
                    global::System.Nullable<decimal> CLAIMABLE_AMT, 
                    global::System.Nullable<decimal> NONCLAIMABLE_AMT, 
                    global::System.Nullable<decimal> FREE_AMT, 
                    string SPECIAL_CLINIC, 
                    global::System.Nullable<decimal> SPECIAL_RATE, 
                    string VAT_APPLICABLE, 
                    global::System.Nullable<decimal> VAT_RATE, 
                    global::System.Nullable<int> UNIT_ID, 
                    global::System.Nullable<int> REV_HEAD_ID, 
                    string IS_ACTIVE, 
                    global::System.Nullable<decimal> AVG_REQ_HRS, 
                    global::System.Nullable<decimal> MIN_REQ_HRS, 
                    global::System.Nullable<decimal> COST_PRICE, 
                    global::System.Nullable<byte> RELEASE_AUTH_LEVEL, 
                    global::System.Nullable<byte> FINALIZE_AUTH_LEVEL, 
                    string PREPARATION_FLAG, 
                    global::System.Nullable<decimal> PREPARATION_TAT, 
                    string REPEAT_FLAG, 
                    global::System.Nullable<int> ICD_ID, 
                    global::System.Nullable<int> ACR_ID, 
                    global::System.Nullable<int> CPT_ID, 
                    global::System.Nullable<byte> DEF_CAPTURE, 
                    global::System.Nullable<byte> DEF_IMAGES, 
                    string IS_STRUCTURED_REPORT, 
                    string QA_REQUIRED, 
                    string IS_UPDATED, 
                    string IS_DELETED, 
                    global::System.Nullable<int> ORG_ID, 
                    string CREATED_BY, 
                    global::System.Nullable<global::System.DateTime> CREATED_ON, 
                    string LAST_MODIFIED_BY, 
                    global::System.Nullable<global::System.DateTime> LAST_MODIFIED_ON, 
                    global::System.Nullable<int> BP_ID, 
                    global::System.Nullable<bool> STAT_POSSIBLE, 
                    global::System.Nullable<byte> STAT_TAT_MIN, 
                    global::System.Nullable<bool> URGENT_POSSIBLE, 
                    global::System.Nullable<byte> URGENT_TAT_MIN, 
                    string DEFER_HIS_RECONCILE, 
                    string IS_CHECKUP, 
                    global::System.Nullable<decimal> VIP_RATE, 
                    global::System.Nullable<decimal> DF_RAD, 
                    global::System.Nullable<decimal> DF_TECH, 
                    string EXAM_BARCODE, 
                    string CAN_REQONLINE, 
                    global::System.Nullable<int> AVG_REQ_MIN, 
                    string IS_BIRAD_REPORT, 
                    string NEED_SCHEDULE, 
                    string NEED_APPROVE, 
                    string NEED_SIDE, 
                    string IS_CONSULT_CASE, 
                    string IS_PORTABLE, 
                    string IS_COMMENTS, 
                    int Original_EXAM_ID) {
            if ((EXAM_UID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EXAM_UID));
            }
            if ((GOVT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GOVT_ID));
            }
            if ((EXAM_NAME == null)) {
                throw new global::System.ArgumentNullException("EXAM_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EXAM_NAME));
            }
            if ((REPORT_HEADER == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(REPORT_HEADER));
            }
            if ((REQ_SAMPLE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(REQ_SAMPLE));
            }
            if ((RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((GOVT_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(GOVT_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((EXAM_TYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(EXAM_TYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SERVICE_TYPE == null)) {
                throw new global::System.ArgumentNullException("SERVICE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SERVICE_TYPE));
            }
            if ((CLAIMABLE_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CLAIMABLE_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NONCLAIMABLE_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(NONCLAIMABLE_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FREE_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(FREE_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SPECIAL_CLINIC == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SPECIAL_CLINIC));
            }
            if ((SPECIAL_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(SPECIAL_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((VAT_APPLICABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(VAT_APPLICABLE));
            }
            if ((VAT_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(VAT_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((UNIT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(UNIT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((REV_HEAD_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(REV_HEAD_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IS_ACTIVE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(IS_ACTIVE));
            }
            if ((AVG_REQ_HRS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(AVG_REQ_HRS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((MIN_REQ_HRS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(MIN_REQ_HRS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((COST_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(COST_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RELEASE_AUTH_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((byte)(RELEASE_AUTH_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((FINALIZE_AUTH_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((byte)(FINALIZE_AUTH_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PREPARATION_FLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(PREPARATION_FLAG));
            }
            if ((PREPARATION_TAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(PREPARATION_TAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((REPEAT_FLAG == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(REPEAT_FLAG));
            }
            if ((ICD_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ICD_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ACR_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(ACR_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CPT_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(CPT_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((DEF_CAPTURE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(DEF_CAPTURE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((DEF_IMAGES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((byte)(DEF_IMAGES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((IS_STRUCTURED_REPORT == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(IS_STRUCTURED_REPORT));
            }
            if ((QA_REQUIRED == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(QA_REQUIRED));
            }
            if ((IS_UPDATED == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(IS_UPDATED));
            }
            if ((IS_DELETED == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(IS_DELETED));
            }
            if ((ORG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ORG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CREATED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(CREATED_BY));
            }
            if ((CREATED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(CREATED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((LAST_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(LAST_MODIFIED_BY));
            }
            if ((LAST_MODIFIED_ON.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(LAST_MODIFIED_ON.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((BP_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(BP_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((STAT_POSSIBLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(STAT_POSSIBLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((STAT_TAT_MIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((byte)(STAT_TAT_MIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((URGENT_POSSIBLE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(URGENT_POSSIBLE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((URGENT_TAT_MIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((byte)(URGENT_TAT_MIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DEFER_HIS_RECONCILE == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(DEFER_HIS_RECONCILE));
            }
            if ((IS_CHECKUP == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(IS_CHECKUP));
            }
            if ((VIP_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(VIP_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DF_RAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(DF_RAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DF_TECH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(DF_TECH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EXAM_BARCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(EXAM_BARCODE));
            }
            if ((CAN_REQONLINE == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(CAN_REQONLINE));
            }
            if ((AVG_REQ_MIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(AVG_REQ_MIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((IS_BIRAD_REPORT == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(IS_BIRAD_REPORT));
            }
            if ((NEED_SCHEDULE == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(NEED_SCHEDULE));
            }
            if ((NEED_APPROVE == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(NEED_APPROVE));
            }
            if ((NEED_SIDE == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(NEED_SIDE));
            }
            if ((IS_CONSULT_CASE == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(IS_CONSULT_CASE));
            }
            if ((IS_PORTABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(IS_PORTABLE));
            }
            if ((IS_COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(IS_COMMENTS));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_EXAM_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private RIS_EXAMTableAdapter _rIS_EXAMTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RIS_EXAMTableAdapter RIS_EXAMTableAdapter {
            get {
                return this._rIS_EXAMTableAdapter;
            }
            set {
                this._rIS_EXAMTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._rIS_EXAMTableAdapter != null) 
                            && (this._rIS_EXAMTableAdapter.Connection != null))) {
                    return this._rIS_EXAMTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._rIS_EXAMTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsScheduleData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._rIS_EXAMTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RIS_EXAM.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rIS_EXAMTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsScheduleData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._rIS_EXAMTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RIS_EXAM.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rIS_EXAMTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsScheduleData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rIS_EXAMTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RIS_EXAM.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rIS_EXAMTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsScheduleData dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._rIS_EXAMTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rIS_EXAMTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._rIS_EXAMTableAdapter != null)) {
                    revertConnections.Add(this._rIS_EXAMTableAdapter, this._rIS_EXAMTableAdapter.Connection);
                    this._rIS_EXAMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rIS_EXAMTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rIS_EXAMTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rIS_EXAMTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rIS_EXAMTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._rIS_EXAMTableAdapter != null)) {
                    this._rIS_EXAMTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rIS_EXAMTableAdapter]));
                    this._rIS_EXAMTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591